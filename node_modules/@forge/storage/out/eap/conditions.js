"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FilterConditions = exports.WhereConditions = exports.isIn = exports.isNotEqualTo = void 0;
function isNotEqualTo(value) {
    return {
        condition: 'NOT_EQUAL_TO',
        value
    };
}
exports.isNotEqualTo = isNotEqualTo;
function isIn(values) {
    return {
        condition: 'IN',
        value: values
    };
}
exports.isIn = isIn;
function beginsWith(value) {
    return {
        condition: 'BEGINS_WITH',
        values: [value]
    };
}
function between(values) {
    return {
        condition: 'BETWEEN',
        values
    };
}
function exists() {
    return {
        condition: 'EXISTS',
        values: [true]
    };
}
function doesNotExist() {
    return {
        condition: 'NOT_EXISTS',
        values: [true]
    };
}
function isGreaterThan(value) {
    return {
        condition: 'GREATER_THAN',
        values: [value]
    };
}
function isGreaterThanEqualTo(value) {
    return {
        condition: 'GREATER_THAN_EQUAL_TO',
        values: [value]
    };
}
function isLessThan(value) {
    return {
        condition: 'LESS_THAN',
        values: [value]
    };
}
function isLessThanEqualTo(value) {
    return {
        condition: 'LESS_THAN_EQUAL_TO',
        values: [value]
    };
}
function contains(value) {
    return {
        condition: 'CONTAINS',
        values: [value]
    };
}
function doesNotContain(value) {
    return {
        condition: 'NOT_CONTAINS',
        values: [value]
    };
}
function equalsTo(value) {
    return {
        condition: 'EQUAL_TO',
        values: [value]
    };
}
function notEqualsTo(value) {
    return {
        condition: 'NOT_EQUAL_TO',
        values: [value]
    };
}
exports.WhereConditions = {
    beginsWith,
    between,
    equalsTo,
    isGreaterThan,
    isGreaterThanEqualTo,
    isLessThan,
    isLessThanEqualTo
};
exports.FilterConditions = {
    beginsWith,
    between,
    contains,
    doesNotContain,
    equalsTo,
    notEqualsTo,
    exists,
    doesNotExist,
    isGreaterThan,
    isGreaterThanEqualTo,
    isLessThan,
    isLessThanEqualTo
};
