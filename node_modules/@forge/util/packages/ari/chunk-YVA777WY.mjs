import {
  SlackChannelAriResourceOwner,
  SlackChannelAriResourceType
} from "./chunk-EDXGFNFC.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/slack/channel/manifest.ts
var slackChannelAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  resourceOwner: SlackChannelAriResourceOwner,
  resourceType: SlackChannelAriResourceType,
  resourceIdSlug: "workspaceId/{workspaceId}/channelId/{channelId}",
  resourceIdSegmentFormats: {
    workspaceId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/,
    // eslint-disable-line no-useless-escape
    channelId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/slack/channel/index.ts
var SlackChannelAri = class _SlackChannelAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._channelId = opts.resourceIdSegmentValues.channelId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get channelId() {
    return this._channelId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: slackChannelAriStaticOpts.qualifier,
      platformQualifier: slackChannelAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: slackChannelAriStaticOpts.resourceOwner,
      resourceType: slackChannelAriStaticOpts.resourceType,
      resourceId: `workspaceId/${opts.workspaceId}/channelId/${opts.channelId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        channelId: opts.channelId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, slackChannelAriStaticOpts);
    return new _SlackChannelAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, slackChannelAriStaticOpts);
    return new _SlackChannelAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      channelId: this.channelId
    };
  }
};

export {
  SlackChannelAri
};
