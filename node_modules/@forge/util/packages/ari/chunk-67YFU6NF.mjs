import {
  JiraPlanScenarioAriResourceOwner,
  JiraPlanScenarioAriResourceType
} from "./chunk-3RMHOHQK.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/jira/plan-scenario/manifest.ts
var jiraPlanScenarioAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraPlanScenarioAriResourceOwner,
  resourceType: JiraPlanScenarioAriResourceType,
  resourceIdSlug: "activation/{activationId}/{planId}/scenario/{scenarioId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    planId: /[0-9]+/,
    // eslint-disable-line no-useless-escape
    scenarioId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/plan-scenario/index.ts
var JiraPlanScenarioAri = class _JiraPlanScenarioAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._planId = opts.resourceIdSegmentValues.planId, this._scenarioId = opts.resourceIdSegmentValues.scenarioId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get planId() {
    return this._planId;
  }
  get scenarioId() {
    return this._scenarioId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraPlanScenarioAriStaticOpts.qualifier,
      platformQualifier: jiraPlanScenarioAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraPlanScenarioAriStaticOpts.resourceOwner,
      resourceType: jiraPlanScenarioAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.planId}/scenario/${opts.scenarioId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        planId: opts.planId,
        scenarioId: opts.scenarioId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraPlanScenarioAriStaticOpts);
    return new _JiraPlanScenarioAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraPlanScenarioAriStaticOpts);
    return new _JiraPlanScenarioAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      planId: this.planId,
      scenarioId: this.scenarioId
    };
  }
};

export {
  JiraPlanScenarioAri
};
