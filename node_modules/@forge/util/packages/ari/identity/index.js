"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);

// src/identity/index.ts
var identity_exports = {};
__export(identity_exports, {
  IdentityAppAri: () => IdentityAppAri,
  IdentityAuthPolicyAri: () => IdentityAuthPolicyAri,
  IdentityCustomerDirectoryAri: () => IdentityCustomerDirectoryAri,
  IdentityCustomerOrganizationAri: () => IdentityCustomerOrganizationAri,
  IdentityDirectoryAri: () => IdentityDirectoryAri,
  IdentityDomainAri: () => IdentityDomainAri,
  IdentityGroupAri: () => IdentityGroupAri,
  IdentityOauthClientAri: () => IdentityOauthClientAri,
  IdentityRoleAri: () => IdentityRoleAri,
  IdentitySiteAri: () => IdentitySiteAri,
  IdentityTeamAri: () => IdentityTeamAri,
  IdentityTeamMemberAri: () => IdentityTeamMemberAri,
  IdentityThirdPartyGroupAri: () => IdentityThirdPartyGroupAri,
  IdentityThirdPartyUserAri: () => IdentityThirdPartyUserAri,
  IdentityUserAri: () => IdentityUserAri,
  IdentityUserGrantAri: () => IdentityUserGrantAri,
  IdentityUserbaseAri: () => IdentityUserbaseAri
});
module.exports = __toCommonJS(identity_exports);

// src/errors.ts
var ValidationError = class extends Error {
};

// src/core/rules/cloud-id.ts
function validateCloudId(cloudId, format = new RegExp("^[a-zA-Z0-9\\-]*$")) {
  if (!cloudId.match(format))
    throw new ValidationError(`Invalid cloud ID, expected ID of format ${format}.`);
}

// src/core/rules/platform-qualifier.ts
function validatePlatformQualifier(qualifier) {
  if (qualifier !== "cloud" && qualifier !== "third-party")
    throw new ValidationError(`Identifier must have a qualifier of 'cloud' or 'third-party'. Received: ${qualifier}`);
}

// src/core/rules/qualifier.ts
function validateAtiQualifier(qualifier) {
  if (qualifier !== "ati")
    throw new ValidationError(`ATI must have a qualifier of 'ati'. Received: ${qualifier}`);
}
function validateAriQualifier(qualifier) {
  if (qualifier !== "ari")
    throw new ValidationError(`ARI must have a qualifier of 'ari'. Received: ${qualifier}`);
}

// src/core/rules/resource-id.ts
function validateResourceId(id, format = new RegExp("[!a-zA-Z0-9\\-_.~@:{}=]+(/[!a-zA-Z0-9\\-_.~@:{}=]+)*" /* ANY_RESOURCE_ID */), key = "resourceId") {
  let formatWithCarets = new RegExp(`^${format.source}$`);
  if (!id.match(formatWithCarets))
    throw new ValidationError(`Invalid ${key} - ${id}, expected ID of format ${formatWithCarets}.`);
}

// src/core/rules/resource-id-segments.ts
function validateResourceIdSegments(resourceIdSegmentValues, resourceIdSegmentFormats) {
  Object.entries(resourceIdSegmentValues).forEach(([resourceIdKey, resourceIdValue]) => {
    validateResourceId(resourceIdValue, resourceIdSegmentFormats == null ? void 0 : resourceIdSegmentFormats[resourceIdKey], resourceIdKey);
  });
}

// src/core/rules/resource-owner.ts
function validateResourceOwner(owner, expectedResourceOwner) {
  if (expectedResourceOwner && owner !== expectedResourceOwner)
    throw new ValidationError(`Invalid resource owner - ${owner}, expected ${expectedResourceOwner}.`);
}

// src/core/rules/resource-type.ts
function validateResourceType(type, expectedResourceType) {
  if (expectedResourceType && type !== expectedResourceType)
    throw new ValidationError(`Invalid resource type - ${type}, expected ${expectedResourceType}.`);
}

// src/core/parser/base.ts
var NUMBER_OF_BASE_SEGMENTS = 5, SEGMENT_SEPARATOR = ":", BaseParser = class {
  static getIdentifierSegments(inputStr, numberOfSegmentsRequired) {
    let allSegments = inputStr.split(SEGMENT_SEPARATOR);
    if (allSegments.length < numberOfSegmentsRequired)
      throw new ValidationError(`Input string must have ${numberOfSegmentsRequired} segments.`);
    if (allSegments.length > numberOfSegmentsRequired) {
      let segments = allSegments.slice(0, NUMBER_OF_BASE_SEGMENTS - 1), segmentsForResourceId = allSegments.slice(NUMBER_OF_BASE_SEGMENTS - 1, allSegments.length);
      return [...segments, segmentsForResourceId.join(SEGMENT_SEPARATOR)];
    }
    return allSegments;
  }
};

// src/core/parser/ari.ts
var NUMBER_OF_ARI_SEGMENTS = 5, AriParser = class extends BaseParser {
  static fromString(maybeAri, ariProperties) {
    let segments = this.getIdentifierSegments(maybeAri, NUMBER_OF_ARI_SEGMENTS), [qualifier, platformQualifier, resourceOwner, cloudId, resourceTypeAndId] = segments, [resourceType, ...resourceIdSegments] = resourceTypeAndId.split("/"), maybeAriDerivedProperties = {
      qualifier,
      platformQualifier,
      cloudId,
      resourceOwner,
      resourceType,
      resourceId: resourceIdSegments.join("/"),
      resourceIdSegmentValues: ariProperties != null && ariProperties.resourceIdSlug ? this.ariSegmentValuesFromSlug(
        ariProperties.resourceIdSlug,
        resourceIdSegments.join("/"),
        Object.keys(ariProperties.resourceIdSegmentFormats)
      ) : {}
    };
    return this.fromOpts(maybeAriDerivedProperties, ariProperties);
  }
  static fromOpts(maybeAriOpts, ariProperties) {
    let {
      qualifier = "ari",
      platformQualifier = "cloud",
      resourceOwner,
      cloudId,
      resourceId,
      resourceIdSegmentValues,
      resourceType
    } = maybeAriOpts;
    return validateAriQualifier(qualifier), validatePlatformQualifier(platformQualifier), validateCloudId(maybeAriOpts.cloudId || "", ariProperties == null ? void 0 : ariProperties.cloudId), validateResourceOwner(resourceOwner, ariProperties == null ? void 0 : ariProperties.resourceOwner), validateResourceType(resourceType, ariProperties == null ? void 0 : ariProperties.resourceType), validateResourceIdSegments(resourceIdSegmentValues, ariProperties == null ? void 0 : ariProperties.resourceIdSegmentFormats), {
      qualifier,
      resourceOwner,
      resourceType,
      platformQualifier,
      cloudId,
      resourceId,
      resourceIdSegmentValues
    };
  }
  static ariSegmentValuesFromSlug(slug, incomingSegments, expectedKeys) {
    let regexpResult = new RegExp("^" + slug.replace(/\{(.*?)\}/g, "(?<$1>.*?)") + "$").exec(incomingSegments);
    if (!regexpResult)
      throw new ValidationError(`Segment '${incomingSegments}' don't match expected slug: ${slug}`);
    return expectedKeys.forEach((expectedKey) => {
      var _a;
      if (!((_a = regexpResult.groups) != null && _a[expectedKey]))
        throw new ValidationError(`No value supplied for '${expectedKey}' based on slug ${slug}`);
    }), regexpResult.groups || {};
  }
};

// src/core/parser/ati.ts
var NUMBER_OF_ATI_SEGMENTS = 4, AtiParser = class extends BaseParser {
  static fromString(inputStr, atiOpts) {
    let segments = this.getIdentifierSegments(inputStr, NUMBER_OF_ATI_SEGMENTS), [qualifier = "ati", platformQualifier = "cloud", resourceOwner, resourceType] = segments;
    return validateAtiQualifier(qualifier), validatePlatformQualifier(platformQualifier), validateResourceOwner(resourceOwner, atiOpts == null ? void 0 : atiOpts.resourceOwner), validateResourceType(resourceType, atiOpts == null ? void 0 : atiOpts.resourceType), { platformQualifier, resourceOwner, resourceType };
  }
  static fromOpts(maybeAtiOpts, atiOpts) {
    let { qualifier, platformQualifier, resourceOwner, resourceType } = maybeAtiOpts;
    return validateAtiQualifier(qualifier), validatePlatformQualifier(platformQualifier), validateResourceOwner(resourceOwner, atiOpts == null ? void 0 : atiOpts.resourceOwner), validateResourceType(resourceType, atiOpts == null ? void 0 : atiOpts.resourceType), {
      platformQualifier,
      resourceOwner,
      resourceType
    };
  }
};

// src/ati.ts
var Ati = class _Ati {
  constructor(platformQualifier, resourceOwner, resourceType) {
    this._platformQualifier = platformQualifier, this._resourceOwner = resourceOwner, this._resourceType = resourceType;
  }
  get platformQualifier() {
    return this._platformQualifier;
  }
  get resourceOwner() {
    return this._resourceOwner;
  }
  get resourceType() {
    return this._resourceType;
  }
  static create(opts) {
    return new _Ati(opts.platformQualifier || "cloud", opts.resourceOwner, opts.resourceType);
  }
  static parse(maybeAti, atiOpts) {
    let opts = AtiParser.fromString(maybeAti, atiOpts);
    return new _Ati(opts.platformQualifier, opts.resourceOwner, opts.resourceType);
  }
  toString() {
    return `ati:${this.platformQualifier}:${this.resourceOwner}:${this.resourceType}`;
  }
  toJSON() {
    return this.toString();
  }
  toOpts() {
    return {
      platformQualifier: this._platformQualifier,
      resourceOwner: this._resourceOwner,
      resourceType: this._resourceType
    };
  }
};

// src/core/ari.ts
var Ari = class {
  constructor(opts) {
    this._ati = Ati.create({
      platformQualifier: opts.platformQualifier || "cloud",
      resourceOwner: opts.resourceOwner,
      resourceType: opts.resourceType
    }), this._cloudId = opts.cloudId !== "" ? opts.cloudId : void 0, this._resourceId = opts.resourceId;
  }
  get platformQualifier() {
    return this._ati.platformQualifier;
  }
  get cloudId() {
    return this._cloudId;
  }
  get resourceOwner() {
    return this._ati.resourceOwner;
  }
  get resourceType() {
    return this._ati.resourceType;
  }
  get resourceId() {
    return this._resourceId;
  }
  get ati() {
    return this._ati;
  }
  equals(other) {
    return this.toString() === other.toString();
  }
  toString() {
    return `ari:${this.platformQualifier}:${this.resourceOwner}:${this.cloudId || ""}:${this.resourceType}/${this.resourceId}`;
  }
  toJSON() {
    return this.toString();
  }
  toOpts() {
    return {
      platformQualifier: this.platformQualifier,
      resourceOwner: this.resourceOwner,
      cloudId: this.cloudId,
      resourceType: this.resourceType,
      resourceId: this.resourceId
    };
  }
};

// src/any-ari.ts
var AnyAri = class _AnyAri extends Ari {
  constructor(opts) {
    super(opts);
  }
  static create(ariOpts, ariStaticOpts) {
    let ariOptsWithDefaults = { ...ariOpts, resourceIdSegmentValues: {} }, validatedOpts = AriParser.fromOpts(ariOptsWithDefaults, ariStaticOpts);
    return new _AnyAri(validatedOpts);
  }
  static parse(maybeAri, ariStaticOpts) {
    let validatedOpts = AriParser.fromString(maybeAri, ariStaticOpts);
    return new _AnyAri(validatedOpts);
  }
  static check(maybeAri) {
    try {
      return _AnyAri.parse(maybeAri.toString()), !0;
    } catch (err) {
      return !1;
    }
  }
  asAnyAri() {
    return this;
  }
};

// src/core/registered-ari.ts
var RegisteredAri = class extends Ari {
  static check(maybeAri) {
    try {
      return this.parse(maybeAri.toString()), !0;
    } catch (err) {
      return !1;
    }
  }
  asAnyAri() {
    return AnyAri.parse(this.toString());
  }
};

// src/identity/app/types.ts
var IdentityAppAriResourceOwner = "identity", IdentityAppAriResourceType = "app";

// src/identity/app/manifest.ts
var identityAppAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: IdentityAppAriResourceOwner,
  resourceType: IdentityAppAriResourceType,
  resourceIdSlug: "{platform}/{appId}",
  resourceIdSegmentFormats: {
    platform: /(android|ios|macos)/,
    // eslint-disable-line no-useless-escape
    appId: /(([a-zA-Z]+)\.)+([a-zA-Z]+)/
    // eslint-disable-line no-useless-escape
  }
};

// src/identity/app/index.ts
var IdentityAppAri = class _IdentityAppAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._platform = opts.resourceIdSegmentValues.platform, this._appId = opts.resourceIdSegmentValues.appId;
  }
  get platform() {
    return this._platform;
  }
  get appId() {
    return this._appId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: identityAppAriStaticOpts.qualifier,
      platformQualifier: identityAppAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: identityAppAriStaticOpts.resourceOwner,
      resourceType: identityAppAriStaticOpts.resourceType,
      resourceId: `${opts.platform}/${opts.appId}`,
      resourceIdSegmentValues: {
        platform: opts.platform,
        appId: opts.appId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, identityAppAriStaticOpts);
    return new _IdentityAppAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, identityAppAriStaticOpts);
    return new _IdentityAppAri(opts);
  }
  getVariables() {
    return {
      platform: this.platform,
      appId: this.appId
    };
  }
};

// src/identity/auth-policy/types.ts
var IdentityAuthPolicyAriResourceOwner = "identity", IdentityAuthPolicyAriResourceType = "auth-policy";

// src/identity/auth-policy/manifest.ts
var identityAuthPolicyAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: IdentityAuthPolicyAriResourceOwner,
  resourceType: IdentityAuthPolicyAriResourceType,
  resourceIdSlug: "{authPolicyId}",
  resourceIdSegmentFormats: {
    authPolicyId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/identity/auth-policy/index.ts
var IdentityAuthPolicyAri = class _IdentityAuthPolicyAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._authPolicyId = opts.resourceIdSegmentValues.authPolicyId;
  }
  get authPolicyId() {
    return this._authPolicyId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: identityAuthPolicyAriStaticOpts.qualifier,
      platformQualifier: identityAuthPolicyAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: identityAuthPolicyAriStaticOpts.resourceOwner,
      resourceType: identityAuthPolicyAriStaticOpts.resourceType,
      resourceId: `${opts.authPolicyId}`,
      resourceIdSegmentValues: {
        authPolicyId: opts.authPolicyId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, identityAuthPolicyAriStaticOpts);
    return new _IdentityAuthPolicyAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, identityAuthPolicyAriStaticOpts);
    return new _IdentityAuthPolicyAri(opts);
  }
  getVariables() {
    return {
      authPolicyId: this.authPolicyId
    };
  }
};

// src/identity/customer-directory/types.ts
var IdentityCustomerDirectoryAriResourceOwner = "identity", IdentityCustomerDirectoryAriResourceType = "customer-directory";

// src/identity/customer-directory/manifest.ts
var identityCustomerDirectoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: IdentityCustomerDirectoryAriResourceOwner,
  resourceType: IdentityCustomerDirectoryAriResourceType,
  resourceIdSlug: "{customerDirectoryId}",
  resourceIdSegmentFormats: {
    customerDirectoryId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/identity/customer-directory/index.ts
var IdentityCustomerDirectoryAri = class _IdentityCustomerDirectoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._customerDirectoryId = opts.resourceIdSegmentValues.customerDirectoryId;
  }
  get customerDirectoryId() {
    return this._customerDirectoryId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: identityCustomerDirectoryAriStaticOpts.qualifier,
      platformQualifier: identityCustomerDirectoryAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: identityCustomerDirectoryAriStaticOpts.resourceOwner,
      resourceType: identityCustomerDirectoryAriStaticOpts.resourceType,
      resourceId: `${opts.customerDirectoryId}`,
      resourceIdSegmentValues: {
        customerDirectoryId: opts.customerDirectoryId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, identityCustomerDirectoryAriStaticOpts);
    return new _IdentityCustomerDirectoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, identityCustomerDirectoryAriStaticOpts);
    return new _IdentityCustomerDirectoryAri(opts);
  }
  getVariables() {
    return {
      customerDirectoryId: this.customerDirectoryId
    };
  }
};

// src/identity/customer-organization/types.ts
var IdentityCustomerOrganizationAriResourceOwner = "identity", IdentityCustomerOrganizationAriResourceType = "customer-organization";

// src/identity/customer-organization/manifest.ts
var identityCustomerOrganizationAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: IdentityCustomerOrganizationAriResourceOwner,
  resourceType: IdentityCustomerOrganizationAriResourceType,
  resourceIdSlug: "{customerOrganizationId}",
  resourceIdSegmentFormats: {
    customerOrganizationId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/identity/customer-organization/index.ts
var IdentityCustomerOrganizationAri = class _IdentityCustomerOrganizationAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._customerOrganizationId = opts.resourceIdSegmentValues.customerOrganizationId;
  }
  get customerOrganizationId() {
    return this._customerOrganizationId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: identityCustomerOrganizationAriStaticOpts.qualifier,
      platformQualifier: identityCustomerOrganizationAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: identityCustomerOrganizationAriStaticOpts.resourceOwner,
      resourceType: identityCustomerOrganizationAriStaticOpts.resourceType,
      resourceId: `${opts.customerOrganizationId}`,
      resourceIdSegmentValues: {
        customerOrganizationId: opts.customerOrganizationId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, identityCustomerOrganizationAriStaticOpts);
    return new _IdentityCustomerOrganizationAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, identityCustomerOrganizationAriStaticOpts);
    return new _IdentityCustomerOrganizationAri(opts);
  }
  getVariables() {
    return {
      customerOrganizationId: this.customerOrganizationId
    };
  }
};

// src/identity/directory/types.ts
var IdentityDirectoryAriResourceOwner = "identity", IdentityDirectoryAriResourceType = "directory";

// src/identity/directory/manifest.ts
var identityDirectoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: IdentityDirectoryAriResourceOwner,
  resourceType: IdentityDirectoryAriResourceType,
  resourceIdSlug: "{directoryId}",
  resourceIdSegmentFormats: {
    directoryId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/identity/directory/index.ts
var IdentityDirectoryAri = class _IdentityDirectoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._directoryId = opts.resourceIdSegmentValues.directoryId;
  }
  get directoryId() {
    return this._directoryId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: identityDirectoryAriStaticOpts.qualifier,
      platformQualifier: identityDirectoryAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: identityDirectoryAriStaticOpts.resourceOwner,
      resourceType: identityDirectoryAriStaticOpts.resourceType,
      resourceId: `${opts.directoryId}`,
      resourceIdSegmentValues: {
        directoryId: opts.directoryId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, identityDirectoryAriStaticOpts);
    return new _IdentityDirectoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, identityDirectoryAriStaticOpts);
    return new _IdentityDirectoryAri(opts);
  }
  getVariables() {
    return {
      directoryId: this.directoryId
    };
  }
};

// src/identity/domain/types.ts
var IdentityDomainAriResourceOwner = "identity", IdentityDomainAriResourceType = "domain";

// src/identity/domain/manifest.ts
var identityDomainAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: IdentityDomainAriResourceOwner,
  resourceType: IdentityDomainAriResourceType,
  resourceIdSlug: "{base64Domain}",
  resourceIdSegmentFormats: {
    base64Domain: /[a-zA-Z0-9=]+={0,1}/
    // eslint-disable-line no-useless-escape
  }
};

// src/identity/domain/index.ts
var IdentityDomainAri = class _IdentityDomainAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._base64Domain = opts.resourceIdSegmentValues.base64Domain;
  }
  get base64Domain() {
    return this._base64Domain;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: identityDomainAriStaticOpts.qualifier,
      platformQualifier: identityDomainAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: identityDomainAriStaticOpts.resourceOwner,
      resourceType: identityDomainAriStaticOpts.resourceType,
      resourceId: `${opts.base64Domain}`,
      resourceIdSegmentValues: {
        base64Domain: opts.base64Domain
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, identityDomainAriStaticOpts);
    return new _IdentityDomainAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, identityDomainAriStaticOpts);
    return new _IdentityDomainAri(opts);
  }
  getVariables() {
    return {
      base64Domain: this.base64Domain
    };
  }
};

// src/identity/group/types.ts
var IdentityGroupAriResourceOwner = "identity", IdentityGroupAriResourceType = "group";

// src/identity/group/manifest.ts
var identityGroupAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: IdentityGroupAriResourceOwner,
  resourceType: IdentityGroupAriResourceType,
  resourceIdSlug: "{groupId}",
  resourceIdSegmentFormats: {
    groupId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/identity/group/index.ts
var IdentityGroupAri = class _IdentityGroupAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._groupId = opts.resourceIdSegmentValues.groupId;
  }
  get groupId() {
    return this._groupId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: identityGroupAriStaticOpts.qualifier,
      platformQualifier: identityGroupAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: identityGroupAriStaticOpts.resourceOwner,
      resourceType: identityGroupAriStaticOpts.resourceType,
      resourceId: `${opts.groupId}`,
      resourceIdSegmentValues: {
        groupId: opts.groupId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, identityGroupAriStaticOpts);
    return new _IdentityGroupAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, identityGroupAriStaticOpts);
    return new _IdentityGroupAri(opts);
  }
  getVariables() {
    return {
      groupId: this.groupId
    };
  }
};

// src/identity/oauthClient/types.ts
var IdentityOauthClientAriResourceOwner = "identity", IdentityOauthClientAriResourceType = "oauthClient";

// src/identity/oauthClient/manifest.ts
var identityOauthClientAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: IdentityOauthClientAriResourceOwner,
  resourceType: IdentityOauthClientAriResourceType,
  resourceIdSlug: "{clientId}",
  resourceIdSegmentFormats: {
    clientId: /[0-9a-zA-Z-_]{5,50}/
    // eslint-disable-line no-useless-escape
  }
};

// src/identity/oauthClient/index.ts
var IdentityOauthClientAri = class _IdentityOauthClientAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._clientId = opts.resourceIdSegmentValues.clientId;
  }
  get clientId() {
    return this._clientId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: identityOauthClientAriStaticOpts.qualifier,
      platformQualifier: identityOauthClientAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: identityOauthClientAriStaticOpts.resourceOwner,
      resourceType: identityOauthClientAriStaticOpts.resourceType,
      resourceId: `${opts.clientId}`,
      resourceIdSegmentValues: {
        clientId: opts.clientId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, identityOauthClientAriStaticOpts);
    return new _IdentityOauthClientAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, identityOauthClientAriStaticOpts);
    return new _IdentityOauthClientAri(opts);
  }
  getVariables() {
    return {
      clientId: this.clientId
    };
  }
};

// src/identity/role/types.ts
var IdentityRoleAriResourceOwner = "identity", IdentityRoleAriResourceType = "role";

// src/identity/role/manifest.ts
var identityRoleAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]*$"),
  resourceOwner: IdentityRoleAriResourceOwner,
  resourceType: IdentityRoleAriResourceType,
  resourceIdSlug: "{roleId}",
  resourceIdSegmentFormats: {
    roleId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/identity/role/index.ts
var IdentityRoleAri = class _IdentityRoleAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._optionalSiteId = opts.cloudId || "", this._roleId = opts.resourceIdSegmentValues.roleId;
  }
  get optionalSiteId() {
    return this._optionalSiteId;
  }
  get roleId() {
    return this._roleId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: identityRoleAriStaticOpts.qualifier,
      platformQualifier: identityRoleAriStaticOpts.platformQualifier,
      cloudId: opts.optionalSiteId,
      resourceOwner: identityRoleAriStaticOpts.resourceOwner,
      resourceType: identityRoleAriStaticOpts.resourceType,
      resourceId: `${opts.roleId}`,
      resourceIdSegmentValues: {
        roleId: opts.roleId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, identityRoleAriStaticOpts);
    return new _IdentityRoleAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, identityRoleAriStaticOpts);
    return new _IdentityRoleAri(opts);
  }
  getVariables() {
    return {
      optionalSiteId: this.optionalSiteId,
      roleId: this.roleId
    };
  }
};

// src/identity/site/types.ts
var IdentitySiteAriResourceOwner = "identity", IdentitySiteAriResourceType = "site";

// src/identity/site/manifest.ts
var identitySiteAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: IdentitySiteAriResourceOwner,
  resourceType: IdentitySiteAriResourceType,
  resourceIdSlug: "{siteId}",
  resourceIdSegmentFormats: {
    siteId: /[a-zA-Z0-9\-]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/identity/site/index.ts
var IdentitySiteAri = class _IdentitySiteAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.resourceIdSegmentValues.siteId;
  }
  get siteId() {
    return this._siteId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: identitySiteAriStaticOpts.qualifier,
      platformQualifier: identitySiteAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: identitySiteAriStaticOpts.resourceOwner,
      resourceType: identitySiteAriStaticOpts.resourceType,
      resourceId: `${opts.siteId}`,
      resourceIdSegmentValues: {
        siteId: opts.siteId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, identitySiteAriStaticOpts);
    return new _IdentitySiteAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, identitySiteAriStaticOpts);
    return new _IdentitySiteAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId
    };
  }
};

// src/identity/team/types.ts
var IdentityTeamAriResourceOwner = "identity", IdentityTeamAriResourceType = "team";

// src/identity/team/manifest.ts
var identityTeamAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: IdentityTeamAriResourceOwner,
  resourceType: IdentityTeamAriResourceType,
  resourceIdSlug: "{teamId}",
  resourceIdSegmentFormats: {
    teamId: /[a-zA-Z0-9.\-_~]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/identity/team/index.ts
var IdentityTeamAri = class _IdentityTeamAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._teamId = opts.resourceIdSegmentValues.teamId;
  }
  get teamId() {
    return this._teamId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: identityTeamAriStaticOpts.qualifier,
      platformQualifier: identityTeamAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: identityTeamAriStaticOpts.resourceOwner,
      resourceType: identityTeamAriStaticOpts.resourceType,
      resourceId: `${opts.teamId}`,
      resourceIdSegmentValues: {
        teamId: opts.teamId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, identityTeamAriStaticOpts);
    return new _IdentityTeamAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, identityTeamAriStaticOpts);
    return new _IdentityTeamAri(opts);
  }
  getVariables() {
    return {
      teamId: this.teamId
    };
  }
};

// src/identity/team-member/types.ts
var IdentityTeamMemberAriResourceOwner = "identity", IdentityTeamMemberAriResourceType = "team-member";

// src/identity/team-member/manifest.ts
var identityTeamMemberAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: IdentityTeamMemberAriResourceOwner,
  resourceType: IdentityTeamMemberAriResourceType,
  resourceIdSlug: "{teamId}/{userId}",
  resourceIdSegmentFormats: {
    teamId: /[a-zA-Z0-9.\-_~]+/,
    // eslint-disable-line no-useless-escape
    userId: /[a-zA-Z0-9_\-\:]{1,128}/
    // eslint-disable-line no-useless-escape
  }
};

// src/identity/team-member/index.ts
var IdentityTeamMemberAri = class _IdentityTeamMemberAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._teamId = opts.resourceIdSegmentValues.teamId, this._userId = opts.resourceIdSegmentValues.userId;
  }
  get teamId() {
    return this._teamId;
  }
  get userId() {
    return this._userId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: identityTeamMemberAriStaticOpts.qualifier,
      platformQualifier: identityTeamMemberAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: identityTeamMemberAriStaticOpts.resourceOwner,
      resourceType: identityTeamMemberAriStaticOpts.resourceType,
      resourceId: `${opts.teamId}/${opts.userId}`,
      resourceIdSegmentValues: {
        teamId: opts.teamId,
        userId: opts.userId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, identityTeamMemberAriStaticOpts);
    return new _IdentityTeamMemberAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, identityTeamMemberAriStaticOpts);
    return new _IdentityTeamMemberAri(opts);
  }
  getVariables() {
    return {
      teamId: this.teamId,
      userId: this.userId
    };
  }
};

// src/identity/third-party-group/types.ts
var IdentityThirdPartyGroupAriResourceOwner = "identity", IdentityThirdPartyGroupAriResourceType = "third-party-group";

// src/identity/third-party-group/manifest.ts
var identityThirdPartyGroupAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: IdentityThirdPartyGroupAriResourceOwner,
  resourceType: IdentityThirdPartyGroupAriResourceType,
  resourceIdSlug: "{directoryId}/{groupId}",
  resourceIdSegmentFormats: {
    directoryId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    groupId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/identity/third-party-group/index.ts
var IdentityThirdPartyGroupAri = class _IdentityThirdPartyGroupAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._directoryId = opts.resourceIdSegmentValues.directoryId, this._groupId = opts.resourceIdSegmentValues.groupId;
  }
  get directoryId() {
    return this._directoryId;
  }
  get groupId() {
    return this._groupId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: identityThirdPartyGroupAriStaticOpts.qualifier,
      platformQualifier: identityThirdPartyGroupAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: identityThirdPartyGroupAriStaticOpts.resourceOwner,
      resourceType: identityThirdPartyGroupAriStaticOpts.resourceType,
      resourceId: `${opts.directoryId}/${opts.groupId}`,
      resourceIdSegmentValues: {
        directoryId: opts.directoryId,
        groupId: opts.groupId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, identityThirdPartyGroupAriStaticOpts);
    return new _IdentityThirdPartyGroupAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, identityThirdPartyGroupAriStaticOpts);
    return new _IdentityThirdPartyGroupAri(opts);
  }
  getVariables() {
    return {
      directoryId: this.directoryId,
      groupId: this.groupId
    };
  }
};

// src/identity/third-party-user/types.ts
var IdentityThirdPartyUserAriResourceOwner = "identity", IdentityThirdPartyUserAriResourceType = "third-party-user";

// src/identity/third-party-user/manifest.ts
var identityThirdPartyUserAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: IdentityThirdPartyUserAriResourceOwner,
  resourceType: IdentityThirdPartyUserAriResourceType,
  resourceIdSlug: "{directoryId}/{userId}",
  resourceIdSegmentFormats: {
    directoryId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    userId: /[a-zA-Z0-9_\-\:]{1,128}/
    // eslint-disable-line no-useless-escape
  }
};

// src/identity/third-party-user/index.ts
var IdentityThirdPartyUserAri = class _IdentityThirdPartyUserAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._directoryId = opts.resourceIdSegmentValues.directoryId, this._userId = opts.resourceIdSegmentValues.userId;
  }
  get directoryId() {
    return this._directoryId;
  }
  get userId() {
    return this._userId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: identityThirdPartyUserAriStaticOpts.qualifier,
      platformQualifier: identityThirdPartyUserAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: identityThirdPartyUserAriStaticOpts.resourceOwner,
      resourceType: identityThirdPartyUserAriStaticOpts.resourceType,
      resourceId: `${opts.directoryId}/${opts.userId}`,
      resourceIdSegmentValues: {
        directoryId: opts.directoryId,
        userId: opts.userId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, identityThirdPartyUserAriStaticOpts);
    return new _IdentityThirdPartyUserAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, identityThirdPartyUserAriStaticOpts);
    return new _IdentityThirdPartyUserAri(opts);
  }
  getVariables() {
    return {
      directoryId: this.directoryId,
      userId: this.userId
    };
  }
};

// src/identity/user/types.ts
var IdentityUserAriResourceOwner = "identity", IdentityUserAriResourceType = "user";

// src/identity/user/manifest.ts
var identityUserAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: IdentityUserAriResourceOwner,
  resourceType: IdentityUserAriResourceType,
  resourceIdSlug: "{userId}",
  resourceIdSegmentFormats: {
    userId: /[a-zA-Z0-9_\-\:]{1,128}/
    // eslint-disable-line no-useless-escape
  }
};

// src/identity/user/index.ts
var IdentityUserAri = class _IdentityUserAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._userId = opts.resourceIdSegmentValues.userId;
  }
  get userId() {
    return this._userId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: identityUserAriStaticOpts.qualifier,
      platformQualifier: identityUserAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: identityUserAriStaticOpts.resourceOwner,
      resourceType: identityUserAriStaticOpts.resourceType,
      resourceId: `${opts.userId}`,
      resourceIdSegmentValues: {
        userId: opts.userId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, identityUserAriStaticOpts);
    return new _IdentityUserAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, identityUserAriStaticOpts);
    return new _IdentityUserAri(opts);
  }
  getVariables() {
    return {
      userId: this.userId
    };
  }
};

// src/identity/userbase/types.ts
var IdentityUserbaseAriResourceOwner = "identity", IdentityUserbaseAriResourceType = "userbase";

// src/identity/userbase/manifest.ts
var identityUserbaseAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: IdentityUserbaseAriResourceOwner,
  resourceType: IdentityUserbaseAriResourceType,
  resourceIdSlug: "{userbaseId}",
  resourceIdSegmentFormats: {
    userbaseId: /[a-zA-Z0-9\-]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/identity/userbase/index.ts
var IdentityUserbaseAri = class _IdentityUserbaseAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._userbaseId = opts.resourceIdSegmentValues.userbaseId;
  }
  get userbaseId() {
    return this._userbaseId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: identityUserbaseAriStaticOpts.qualifier,
      platformQualifier: identityUserbaseAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: identityUserbaseAriStaticOpts.resourceOwner,
      resourceType: identityUserbaseAriStaticOpts.resourceType,
      resourceId: `${opts.userbaseId}`,
      resourceIdSegmentValues: {
        userbaseId: opts.userbaseId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, identityUserbaseAriStaticOpts);
    return new _IdentityUserbaseAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, identityUserbaseAriStaticOpts);
    return new _IdentityUserbaseAri(opts);
  }
  getVariables() {
    return {
      userbaseId: this.userbaseId
    };
  }
};

// src/identity/userGrant/types.ts
var IdentityUserGrantAriResourceOwner = "identity", IdentityUserGrantAriResourceType = "userGrant";

// src/identity/userGrant/manifest.ts
var identityUserGrantAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: IdentityUserGrantAriResourceOwner,
  resourceType: IdentityUserGrantAriResourceType,
  resourceIdSlug: "{userId}-{clientId}",
  resourceIdSegmentFormats: {
    userId: /[a-zA-Z0-9_\-\:]{1,128}/,
    // eslint-disable-line no-useless-escape
    clientId: /[0-9a-zA-Z-_]{5,50}/
    // eslint-disable-line no-useless-escape
  }
};

// src/identity/userGrant/index.ts
var IdentityUserGrantAri = class _IdentityUserGrantAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._userId = opts.resourceIdSegmentValues.userId, this._clientId = opts.resourceIdSegmentValues.clientId;
  }
  get userId() {
    return this._userId;
  }
  get clientId() {
    return this._clientId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: identityUserGrantAriStaticOpts.qualifier,
      platformQualifier: identityUserGrantAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: identityUserGrantAriStaticOpts.resourceOwner,
      resourceType: identityUserGrantAriStaticOpts.resourceType,
      resourceId: `${opts.userId}-${opts.clientId}`,
      resourceIdSegmentValues: {
        userId: opts.userId,
        clientId: opts.clientId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, identityUserGrantAriStaticOpts);
    return new _IdentityUserGrantAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, identityUserGrantAriStaticOpts);
    return new _IdentityUserGrantAri(opts);
  }
  getVariables() {
    return {
      userId: this.userId,
      clientId: this.clientId
    };
  }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  IdentityAppAri,
  IdentityAuthPolicyAri,
  IdentityCustomerDirectoryAri,
  IdentityCustomerOrganizationAri,
  IdentityDirectoryAri,
  IdentityDomainAri,
  IdentityGroupAri,
  IdentityOauthClientAri,
  IdentityRoleAri,
  IdentitySiteAri,
  IdentityTeamAri,
  IdentityTeamMemberAri,
  IdentityThirdPartyGroupAri,
  IdentityThirdPartyUserAri,
  IdentityUserAri,
  IdentityUserGrantAri,
  IdentityUserbaseAri
});
