import {
  IdentityAppAriResourceOwner,
  IdentityAppAriResourceType
} from "./chunk-QULKIQO5.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/identity/app/manifest.ts
var identityAppAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: IdentityAppAriResourceOwner,
  resourceType: IdentityAppAriResourceType,
  resourceIdSlug: "{platform}/{appId}",
  resourceIdSegmentFormats: {
    platform: /(android|ios|macos)/,
    // eslint-disable-line no-useless-escape
    appId: /(([a-zA-Z]+)\.)+([a-zA-Z]+)/
    // eslint-disable-line no-useless-escape
  }
};

// src/identity/app/index.ts
var IdentityAppAri = class _IdentityAppAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._platform = opts.resourceIdSegmentValues.platform, this._appId = opts.resourceIdSegmentValues.appId;
  }
  get platform() {
    return this._platform;
  }
  get appId() {
    return this._appId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: identityAppAriStaticOpts.qualifier,
      platformQualifier: identityAppAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: identityAppAriStaticOpts.resourceOwner,
      resourceType: identityAppAriStaticOpts.resourceType,
      resourceId: `${opts.platform}/${opts.appId}`,
      resourceIdSegmentValues: {
        platform: opts.platform,
        appId: opts.appId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, identityAppAriStaticOpts);
    return new _IdentityAppAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, identityAppAriStaticOpts);
    return new _IdentityAppAri(opts);
  }
  getVariables() {
    return {
      platform: this.platform,
      appId: this.appId
    };
  }
};

export {
  IdentityAppAri
};
