import {
  CanvasWorkspaceAriResourceOwner,
  CanvasWorkspaceAriResourceType
} from "./chunk-RSJD3TU6.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/canvas/workspace/manifest.ts
var canvasWorkspaceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: CanvasWorkspaceAriResourceOwner,
  resourceType: CanvasWorkspaceAriResourceType,
  resourceIdSlug: "{workspaceId}",
  resourceIdSegmentFormats: {
    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/canvas/workspace/index.ts
var CanvasWorkspaceAri = class _CanvasWorkspaceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: canvasWorkspaceAriStaticOpts.qualifier,
      platformQualifier: canvasWorkspaceAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: canvasWorkspaceAriStaticOpts.resourceOwner,
      resourceType: canvasWorkspaceAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, canvasWorkspaceAriStaticOpts);
    return new _CanvasWorkspaceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, canvasWorkspaceAriStaticOpts);
    return new _CanvasWorkspaceAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId
    };
  }
};

export {
  CanvasWorkspaceAri
};
