import {
  CmdbObjectAriResourceOwner,
  CmdbObjectAriResourceType
} from "./chunk-BZ6D72WR.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/cmdb/object/manifest.ts
var cmdbObjectAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: CmdbObjectAriResourceOwner,
  resourceType: CmdbObjectAriResourceType,
  resourceIdSlug: "{workspaceId}/{objectId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    objectId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/cmdb/object/index.ts
var CmdbObjectAri = class _CmdbObjectAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._objectId = opts.resourceIdSegmentValues.objectId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get objectId() {
    return this._objectId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: cmdbObjectAriStaticOpts.qualifier,
      platformQualifier: cmdbObjectAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: cmdbObjectAriStaticOpts.resourceOwner,
      resourceType: cmdbObjectAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.objectId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        objectId: opts.objectId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, cmdbObjectAriStaticOpts);
    return new _CmdbObjectAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, cmdbObjectAriStaticOpts);
    return new _CmdbObjectAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      objectId: this.objectId
    };
  }
};

export {
  CmdbObjectAri
};
