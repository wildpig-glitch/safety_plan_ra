import {
  JiraIssueWorklogAriResourceOwner,
  JiraIssueWorklogAriResourceType
} from "./chunk-O6FNFDKY.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/jira/issue-worklog/manifest.ts
var jiraIssueWorklogAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraIssueWorklogAriResourceOwner,
  resourceType: JiraIssueWorklogAriResourceType,
  resourceIdSlug: "{issueId}/{worklogId}",
  resourceIdSegmentFormats: {
    issueId: /[0-9]+/,
    // eslint-disable-line no-useless-escape
    worklogId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/issue-worklog/index.ts
var JiraIssueWorklogAri = class _JiraIssueWorklogAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._issueId = opts.resourceIdSegmentValues.issueId, this._worklogId = opts.resourceIdSegmentValues.worklogId;
  }
  get siteId() {
    return this._siteId;
  }
  get issueId() {
    return this._issueId;
  }
  get worklogId() {
    return this._worklogId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraIssueWorklogAriStaticOpts.qualifier,
      platformQualifier: jiraIssueWorklogAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraIssueWorklogAriStaticOpts.resourceOwner,
      resourceType: jiraIssueWorklogAriStaticOpts.resourceType,
      resourceId: `${opts.issueId}/${opts.worklogId}`,
      resourceIdSegmentValues: {
        issueId: opts.issueId,
        worklogId: opts.worklogId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraIssueWorklogAriStaticOpts);
    return new _JiraIssueWorklogAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraIssueWorklogAriStaticOpts);
    return new _JiraIssueWorklogAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      issueId: this.issueId,
      worklogId: this.worklogId
    };
  }
};

export {
  JiraIssueWorklogAri
};
