import {
  GraphDesignAriResourceOwner,
  GraphDesignAriResourceType
} from "./chunk-RBS5RYKM.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/graph/design/manifest.ts
var graphDesignAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: GraphDesignAriResourceOwner,
  resourceType: GraphDesignAriResourceType,
  resourceIdSlug: "activation/{activationId}/{designId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    designId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/design/index.ts
var GraphDesignAri = class _GraphDesignAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._designId = opts.resourceIdSegmentValues.designId;
  }
  get activationId() {
    return this._activationId;
  }
  get designId() {
    return this._designId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphDesignAriStaticOpts.qualifier,
      platformQualifier: graphDesignAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphDesignAriStaticOpts.resourceOwner,
      resourceType: graphDesignAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.designId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        designId: opts.designId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphDesignAriStaticOpts);
    return new _GraphDesignAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphDesignAriStaticOpts);
    return new _GraphDesignAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      designId: this.designId
    };
  }
};

export {
  GraphDesignAri
};
