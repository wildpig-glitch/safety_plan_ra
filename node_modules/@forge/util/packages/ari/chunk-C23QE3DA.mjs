import {
  WorkatoRecipeAriResourceOwner,
  WorkatoRecipeAriResourceType
} from "./chunk-ZH5P2SLW.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/workato/recipe/manifest.ts
var workatoRecipeAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  resourceOwner: WorkatoRecipeAriResourceOwner,
  resourceType: WorkatoRecipeAriResourceType,
  resourceIdSlug: "{workatoTenantKey}/{recipeId}",
  resourceIdSegmentFormats: {
    workatoTenantKey: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/,
    // eslint-disable-line no-useless-escape
    recipeId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/workato/recipe/index.ts
var WorkatoRecipeAri = class _WorkatoRecipeAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workatoTenantKey = opts.resourceIdSegmentValues.workatoTenantKey, this._recipeId = opts.resourceIdSegmentValues.recipeId;
  }
  get workatoTenantKey() {
    return this._workatoTenantKey;
  }
  get recipeId() {
    return this._recipeId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: workatoRecipeAriStaticOpts.qualifier,
      platformQualifier: workatoRecipeAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: workatoRecipeAriStaticOpts.resourceOwner,
      resourceType: workatoRecipeAriStaticOpts.resourceType,
      resourceId: `${opts.workatoTenantKey}/${opts.recipeId}`,
      resourceIdSegmentValues: {
        workatoTenantKey: opts.workatoTenantKey,
        recipeId: opts.recipeId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, workatoRecipeAriStaticOpts);
    return new _WorkatoRecipeAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, workatoRecipeAriStaticOpts);
    return new _WorkatoRecipeAri(opts);
  }
  getVariables() {
    return {
      workatoTenantKey: this.workatoTenantKey,
      recipeId: this.recipeId
    };
  }
};

export {
  WorkatoRecipeAri
};
