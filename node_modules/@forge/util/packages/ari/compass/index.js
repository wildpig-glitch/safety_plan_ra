"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);

// src/compass/index.ts
var compass_exports = {};
__export(compass_exports, {
  CompassAssistantAnswerAri: () => CompassAssistantAnswerAri,
  CompassComponentAri: () => CompassComponentAri,
  CompassComponentLabelAri: () => CompassComponentLabelAri,
  CompassComponentLinkAri: () => CompassComponentLinkAri,
  CompassCustomFieldDefinitionAri: () => CompassCustomFieldDefinitionAri,
  CompassDocumentAri: () => CompassDocumentAri,
  CompassDocumentationCategoryAri: () => CompassDocumentationCategoryAri,
  CompassEventSourceAri: () => CompassEventSourceAri,
  CompassIncomingWebhookAri: () => CompassIncomingWebhookAri,
  CompassMetricDefinitionAri: () => CompassMetricDefinitionAri,
  CompassMetricSourceAri: () => CompassMetricSourceAri,
  CompassRoleAri: () => CompassRoleAri,
  CompassScorecardAri: () => CompassScorecardAri,
  CompassSiteAri: () => CompassSiteAri,
  CompassUserDefinedParameterAri: () => CompassUserDefinedParameterAri,
  CompassWebhookAri: () => CompassWebhookAri,
  CompassWorkspaceAri: () => CompassWorkspaceAri
});
module.exports = __toCommonJS(compass_exports);

// src/errors.ts
var ValidationError = class extends Error {
};

// src/core/rules/cloud-id.ts
function validateCloudId(cloudId, format = new RegExp("^[a-zA-Z0-9\\-]*$")) {
  if (!cloudId.match(format))
    throw new ValidationError(`Invalid cloud ID, expected ID of format ${format}.`);
}

// src/core/rules/platform-qualifier.ts
function validatePlatformQualifier(qualifier) {
  if (qualifier !== "cloud" && qualifier !== "third-party")
    throw new ValidationError(`Identifier must have a qualifier of 'cloud' or 'third-party'. Received: ${qualifier}`);
}

// src/core/rules/qualifier.ts
function validateAtiQualifier(qualifier) {
  if (qualifier !== "ati")
    throw new ValidationError(`ATI must have a qualifier of 'ati'. Received: ${qualifier}`);
}
function validateAriQualifier(qualifier) {
  if (qualifier !== "ari")
    throw new ValidationError(`ARI must have a qualifier of 'ari'. Received: ${qualifier}`);
}

// src/core/rules/resource-id.ts
function validateResourceId(id, format = new RegExp("[!a-zA-Z0-9\\-_.~@:{}=]+(/[!a-zA-Z0-9\\-_.~@:{}=]+)*" /* ANY_RESOURCE_ID */), key = "resourceId") {
  let formatWithCarets = new RegExp(`^${format.source}$`);
  if (!id.match(formatWithCarets))
    throw new ValidationError(`Invalid ${key} - ${id}, expected ID of format ${formatWithCarets}.`);
}

// src/core/rules/resource-id-segments.ts
function validateResourceIdSegments(resourceIdSegmentValues, resourceIdSegmentFormats) {
  Object.entries(resourceIdSegmentValues).forEach(([resourceIdKey, resourceIdValue]) => {
    validateResourceId(resourceIdValue, resourceIdSegmentFormats == null ? void 0 : resourceIdSegmentFormats[resourceIdKey], resourceIdKey);
  });
}

// src/core/rules/resource-owner.ts
function validateResourceOwner(owner, expectedResourceOwner) {
  if (expectedResourceOwner && owner !== expectedResourceOwner)
    throw new ValidationError(`Invalid resource owner - ${owner}, expected ${expectedResourceOwner}.`);
}

// src/core/rules/resource-type.ts
function validateResourceType(type, expectedResourceType) {
  if (expectedResourceType && type !== expectedResourceType)
    throw new ValidationError(`Invalid resource type - ${type}, expected ${expectedResourceType}.`);
}

// src/core/parser/base.ts
var NUMBER_OF_BASE_SEGMENTS = 5, SEGMENT_SEPARATOR = ":", BaseParser = class {
  static getIdentifierSegments(inputStr, numberOfSegmentsRequired) {
    let allSegments = inputStr.split(SEGMENT_SEPARATOR);
    if (allSegments.length < numberOfSegmentsRequired)
      throw new ValidationError(`Input string must have ${numberOfSegmentsRequired} segments.`);
    if (allSegments.length > numberOfSegmentsRequired) {
      let segments = allSegments.slice(0, NUMBER_OF_BASE_SEGMENTS - 1), segmentsForResourceId = allSegments.slice(NUMBER_OF_BASE_SEGMENTS - 1, allSegments.length);
      return [...segments, segmentsForResourceId.join(SEGMENT_SEPARATOR)];
    }
    return allSegments;
  }
};

// src/core/parser/ari.ts
var NUMBER_OF_ARI_SEGMENTS = 5, AriParser = class extends BaseParser {
  static fromString(maybeAri, ariProperties) {
    let segments = this.getIdentifierSegments(maybeAri, NUMBER_OF_ARI_SEGMENTS), [qualifier, platformQualifier, resourceOwner, cloudId, resourceTypeAndId] = segments, [resourceType, ...resourceIdSegments] = resourceTypeAndId.split("/"), maybeAriDerivedProperties = {
      qualifier,
      platformQualifier,
      cloudId,
      resourceOwner,
      resourceType,
      resourceId: resourceIdSegments.join("/"),
      resourceIdSegmentValues: ariProperties != null && ariProperties.resourceIdSlug ? this.ariSegmentValuesFromSlug(
        ariProperties.resourceIdSlug,
        resourceIdSegments.join("/"),
        Object.keys(ariProperties.resourceIdSegmentFormats)
      ) : {}
    };
    return this.fromOpts(maybeAriDerivedProperties, ariProperties);
  }
  static fromOpts(maybeAriOpts, ariProperties) {
    let {
      qualifier = "ari",
      platformQualifier = "cloud",
      resourceOwner,
      cloudId,
      resourceId,
      resourceIdSegmentValues,
      resourceType
    } = maybeAriOpts;
    return validateAriQualifier(qualifier), validatePlatformQualifier(platformQualifier), validateCloudId(maybeAriOpts.cloudId || "", ariProperties == null ? void 0 : ariProperties.cloudId), validateResourceOwner(resourceOwner, ariProperties == null ? void 0 : ariProperties.resourceOwner), validateResourceType(resourceType, ariProperties == null ? void 0 : ariProperties.resourceType), validateResourceIdSegments(resourceIdSegmentValues, ariProperties == null ? void 0 : ariProperties.resourceIdSegmentFormats), {
      qualifier,
      resourceOwner,
      resourceType,
      platformQualifier,
      cloudId,
      resourceId,
      resourceIdSegmentValues
    };
  }
  static ariSegmentValuesFromSlug(slug, incomingSegments, expectedKeys) {
    let regexpResult = new RegExp("^" + slug.replace(/\{(.*?)\}/g, "(?<$1>.*?)") + "$").exec(incomingSegments);
    if (!regexpResult)
      throw new ValidationError(`Segment '${incomingSegments}' don't match expected slug: ${slug}`);
    return expectedKeys.forEach((expectedKey) => {
      var _a;
      if (!((_a = regexpResult.groups) != null && _a[expectedKey]))
        throw new ValidationError(`No value supplied for '${expectedKey}' based on slug ${slug}`);
    }), regexpResult.groups || {};
  }
};

// src/core/parser/ati.ts
var NUMBER_OF_ATI_SEGMENTS = 4, AtiParser = class extends BaseParser {
  static fromString(inputStr, atiOpts) {
    let segments = this.getIdentifierSegments(inputStr, NUMBER_OF_ATI_SEGMENTS), [qualifier = "ati", platformQualifier = "cloud", resourceOwner, resourceType] = segments;
    return validateAtiQualifier(qualifier), validatePlatformQualifier(platformQualifier), validateResourceOwner(resourceOwner, atiOpts == null ? void 0 : atiOpts.resourceOwner), validateResourceType(resourceType, atiOpts == null ? void 0 : atiOpts.resourceType), { platformQualifier, resourceOwner, resourceType };
  }
  static fromOpts(maybeAtiOpts, atiOpts) {
    let { qualifier, platformQualifier, resourceOwner, resourceType } = maybeAtiOpts;
    return validateAtiQualifier(qualifier), validatePlatformQualifier(platformQualifier), validateResourceOwner(resourceOwner, atiOpts == null ? void 0 : atiOpts.resourceOwner), validateResourceType(resourceType, atiOpts == null ? void 0 : atiOpts.resourceType), {
      platformQualifier,
      resourceOwner,
      resourceType
    };
  }
};

// src/ati.ts
var Ati = class _Ati {
  constructor(platformQualifier, resourceOwner, resourceType) {
    this._platformQualifier = platformQualifier, this._resourceOwner = resourceOwner, this._resourceType = resourceType;
  }
  get platformQualifier() {
    return this._platformQualifier;
  }
  get resourceOwner() {
    return this._resourceOwner;
  }
  get resourceType() {
    return this._resourceType;
  }
  static create(opts) {
    return new _Ati(opts.platformQualifier || "cloud", opts.resourceOwner, opts.resourceType);
  }
  static parse(maybeAti, atiOpts) {
    let opts = AtiParser.fromString(maybeAti, atiOpts);
    return new _Ati(opts.platformQualifier, opts.resourceOwner, opts.resourceType);
  }
  toString() {
    return `ati:${this.platformQualifier}:${this.resourceOwner}:${this.resourceType}`;
  }
  toJSON() {
    return this.toString();
  }
  toOpts() {
    return {
      platformQualifier: this._platformQualifier,
      resourceOwner: this._resourceOwner,
      resourceType: this._resourceType
    };
  }
};

// src/core/ari.ts
var Ari = class {
  constructor(opts) {
    this._ati = Ati.create({
      platformQualifier: opts.platformQualifier || "cloud",
      resourceOwner: opts.resourceOwner,
      resourceType: opts.resourceType
    }), this._cloudId = opts.cloudId !== "" ? opts.cloudId : void 0, this._resourceId = opts.resourceId;
  }
  get platformQualifier() {
    return this._ati.platformQualifier;
  }
  get cloudId() {
    return this._cloudId;
  }
  get resourceOwner() {
    return this._ati.resourceOwner;
  }
  get resourceType() {
    return this._ati.resourceType;
  }
  get resourceId() {
    return this._resourceId;
  }
  get ati() {
    return this._ati;
  }
  equals(other) {
    return this.toString() === other.toString();
  }
  toString() {
    return `ari:${this.platformQualifier}:${this.resourceOwner}:${this.cloudId || ""}:${this.resourceType}/${this.resourceId}`;
  }
  toJSON() {
    return this.toString();
  }
  toOpts() {
    return {
      platformQualifier: this.platformQualifier,
      resourceOwner: this.resourceOwner,
      cloudId: this.cloudId,
      resourceType: this.resourceType,
      resourceId: this.resourceId
    };
  }
};

// src/any-ari.ts
var AnyAri = class _AnyAri extends Ari {
  constructor(opts) {
    super(opts);
  }
  static create(ariOpts, ariStaticOpts) {
    let ariOptsWithDefaults = { ...ariOpts, resourceIdSegmentValues: {} }, validatedOpts = AriParser.fromOpts(ariOptsWithDefaults, ariStaticOpts);
    return new _AnyAri(validatedOpts);
  }
  static parse(maybeAri, ariStaticOpts) {
    let validatedOpts = AriParser.fromString(maybeAri, ariStaticOpts);
    return new _AnyAri(validatedOpts);
  }
  static check(maybeAri) {
    try {
      return _AnyAri.parse(maybeAri.toString()), !0;
    } catch (err) {
      return !1;
    }
  }
  asAnyAri() {
    return this;
  }
};

// src/core/registered-ari.ts
var RegisteredAri = class extends Ari {
  static check(maybeAri) {
    try {
      return this.parse(maybeAri.toString()), !0;
    } catch (err) {
      return !1;
    }
  }
  asAnyAri() {
    return AnyAri.parse(this.toString());
  }
};

// src/compass/assistant-answer/types.ts
var CompassAssistantAnswerAriResourceOwner = "compass", CompassAssistantAnswerAriResourceType = "assistant-answer";

// src/compass/assistant-answer/manifest.ts
var compassAssistantAnswerAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: CompassAssistantAnswerAriResourceOwner,
  resourceType: CompassAssistantAnswerAriResourceType,
  resourceIdSlug: "{workspaceId}/{answerId}",
  resourceIdSegmentFormats: {
    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    answerId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/compass/assistant-answer/index.ts
var CompassAssistantAnswerAri = class _CompassAssistantAnswerAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._answerId = opts.resourceIdSegmentValues.answerId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get answerId() {
    return this._answerId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: compassAssistantAnswerAriStaticOpts.qualifier,
      platformQualifier: compassAssistantAnswerAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: compassAssistantAnswerAriStaticOpts.resourceOwner,
      resourceType: compassAssistantAnswerAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.answerId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        answerId: opts.answerId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, compassAssistantAnswerAriStaticOpts);
    return new _CompassAssistantAnswerAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, compassAssistantAnswerAriStaticOpts);
    return new _CompassAssistantAnswerAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      answerId: this.answerId
    };
  }
};

// src/compass/component/types.ts
var CompassComponentAriResourceOwner = "compass", CompassComponentAriResourceType = "component";

// src/compass/component/manifest.ts
var compassComponentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: CompassComponentAriResourceOwner,
  resourceType: CompassComponentAriResourceType,
  resourceIdSlug: "{workspaceId}/{componentId}",
  resourceIdSegmentFormats: {
    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    componentId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/compass/component/index.ts
var CompassComponentAri = class _CompassComponentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._componentId = opts.resourceIdSegmentValues.componentId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get componentId() {
    return this._componentId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: compassComponentAriStaticOpts.qualifier,
      platformQualifier: compassComponentAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: compassComponentAriStaticOpts.resourceOwner,
      resourceType: compassComponentAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.componentId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        componentId: opts.componentId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, compassComponentAriStaticOpts);
    return new _CompassComponentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, compassComponentAriStaticOpts);
    return new _CompassComponentAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      componentId: this.componentId
    };
  }
};

// src/compass/component-label/types.ts
var CompassComponentLabelAriResourceOwner = "compass", CompassComponentLabelAriResourceType = "component-label";

// src/compass/component-label/manifest.ts
var compassComponentLabelAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: CompassComponentLabelAriResourceOwner,
  resourceType: CompassComponentLabelAriResourceType,
  resourceIdSlug: "{workspaceId}/{labelId}",
  resourceIdSegmentFormats: {
    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    labelId: /[0-9a-f\-]{36,64}/
    // eslint-disable-line no-useless-escape
  }
};

// src/compass/component-label/index.ts
var CompassComponentLabelAri = class _CompassComponentLabelAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._labelId = opts.resourceIdSegmentValues.labelId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get labelId() {
    return this._labelId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: compassComponentLabelAriStaticOpts.qualifier,
      platformQualifier: compassComponentLabelAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: compassComponentLabelAriStaticOpts.resourceOwner,
      resourceType: compassComponentLabelAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.labelId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        labelId: opts.labelId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, compassComponentLabelAriStaticOpts);
    return new _CompassComponentLabelAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, compassComponentLabelAriStaticOpts);
    return new _CompassComponentLabelAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      labelId: this.labelId
    };
  }
};

// src/compass/component-link/types.ts
var CompassComponentLinkAriResourceOwner = "compass", CompassComponentLinkAriResourceType = "component-link";

// src/compass/component-link/manifest.ts
var compassComponentLinkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: CompassComponentLinkAriResourceOwner,
  resourceType: CompassComponentLinkAriResourceType,
  resourceIdSlug: "{workspaceId}/{componentId}/{componentLinkId}",
  resourceIdSegmentFormats: {
    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    componentId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    componentLinkId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/compass/component-link/index.ts
var CompassComponentLinkAri = class _CompassComponentLinkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._componentId = opts.resourceIdSegmentValues.componentId, this._componentLinkId = opts.resourceIdSegmentValues.componentLinkId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get componentId() {
    return this._componentId;
  }
  get componentLinkId() {
    return this._componentLinkId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: compassComponentLinkAriStaticOpts.qualifier,
      platformQualifier: compassComponentLinkAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: compassComponentLinkAriStaticOpts.resourceOwner,
      resourceType: compassComponentLinkAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.componentId}/${opts.componentLinkId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        componentId: opts.componentId,
        componentLinkId: opts.componentLinkId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, compassComponentLinkAriStaticOpts);
    return new _CompassComponentLinkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, compassComponentLinkAriStaticOpts);
    return new _CompassComponentLinkAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      componentId: this.componentId,
      componentLinkId: this.componentLinkId
    };
  }
};

// src/compass/custom-field-definition/types.ts
var CompassCustomFieldDefinitionAriResourceOwner = "compass", CompassCustomFieldDefinitionAriResourceType = "custom-field-definition";

// src/compass/custom-field-definition/manifest.ts
var compassCustomFieldDefinitionAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: CompassCustomFieldDefinitionAriResourceOwner,
  resourceType: CompassCustomFieldDefinitionAriResourceType,
  resourceIdSlug: "{workspaceId}/{definitionId}",
  resourceIdSegmentFormats: {
    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    definitionId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/compass/custom-field-definition/index.ts
var CompassCustomFieldDefinitionAri = class _CompassCustomFieldDefinitionAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._definitionId = opts.resourceIdSegmentValues.definitionId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get definitionId() {
    return this._definitionId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: compassCustomFieldDefinitionAriStaticOpts.qualifier,
      platformQualifier: compassCustomFieldDefinitionAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: compassCustomFieldDefinitionAriStaticOpts.resourceOwner,
      resourceType: compassCustomFieldDefinitionAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.definitionId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        definitionId: opts.definitionId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, compassCustomFieldDefinitionAriStaticOpts);
    return new _CompassCustomFieldDefinitionAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, compassCustomFieldDefinitionAriStaticOpts);
    return new _CompassCustomFieldDefinitionAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      definitionId: this.definitionId
    };
  }
};

// src/compass/document/types.ts
var CompassDocumentAriResourceOwner = "compass", CompassDocumentAriResourceType = "document";

// src/compass/document/manifest.ts
var compassDocumentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: CompassDocumentAriResourceOwner,
  resourceType: CompassDocumentAriResourceType,
  resourceIdSlug: "{workspaceId}/{documentId}",
  resourceIdSegmentFormats: {
    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    documentId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/compass/document/index.ts
var CompassDocumentAri = class _CompassDocumentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._documentId = opts.resourceIdSegmentValues.documentId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get documentId() {
    return this._documentId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: compassDocumentAriStaticOpts.qualifier,
      platformQualifier: compassDocumentAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: compassDocumentAriStaticOpts.resourceOwner,
      resourceType: compassDocumentAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.documentId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        documentId: opts.documentId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, compassDocumentAriStaticOpts);
    return new _CompassDocumentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, compassDocumentAriStaticOpts);
    return new _CompassDocumentAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      documentId: this.documentId
    };
  }
};

// src/compass/documentation-category/types.ts
var CompassDocumentationCategoryAriResourceOwner = "compass", CompassDocumentationCategoryAriResourceType = "documentation-category";

// src/compass/documentation-category/manifest.ts
var compassDocumentationCategoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: CompassDocumentationCategoryAriResourceOwner,
  resourceType: CompassDocumentationCategoryAriResourceType,
  resourceIdSlug: "{workspaceId}/{documentationCategoryId}",
  resourceIdSegmentFormats: {
    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    documentationCategoryId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/compass/documentation-category/index.ts
var CompassDocumentationCategoryAri = class _CompassDocumentationCategoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._documentationCategoryId = opts.resourceIdSegmentValues.documentationCategoryId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get documentationCategoryId() {
    return this._documentationCategoryId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: compassDocumentationCategoryAriStaticOpts.qualifier,
      platformQualifier: compassDocumentationCategoryAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: compassDocumentationCategoryAriStaticOpts.resourceOwner,
      resourceType: compassDocumentationCategoryAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.documentationCategoryId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        documentationCategoryId: opts.documentationCategoryId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, compassDocumentationCategoryAriStaticOpts);
    return new _CompassDocumentationCategoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, compassDocumentationCategoryAriStaticOpts);
    return new _CompassDocumentationCategoryAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      documentationCategoryId: this.documentationCategoryId
    };
  }
};

// src/compass/event-source/types.ts
var CompassEventSourceAriResourceOwner = "compass", CompassEventSourceAriResourceType = "event-source";

// src/compass/event-source/manifest.ts
var compassEventSourceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: CompassEventSourceAriResourceOwner,
  resourceType: CompassEventSourceAriResourceType,
  resourceIdSlug: "{workspaceId}/{eventSourceId}",
  resourceIdSegmentFormats: {
    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    eventSourceId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/compass/event-source/index.ts
var CompassEventSourceAri = class _CompassEventSourceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._eventSourceId = opts.resourceIdSegmentValues.eventSourceId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get eventSourceId() {
    return this._eventSourceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: compassEventSourceAriStaticOpts.qualifier,
      platformQualifier: compassEventSourceAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: compassEventSourceAriStaticOpts.resourceOwner,
      resourceType: compassEventSourceAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.eventSourceId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        eventSourceId: opts.eventSourceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, compassEventSourceAriStaticOpts);
    return new _CompassEventSourceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, compassEventSourceAriStaticOpts);
    return new _CompassEventSourceAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      eventSourceId: this.eventSourceId
    };
  }
};

// src/compass/incoming-webhook/types.ts
var CompassIncomingWebhookAriResourceOwner = "compass", CompassIncomingWebhookAriResourceType = "incoming-webhook";

// src/compass/incoming-webhook/manifest.ts
var compassIncomingWebhookAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: CompassIncomingWebhookAriResourceOwner,
  resourceType: CompassIncomingWebhookAriResourceType,
  resourceIdSlug: "{workspaceId}/{incomingWebhookId}",
  resourceIdSegmentFormats: {
    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    incomingWebhookId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/compass/incoming-webhook/index.ts
var CompassIncomingWebhookAri = class _CompassIncomingWebhookAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._incomingWebhookId = opts.resourceIdSegmentValues.incomingWebhookId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get incomingWebhookId() {
    return this._incomingWebhookId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: compassIncomingWebhookAriStaticOpts.qualifier,
      platformQualifier: compassIncomingWebhookAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: compassIncomingWebhookAriStaticOpts.resourceOwner,
      resourceType: compassIncomingWebhookAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.incomingWebhookId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        incomingWebhookId: opts.incomingWebhookId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, compassIncomingWebhookAriStaticOpts);
    return new _CompassIncomingWebhookAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, compassIncomingWebhookAriStaticOpts);
    return new _CompassIncomingWebhookAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      incomingWebhookId: this.incomingWebhookId
    };
  }
};

// src/compass/metric-definition/types.ts
var CompassMetricDefinitionAriResourceOwner = "compass", CompassMetricDefinitionAriResourceType = "metric-definition";

// src/compass/metric-definition/manifest.ts
var compassMetricDefinitionAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]*$"),
  resourceOwner: CompassMetricDefinitionAriResourceOwner,
  resourceType: CompassMetricDefinitionAriResourceType,
  resourceIdSlug: "{containerId}/{definitionId}",
  resourceIdSegmentFormats: {
    containerId: /(?:builtin|forge|[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12})/,
    // eslint-disable-line no-useless-escape
    definitionId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/compass/metric-definition/index.ts
var CompassMetricDefinitionAri = class _CompassMetricDefinitionAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._optionalSiteId = opts.cloudId || "", this._containerId = opts.resourceIdSegmentValues.containerId, this._definitionId = opts.resourceIdSegmentValues.definitionId;
  }
  get optionalSiteId() {
    return this._optionalSiteId;
  }
  get containerId() {
    return this._containerId;
  }
  get definitionId() {
    return this._definitionId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: compassMetricDefinitionAriStaticOpts.qualifier,
      platformQualifier: compassMetricDefinitionAriStaticOpts.platformQualifier,
      cloudId: opts.optionalSiteId,
      resourceOwner: compassMetricDefinitionAriStaticOpts.resourceOwner,
      resourceType: compassMetricDefinitionAriStaticOpts.resourceType,
      resourceId: `${opts.containerId}/${opts.definitionId}`,
      resourceIdSegmentValues: {
        containerId: opts.containerId,
        definitionId: opts.definitionId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, compassMetricDefinitionAriStaticOpts);
    return new _CompassMetricDefinitionAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, compassMetricDefinitionAriStaticOpts);
    return new _CompassMetricDefinitionAri(opts);
  }
  getVariables() {
    return {
      optionalSiteId: this.optionalSiteId,
      containerId: this.containerId,
      definitionId: this.definitionId
    };
  }
};

// src/compass/metric-source/types.ts
var CompassMetricSourceAriResourceOwner = "compass", CompassMetricSourceAriResourceType = "metric-source";

// src/compass/metric-source/manifest.ts
var compassMetricSourceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: CompassMetricSourceAriResourceOwner,
  resourceType: CompassMetricSourceAriResourceType,
  resourceIdSlug: "{workspaceId}/{metricSourceId}",
  resourceIdSegmentFormats: {
    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    metricSourceId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/compass/metric-source/index.ts
var CompassMetricSourceAri = class _CompassMetricSourceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._metricSourceId = opts.resourceIdSegmentValues.metricSourceId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get metricSourceId() {
    return this._metricSourceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: compassMetricSourceAriStaticOpts.qualifier,
      platformQualifier: compassMetricSourceAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: compassMetricSourceAriStaticOpts.resourceOwner,
      resourceType: compassMetricSourceAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.metricSourceId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        metricSourceId: opts.metricSourceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, compassMetricSourceAriStaticOpts);
    return new _CompassMetricSourceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, compassMetricSourceAriStaticOpts);
    return new _CompassMetricSourceAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      metricSourceId: this.metricSourceId
    };
  }
};

// src/compass/role/types.ts
var CompassRoleAriResourceOwner = "compass", CompassRoleAriResourceType = "role";

// src/compass/role/manifest.ts
var compassRoleAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: CompassRoleAriResourceOwner,
  resourceType: CompassRoleAriResourceType,
  resourceIdSlug: "product/{roleType}",
  resourceIdSegmentFormats: {
    roleType: /(?:basic|member|admin)/
    // eslint-disable-line no-useless-escape
  }
};

// src/compass/role/index.ts
var CompassRoleAri = class _CompassRoleAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._roleType = opts.resourceIdSegmentValues.roleType;
  }
  get roleType() {
    return this._roleType;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: compassRoleAriStaticOpts.qualifier,
      platformQualifier: compassRoleAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: compassRoleAriStaticOpts.resourceOwner,
      resourceType: compassRoleAriStaticOpts.resourceType,
      resourceId: `product/${opts.roleType}`,
      resourceIdSegmentValues: {
        roleType: opts.roleType
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, compassRoleAriStaticOpts);
    return new _CompassRoleAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, compassRoleAriStaticOpts);
    return new _CompassRoleAri(opts);
  }
  getVariables() {
    return {
      roleType: this.roleType
    };
  }
};

// src/compass/scorecard/types.ts
var CompassScorecardAriResourceOwner = "compass", CompassScorecardAriResourceType = "scorecard";

// src/compass/scorecard/manifest.ts
var compassScorecardAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: CompassScorecardAriResourceOwner,
  resourceType: CompassScorecardAriResourceType,
  resourceIdSlug: "{workspaceId}/{scorecardId}",
  resourceIdSegmentFormats: {
    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    scorecardId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/compass/scorecard/index.ts
var CompassScorecardAri = class _CompassScorecardAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._scorecardId = opts.resourceIdSegmentValues.scorecardId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get scorecardId() {
    return this._scorecardId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: compassScorecardAriStaticOpts.qualifier,
      platformQualifier: compassScorecardAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: compassScorecardAriStaticOpts.resourceOwner,
      resourceType: compassScorecardAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.scorecardId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        scorecardId: opts.scorecardId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, compassScorecardAriStaticOpts);
    return new _CompassScorecardAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, compassScorecardAriStaticOpts);
    return new _CompassScorecardAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      scorecardId: this.scorecardId
    };
  }
};

// src/compass/site/types.ts
var CompassSiteAriResourceOwner = "compass", CompassSiteAriResourceType = "site";

// src/compass/site/manifest.ts
var compassSiteAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: CompassSiteAriResourceOwner,
  resourceType: CompassSiteAriResourceType,
  resourceIdSlug: "{siteId}",
  resourceIdSegmentFormats: {
    siteId: /[a-zA-Z0-9\-]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/compass/site/index.ts
var CompassSiteAri = class _CompassSiteAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.resourceIdSegmentValues.siteId;
  }
  get siteId() {
    return this._siteId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: compassSiteAriStaticOpts.qualifier,
      platformQualifier: compassSiteAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: compassSiteAriStaticOpts.resourceOwner,
      resourceType: compassSiteAriStaticOpts.resourceType,
      resourceId: `${opts.siteId}`,
      resourceIdSegmentValues: {
        siteId: opts.siteId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, compassSiteAriStaticOpts);
    return new _CompassSiteAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, compassSiteAriStaticOpts);
    return new _CompassSiteAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId
    };
  }
};

// src/compass/user-defined-parameter/types.ts
var CompassUserDefinedParameterAriResourceOwner = "compass", CompassUserDefinedParameterAriResourceType = "user-defined-parameter";

// src/compass/user-defined-parameter/manifest.ts
var compassUserDefinedParameterAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: CompassUserDefinedParameterAriResourceOwner,
  resourceType: CompassUserDefinedParameterAriResourceType,
  resourceIdSlug: "{workspaceId}/{userDefinedParameterId}",
  resourceIdSegmentFormats: {
    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    userDefinedParameterId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/compass/user-defined-parameter/index.ts
var CompassUserDefinedParameterAri = class _CompassUserDefinedParameterAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._userDefinedParameterId = opts.resourceIdSegmentValues.userDefinedParameterId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get userDefinedParameterId() {
    return this._userDefinedParameterId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: compassUserDefinedParameterAriStaticOpts.qualifier,
      platformQualifier: compassUserDefinedParameterAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: compassUserDefinedParameterAriStaticOpts.resourceOwner,
      resourceType: compassUserDefinedParameterAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.userDefinedParameterId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        userDefinedParameterId: opts.userDefinedParameterId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, compassUserDefinedParameterAriStaticOpts);
    return new _CompassUserDefinedParameterAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, compassUserDefinedParameterAriStaticOpts);
    return new _CompassUserDefinedParameterAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      userDefinedParameterId: this.userDefinedParameterId
    };
  }
};

// src/compass/webhook/types.ts
var CompassWebhookAriResourceOwner = "compass", CompassWebhookAriResourceType = "webhook";

// src/compass/webhook/manifest.ts
var compassWebhookAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: CompassWebhookAriResourceOwner,
  resourceType: CompassWebhookAriResourceType,
  resourceIdSlug: "{workspaceId}/{webhookId}",
  resourceIdSegmentFormats: {
    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    webhookId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/compass/webhook/index.ts
var CompassWebhookAri = class _CompassWebhookAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._webhookId = opts.resourceIdSegmentValues.webhookId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get webhookId() {
    return this._webhookId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: compassWebhookAriStaticOpts.qualifier,
      platformQualifier: compassWebhookAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: compassWebhookAriStaticOpts.resourceOwner,
      resourceType: compassWebhookAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.webhookId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        webhookId: opts.webhookId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, compassWebhookAriStaticOpts);
    return new _CompassWebhookAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, compassWebhookAriStaticOpts);
    return new _CompassWebhookAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      webhookId: this.webhookId
    };
  }
};

// src/compass/workspace/types.ts
var CompassWorkspaceAriResourceOwner = "compass", CompassWorkspaceAriResourceType = "workspace";

// src/compass/workspace/manifest.ts
var compassWorkspaceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: CompassWorkspaceAriResourceOwner,
  resourceType: CompassWorkspaceAriResourceType,
  resourceIdSlug: "{workspaceId}",
  resourceIdSegmentFormats: {
    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/compass/workspace/index.ts
var CompassWorkspaceAri = class _CompassWorkspaceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: compassWorkspaceAriStaticOpts.qualifier,
      platformQualifier: compassWorkspaceAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: compassWorkspaceAriStaticOpts.resourceOwner,
      resourceType: compassWorkspaceAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, compassWorkspaceAriStaticOpts);
    return new _CompassWorkspaceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, compassWorkspaceAriStaticOpts);
    return new _CompassWorkspaceAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId
    };
  }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  CompassAssistantAnswerAri,
  CompassComponentAri,
  CompassComponentLabelAri,
  CompassComponentLinkAri,
  CompassCustomFieldDefinitionAri,
  CompassDocumentAri,
  CompassDocumentationCategoryAri,
  CompassEventSourceAri,
  CompassIncomingWebhookAri,
  CompassMetricDefinitionAri,
  CompassMetricSourceAri,
  CompassRoleAri,
  CompassScorecardAri,
  CompassSiteAri,
  CompassUserDefinedParameterAri,
  CompassWebhookAri,
  CompassWorkspaceAri
});
