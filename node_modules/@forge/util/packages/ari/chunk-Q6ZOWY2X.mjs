import {
  OpsgenieScheduleRotationAriResourceOwner,
  OpsgenieScheduleRotationAriResourceType
} from "./chunk-ILPXSBCV.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/opsgenie/schedule-rotation/manifest.ts
var opsgenieScheduleRotationAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: OpsgenieScheduleRotationAriResourceOwner,
  resourceType: OpsgenieScheduleRotationAriResourceType,
  resourceIdSlug: "{workspaceId}/{scheduleRotationId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    scheduleRotationId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/opsgenie/schedule-rotation/index.ts
var OpsgenieScheduleRotationAri = class _OpsgenieScheduleRotationAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._scheduleRotationId = opts.resourceIdSegmentValues.scheduleRotationId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get scheduleRotationId() {
    return this._scheduleRotationId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: opsgenieScheduleRotationAriStaticOpts.qualifier,
      platformQualifier: opsgenieScheduleRotationAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: opsgenieScheduleRotationAriStaticOpts.resourceOwner,
      resourceType: opsgenieScheduleRotationAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.scheduleRotationId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        scheduleRotationId: opts.scheduleRotationId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieScheduleRotationAriStaticOpts);
    return new _OpsgenieScheduleRotationAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, opsgenieScheduleRotationAriStaticOpts);
    return new _OpsgenieScheduleRotationAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      scheduleRotationId: this.scheduleRotationId
    };
  }
};

export {
  OpsgenieScheduleRotationAri
};
