import {
  MeasurementEmailUuidAriResourceOwner,
  MeasurementEmailUuidAriResourceType
} from "./chunk-TZWB442U.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/measurement/email-uuid/manifest.ts
var measurementEmailUuidAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: MeasurementEmailUuidAriResourceOwner,
  resourceType: MeasurementEmailUuidAriResourceType,
  resourceIdSlug: "{emailId}",
  resourceIdSegmentFormats: {
    emailId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/measurement/email-uuid/index.ts
var MeasurementEmailUuidAri = class _MeasurementEmailUuidAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._emailId = opts.resourceIdSegmentValues.emailId;
  }
  get emailId() {
    return this._emailId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: measurementEmailUuidAriStaticOpts.qualifier,
      platformQualifier: measurementEmailUuidAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: measurementEmailUuidAriStaticOpts.resourceOwner,
      resourceType: measurementEmailUuidAriStaticOpts.resourceType,
      resourceId: `${opts.emailId}`,
      resourceIdSegmentValues: {
        emailId: opts.emailId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, measurementEmailUuidAriStaticOpts);
    return new _MeasurementEmailUuidAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, measurementEmailUuidAriStaticOpts);
    return new _MeasurementEmailUuidAri(opts);
  }
  getVariables() {
    return {
      emailId: this.emailId
    };
  }
};

export {
  MeasurementEmailUuidAri
};
