import {
  MercuryFocusAreaStatusUpdateAriResourceOwner,
  MercuryFocusAreaStatusUpdateAriResourceType
} from "./chunk-QACKR6VL.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/mercury/focus-area-status-update/manifest.ts
var mercuryFocusAreaStatusUpdateAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: MercuryFocusAreaStatusUpdateAriResourceOwner,
  resourceType: MercuryFocusAreaStatusUpdateAriResourceType,
  resourceIdSlug: "workspace/{workspaceId}/{focusAreaStatusUpdateId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    focusAreaStatusUpdateId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/mercury/focus-area-status-update/index.ts
var MercuryFocusAreaStatusUpdateAri = class _MercuryFocusAreaStatusUpdateAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._focusAreaStatusUpdateId = opts.resourceIdSegmentValues.focusAreaStatusUpdateId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get focusAreaStatusUpdateId() {
    return this._focusAreaStatusUpdateId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: mercuryFocusAreaStatusUpdateAriStaticOpts.qualifier,
      platformQualifier: mercuryFocusAreaStatusUpdateAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: mercuryFocusAreaStatusUpdateAriStaticOpts.resourceOwner,
      resourceType: mercuryFocusAreaStatusUpdateAriStaticOpts.resourceType,
      resourceId: `workspace/${opts.workspaceId}/${opts.focusAreaStatusUpdateId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        focusAreaStatusUpdateId: opts.focusAreaStatusUpdateId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, mercuryFocusAreaStatusUpdateAriStaticOpts);
    return new _MercuryFocusAreaStatusUpdateAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, mercuryFocusAreaStatusUpdateAriStaticOpts);
    return new _MercuryFocusAreaStatusUpdateAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      focusAreaStatusUpdateId: this.focusAreaStatusUpdateId
    };
  }
};

export {
  MercuryFocusAreaStatusUpdateAri
};
