import {
  OpsgenieApiRequestMetricAriResourceOwner,
  OpsgenieApiRequestMetricAriResourceType
} from "./chunk-R4SGT2SX.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/opsgenie/api-request-metric/manifest.ts
var opsgenieApiRequestMetricAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: OpsgenieApiRequestMetricAriResourceOwner,
  resourceType: OpsgenieApiRequestMetricAriResourceType,
  resourceIdSlug: "{workspaceId}/{apiRequestMetricId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    apiRequestMetricId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/opsgenie/api-request-metric/index.ts
var OpsgenieApiRequestMetricAri = class _OpsgenieApiRequestMetricAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._apiRequestMetricId = opts.resourceIdSegmentValues.apiRequestMetricId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get apiRequestMetricId() {
    return this._apiRequestMetricId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: opsgenieApiRequestMetricAriStaticOpts.qualifier,
      platformQualifier: opsgenieApiRequestMetricAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: opsgenieApiRequestMetricAriStaticOpts.resourceOwner,
      resourceType: opsgenieApiRequestMetricAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.apiRequestMetricId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        apiRequestMetricId: opts.apiRequestMetricId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieApiRequestMetricAriStaticOpts);
    return new _OpsgenieApiRequestMetricAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, opsgenieApiRequestMetricAriStaticOpts);
    return new _OpsgenieApiRequestMetricAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      apiRequestMetricId: this.apiRequestMetricId
    };
  }
};

export {
  OpsgenieApiRequestMetricAri
};
