"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);

// src/townsquare/index.ts
var townsquare_exports = {};
__export(townsquare_exports, {
  TownsquareCommentAri: () => TownsquareCommentAri,
  TownsquareGoalAri: () => TownsquareGoalAri,
  TownsquareHelpPointerAri: () => TownsquareHelpPointerAri,
  TownsquareLearningAri: () => TownsquareLearningAri,
  TownsquareProjectAri: () => TownsquareProjectAri,
  TownsquareQuestionAri: () => TownsquareQuestionAri,
  TownsquareRoleAri: () => TownsquareRoleAri,
  TownsquareSiteAri: () => TownsquareSiteAri,
  TownsquareTagAri: () => TownsquareTagAri,
  TownsquareWorkspaceAri: () => TownsquareWorkspaceAri
});
module.exports = __toCommonJS(townsquare_exports);

// src/errors.ts
var ValidationError = class extends Error {
};

// src/core/rules/cloud-id.ts
function validateCloudId(cloudId, format = new RegExp("^[a-zA-Z0-9\\-]*$")) {
  if (!cloudId.match(format))
    throw new ValidationError(`Invalid cloud ID, expected ID of format ${format}.`);
}

// src/core/rules/platform-qualifier.ts
function validatePlatformQualifier(qualifier) {
  if (qualifier !== "cloud" && qualifier !== "third-party")
    throw new ValidationError(`Identifier must have a qualifier of 'cloud' or 'third-party'. Received: ${qualifier}`);
}

// src/core/rules/qualifier.ts
function validateAtiQualifier(qualifier) {
  if (qualifier !== "ati")
    throw new ValidationError(`ATI must have a qualifier of 'ati'. Received: ${qualifier}`);
}
function validateAriQualifier(qualifier) {
  if (qualifier !== "ari")
    throw new ValidationError(`ARI must have a qualifier of 'ari'. Received: ${qualifier}`);
}

// src/core/rules/resource-id.ts
function validateResourceId(id, format = new RegExp("[!a-zA-Z0-9\\-_.~@:{}=]+(/[!a-zA-Z0-9\\-_.~@:{}=]+)*" /* ANY_RESOURCE_ID */), key = "resourceId") {
  let formatWithCarets = new RegExp(`^${format.source}$`);
  if (!id.match(formatWithCarets))
    throw new ValidationError(`Invalid ${key} - ${id}, expected ID of format ${formatWithCarets}.`);
}

// src/core/rules/resource-id-segments.ts
function validateResourceIdSegments(resourceIdSegmentValues, resourceIdSegmentFormats) {
  Object.entries(resourceIdSegmentValues).forEach(([resourceIdKey, resourceIdValue]) => {
    validateResourceId(resourceIdValue, resourceIdSegmentFormats == null ? void 0 : resourceIdSegmentFormats[resourceIdKey], resourceIdKey);
  });
}

// src/core/rules/resource-owner.ts
function validateResourceOwner(owner, expectedResourceOwner) {
  if (expectedResourceOwner && owner !== expectedResourceOwner)
    throw new ValidationError(`Invalid resource owner - ${owner}, expected ${expectedResourceOwner}.`);
}

// src/core/rules/resource-type.ts
function validateResourceType(type, expectedResourceType) {
  if (expectedResourceType && type !== expectedResourceType)
    throw new ValidationError(`Invalid resource type - ${type}, expected ${expectedResourceType}.`);
}

// src/core/parser/base.ts
var NUMBER_OF_BASE_SEGMENTS = 5, SEGMENT_SEPARATOR = ":", BaseParser = class {
  static getIdentifierSegments(inputStr, numberOfSegmentsRequired) {
    let allSegments = inputStr.split(SEGMENT_SEPARATOR);
    if (allSegments.length < numberOfSegmentsRequired)
      throw new ValidationError(`Input string must have ${numberOfSegmentsRequired} segments.`);
    if (allSegments.length > numberOfSegmentsRequired) {
      let segments = allSegments.slice(0, NUMBER_OF_BASE_SEGMENTS - 1), segmentsForResourceId = allSegments.slice(NUMBER_OF_BASE_SEGMENTS - 1, allSegments.length);
      return [...segments, segmentsForResourceId.join(SEGMENT_SEPARATOR)];
    }
    return allSegments;
  }
};

// src/core/parser/ari.ts
var NUMBER_OF_ARI_SEGMENTS = 5, AriParser = class extends BaseParser {
  static fromString(maybeAri, ariProperties) {
    let segments = this.getIdentifierSegments(maybeAri, NUMBER_OF_ARI_SEGMENTS), [qualifier, platformQualifier, resourceOwner, cloudId, resourceTypeAndId] = segments, [resourceType, ...resourceIdSegments] = resourceTypeAndId.split("/"), maybeAriDerivedProperties = {
      qualifier,
      platformQualifier,
      cloudId,
      resourceOwner,
      resourceType,
      resourceId: resourceIdSegments.join("/"),
      resourceIdSegmentValues: ariProperties != null && ariProperties.resourceIdSlug ? this.ariSegmentValuesFromSlug(
        ariProperties.resourceIdSlug,
        resourceIdSegments.join("/"),
        Object.keys(ariProperties.resourceIdSegmentFormats)
      ) : {}
    };
    return this.fromOpts(maybeAriDerivedProperties, ariProperties);
  }
  static fromOpts(maybeAriOpts, ariProperties) {
    let {
      qualifier = "ari",
      platformQualifier = "cloud",
      resourceOwner,
      cloudId,
      resourceId,
      resourceIdSegmentValues,
      resourceType
    } = maybeAriOpts;
    return validateAriQualifier(qualifier), validatePlatformQualifier(platformQualifier), validateCloudId(maybeAriOpts.cloudId || "", ariProperties == null ? void 0 : ariProperties.cloudId), validateResourceOwner(resourceOwner, ariProperties == null ? void 0 : ariProperties.resourceOwner), validateResourceType(resourceType, ariProperties == null ? void 0 : ariProperties.resourceType), validateResourceIdSegments(resourceIdSegmentValues, ariProperties == null ? void 0 : ariProperties.resourceIdSegmentFormats), {
      qualifier,
      resourceOwner,
      resourceType,
      platformQualifier,
      cloudId,
      resourceId,
      resourceIdSegmentValues
    };
  }
  static ariSegmentValuesFromSlug(slug, incomingSegments, expectedKeys) {
    let regexpResult = new RegExp("^" + slug.replace(/\{(.*?)\}/g, "(?<$1>.*?)") + "$").exec(incomingSegments);
    if (!regexpResult)
      throw new ValidationError(`Segment '${incomingSegments}' don't match expected slug: ${slug}`);
    return expectedKeys.forEach((expectedKey) => {
      var _a;
      if (!((_a = regexpResult.groups) != null && _a[expectedKey]))
        throw new ValidationError(`No value supplied for '${expectedKey}' based on slug ${slug}`);
    }), regexpResult.groups || {};
  }
};

// src/core/parser/ati.ts
var NUMBER_OF_ATI_SEGMENTS = 4, AtiParser = class extends BaseParser {
  static fromString(inputStr, atiOpts) {
    let segments = this.getIdentifierSegments(inputStr, NUMBER_OF_ATI_SEGMENTS), [qualifier = "ati", platformQualifier = "cloud", resourceOwner, resourceType] = segments;
    return validateAtiQualifier(qualifier), validatePlatformQualifier(platformQualifier), validateResourceOwner(resourceOwner, atiOpts == null ? void 0 : atiOpts.resourceOwner), validateResourceType(resourceType, atiOpts == null ? void 0 : atiOpts.resourceType), { platformQualifier, resourceOwner, resourceType };
  }
  static fromOpts(maybeAtiOpts, atiOpts) {
    let { qualifier, platformQualifier, resourceOwner, resourceType } = maybeAtiOpts;
    return validateAtiQualifier(qualifier), validatePlatformQualifier(platformQualifier), validateResourceOwner(resourceOwner, atiOpts == null ? void 0 : atiOpts.resourceOwner), validateResourceType(resourceType, atiOpts == null ? void 0 : atiOpts.resourceType), {
      platformQualifier,
      resourceOwner,
      resourceType
    };
  }
};

// src/ati.ts
var Ati = class _Ati {
  constructor(platformQualifier, resourceOwner, resourceType) {
    this._platformQualifier = platformQualifier, this._resourceOwner = resourceOwner, this._resourceType = resourceType;
  }
  get platformQualifier() {
    return this._platformQualifier;
  }
  get resourceOwner() {
    return this._resourceOwner;
  }
  get resourceType() {
    return this._resourceType;
  }
  static create(opts) {
    return new _Ati(opts.platformQualifier || "cloud", opts.resourceOwner, opts.resourceType);
  }
  static parse(maybeAti, atiOpts) {
    let opts = AtiParser.fromString(maybeAti, atiOpts);
    return new _Ati(opts.platformQualifier, opts.resourceOwner, opts.resourceType);
  }
  toString() {
    return `ati:${this.platformQualifier}:${this.resourceOwner}:${this.resourceType}`;
  }
  toJSON() {
    return this.toString();
  }
  toOpts() {
    return {
      platformQualifier: this._platformQualifier,
      resourceOwner: this._resourceOwner,
      resourceType: this._resourceType
    };
  }
};

// src/core/ari.ts
var Ari = class {
  constructor(opts) {
    this._ati = Ati.create({
      platformQualifier: opts.platformQualifier || "cloud",
      resourceOwner: opts.resourceOwner,
      resourceType: opts.resourceType
    }), this._cloudId = opts.cloudId !== "" ? opts.cloudId : void 0, this._resourceId = opts.resourceId;
  }
  get platformQualifier() {
    return this._ati.platformQualifier;
  }
  get cloudId() {
    return this._cloudId;
  }
  get resourceOwner() {
    return this._ati.resourceOwner;
  }
  get resourceType() {
    return this._ati.resourceType;
  }
  get resourceId() {
    return this._resourceId;
  }
  get ati() {
    return this._ati;
  }
  equals(other) {
    return this.toString() === other.toString();
  }
  toString() {
    return `ari:${this.platformQualifier}:${this.resourceOwner}:${this.cloudId || ""}:${this.resourceType}/${this.resourceId}`;
  }
  toJSON() {
    return this.toString();
  }
  toOpts() {
    return {
      platformQualifier: this.platformQualifier,
      resourceOwner: this.resourceOwner,
      cloudId: this.cloudId,
      resourceType: this.resourceType,
      resourceId: this.resourceId
    };
  }
};

// src/any-ari.ts
var AnyAri = class _AnyAri extends Ari {
  constructor(opts) {
    super(opts);
  }
  static create(ariOpts, ariStaticOpts) {
    let ariOptsWithDefaults = { ...ariOpts, resourceIdSegmentValues: {} }, validatedOpts = AriParser.fromOpts(ariOptsWithDefaults, ariStaticOpts);
    return new _AnyAri(validatedOpts);
  }
  static parse(maybeAri, ariStaticOpts) {
    let validatedOpts = AriParser.fromString(maybeAri, ariStaticOpts);
    return new _AnyAri(validatedOpts);
  }
  static check(maybeAri) {
    try {
      return _AnyAri.parse(maybeAri.toString()), !0;
    } catch (err) {
      return !1;
    }
  }
  asAnyAri() {
    return this;
  }
};

// src/core/registered-ari.ts
var RegisteredAri = class extends Ari {
  static check(maybeAri) {
    try {
      return this.parse(maybeAri.toString()), !0;
    } catch (err) {
      return !1;
    }
  }
  asAnyAri() {
    return AnyAri.parse(this.toString());
  }
};

// src/townsquare/comment/types.ts
var TownsquareCommentAriResourceOwner = "townsquare", TownsquareCommentAriResourceType = "comment";

// src/townsquare/comment/manifest.ts
var townsquareCommentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: TownsquareCommentAriResourceOwner,
  resourceType: TownsquareCommentAriResourceType,
  resourceIdSlug: "{commentUuid}",
  resourceIdSegmentFormats: {
    commentUuid: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/townsquare/comment/index.ts
var TownsquareCommentAri = class _TownsquareCommentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._commentUuid = opts.resourceIdSegmentValues.commentUuid;
  }
  get siteId() {
    return this._siteId;
  }
  get commentUuid() {
    return this._commentUuid;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: townsquareCommentAriStaticOpts.qualifier,
      platformQualifier: townsquareCommentAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: townsquareCommentAriStaticOpts.resourceOwner,
      resourceType: townsquareCommentAriStaticOpts.resourceType,
      resourceId: `${opts.commentUuid}`,
      resourceIdSegmentValues: {
        commentUuid: opts.commentUuid
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, townsquareCommentAriStaticOpts);
    return new _TownsquareCommentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, townsquareCommentAriStaticOpts);
    return new _TownsquareCommentAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      commentUuid: this.commentUuid
    };
  }
};

// src/townsquare/goal/types.ts
var TownsquareGoalAriResourceOwner = "townsquare", TownsquareGoalAriResourceType = "goal";

// src/townsquare/goal/manifest.ts
var townsquareGoalAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: TownsquareGoalAriResourceOwner,
  resourceType: TownsquareGoalAriResourceType,
  resourceIdSlug: "{goalUuid}",
  resourceIdSegmentFormats: {
    goalUuid: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/townsquare/goal/index.ts
var TownsquareGoalAri = class _TownsquareGoalAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._goalUuid = opts.resourceIdSegmentValues.goalUuid;
  }
  get siteId() {
    return this._siteId;
  }
  get goalUuid() {
    return this._goalUuid;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: townsquareGoalAriStaticOpts.qualifier,
      platformQualifier: townsquareGoalAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: townsquareGoalAriStaticOpts.resourceOwner,
      resourceType: townsquareGoalAriStaticOpts.resourceType,
      resourceId: `${opts.goalUuid}`,
      resourceIdSegmentValues: {
        goalUuid: opts.goalUuid
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, townsquareGoalAriStaticOpts);
    return new _TownsquareGoalAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, townsquareGoalAriStaticOpts);
    return new _TownsquareGoalAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      goalUuid: this.goalUuid
    };
  }
};

// src/townsquare/help-pointer/types.ts
var TownsquareHelpPointerAriResourceOwner = "townsquare", TownsquareHelpPointerAriResourceType = "help-pointer";

// src/townsquare/help-pointer/manifest.ts
var townsquareHelpPointerAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: TownsquareHelpPointerAriResourceOwner,
  resourceType: TownsquareHelpPointerAriResourceType,
  resourceIdSlug: "{helpPointerUuid}",
  resourceIdSegmentFormats: {
    helpPointerUuid: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/townsquare/help-pointer/index.ts
var TownsquareHelpPointerAri = class _TownsquareHelpPointerAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._helpPointerUuid = opts.resourceIdSegmentValues.helpPointerUuid;
  }
  get siteId() {
    return this._siteId;
  }
  get helpPointerUuid() {
    return this._helpPointerUuid;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: townsquareHelpPointerAriStaticOpts.qualifier,
      platformQualifier: townsquareHelpPointerAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: townsquareHelpPointerAriStaticOpts.resourceOwner,
      resourceType: townsquareHelpPointerAriStaticOpts.resourceType,
      resourceId: `${opts.helpPointerUuid}`,
      resourceIdSegmentValues: {
        helpPointerUuid: opts.helpPointerUuid
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, townsquareHelpPointerAriStaticOpts);
    return new _TownsquareHelpPointerAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, townsquareHelpPointerAriStaticOpts);
    return new _TownsquareHelpPointerAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      helpPointerUuid: this.helpPointerUuid
    };
  }
};

// src/townsquare/learning/types.ts
var TownsquareLearningAriResourceOwner = "townsquare", TownsquareLearningAriResourceType = "learning";

// src/townsquare/learning/manifest.ts
var townsquareLearningAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: TownsquareLearningAriResourceOwner,
  resourceType: TownsquareLearningAriResourceType,
  resourceIdSlug: "{learningUuid}",
  resourceIdSegmentFormats: {
    learningUuid: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/townsquare/learning/index.ts
var TownsquareLearningAri = class _TownsquareLearningAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._learningUuid = opts.resourceIdSegmentValues.learningUuid;
  }
  get siteId() {
    return this._siteId;
  }
  get learningUuid() {
    return this._learningUuid;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: townsquareLearningAriStaticOpts.qualifier,
      platformQualifier: townsquareLearningAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: townsquareLearningAriStaticOpts.resourceOwner,
      resourceType: townsquareLearningAriStaticOpts.resourceType,
      resourceId: `${opts.learningUuid}`,
      resourceIdSegmentValues: {
        learningUuid: opts.learningUuid
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, townsquareLearningAriStaticOpts);
    return new _TownsquareLearningAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, townsquareLearningAriStaticOpts);
    return new _TownsquareLearningAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      learningUuid: this.learningUuid
    };
  }
};

// src/townsquare/project/types.ts
var TownsquareProjectAriResourceOwner = "townsquare", TownsquareProjectAriResourceType = "project";

// src/townsquare/project/manifest.ts
var townsquareProjectAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: TownsquareProjectAriResourceOwner,
  resourceType: TownsquareProjectAriResourceType,
  resourceIdSlug: "{projectUuid}",
  resourceIdSegmentFormats: {
    projectUuid: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/townsquare/project/index.ts
var TownsquareProjectAri = class _TownsquareProjectAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._projectUuid = opts.resourceIdSegmentValues.projectUuid;
  }
  get siteId() {
    return this._siteId;
  }
  get projectUuid() {
    return this._projectUuid;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: townsquareProjectAriStaticOpts.qualifier,
      platformQualifier: townsquareProjectAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: townsquareProjectAriStaticOpts.resourceOwner,
      resourceType: townsquareProjectAriStaticOpts.resourceType,
      resourceId: `${opts.projectUuid}`,
      resourceIdSegmentValues: {
        projectUuid: opts.projectUuid
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, townsquareProjectAriStaticOpts);
    return new _TownsquareProjectAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, townsquareProjectAriStaticOpts);
    return new _TownsquareProjectAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      projectUuid: this.projectUuid
    };
  }
};

// src/townsquare/question/types.ts
var TownsquareQuestionAriResourceOwner = "townsquare", TownsquareQuestionAriResourceType = "question";

// src/townsquare/question/manifest.ts
var townsquareQuestionAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: TownsquareQuestionAriResourceOwner,
  resourceType: TownsquareQuestionAriResourceType,
  resourceIdSlug: "{questionUuid}",
  resourceIdSegmentFormats: {
    questionUuid: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/townsquare/question/index.ts
var TownsquareQuestionAri = class _TownsquareQuestionAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._questionUuid = opts.resourceIdSegmentValues.questionUuid;
  }
  get siteId() {
    return this._siteId;
  }
  get questionUuid() {
    return this._questionUuid;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: townsquareQuestionAriStaticOpts.qualifier,
      platformQualifier: townsquareQuestionAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: townsquareQuestionAriStaticOpts.resourceOwner,
      resourceType: townsquareQuestionAriStaticOpts.resourceType,
      resourceId: `${opts.questionUuid}`,
      resourceIdSegmentValues: {
        questionUuid: opts.questionUuid
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, townsquareQuestionAriStaticOpts);
    return new _TownsquareQuestionAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, townsquareQuestionAriStaticOpts);
    return new _TownsquareQuestionAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      questionUuid: this.questionUuid
    };
  }
};

// src/townsquare/role/types.ts
var TownsquareRoleAriResourceOwner = "townsquare", TownsquareRoleAriResourceType = "role";

// src/townsquare/role/manifest.ts
var townsquareRoleAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: TownsquareRoleAriResourceOwner,
  resourceType: TownsquareRoleAriResourceType,
  resourceIdSlug: "product/{roleType}",
  resourceIdSegmentFormats: {
    roleType: /(?:member|admin)/
    // eslint-disable-line no-useless-escape
  }
};

// src/townsquare/role/index.ts
var TownsquareRoleAri = class _TownsquareRoleAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._roleType = opts.resourceIdSegmentValues.roleType;
  }
  get roleType() {
    return this._roleType;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: townsquareRoleAriStaticOpts.qualifier,
      platformQualifier: townsquareRoleAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: townsquareRoleAriStaticOpts.resourceOwner,
      resourceType: townsquareRoleAriStaticOpts.resourceType,
      resourceId: `product/${opts.roleType}`,
      resourceIdSegmentValues: {
        roleType: opts.roleType
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, townsquareRoleAriStaticOpts);
    return new _TownsquareRoleAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, townsquareRoleAriStaticOpts);
    return new _TownsquareRoleAri(opts);
  }
  getVariables() {
    return {
      roleType: this.roleType
    };
  }
};

// src/townsquare/site/types.ts
var TownsquareSiteAriResourceOwner = "townsquare", TownsquareSiteAriResourceType = "site";

// src/townsquare/site/manifest.ts
var townsquareSiteAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: TownsquareSiteAriResourceOwner,
  resourceType: TownsquareSiteAriResourceType,
  resourceIdSlug: "{siteId}",
  resourceIdSegmentFormats: {
    siteId: /[a-zA-Z0-9\-]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/townsquare/site/index.ts
var TownsquareSiteAri = class _TownsquareSiteAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.resourceIdSegmentValues.siteId;
  }
  get siteId() {
    return this._siteId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: townsquareSiteAriStaticOpts.qualifier,
      platformQualifier: townsquareSiteAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: townsquareSiteAriStaticOpts.resourceOwner,
      resourceType: townsquareSiteAriStaticOpts.resourceType,
      resourceId: `${opts.siteId}`,
      resourceIdSegmentValues: {
        siteId: opts.siteId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, townsquareSiteAriStaticOpts);
    return new _TownsquareSiteAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, townsquareSiteAriStaticOpts);
    return new _TownsquareSiteAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId
    };
  }
};

// src/townsquare/tag/types.ts
var TownsquareTagAriResourceOwner = "townsquare", TownsquareTagAriResourceType = "tag";

// src/townsquare/tag/manifest.ts
var townsquareTagAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: TownsquareTagAriResourceOwner,
  resourceType: TownsquareTagAriResourceType,
  resourceIdSlug: "{tagUuid}",
  resourceIdSegmentFormats: {
    tagUuid: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/townsquare/tag/index.ts
var TownsquareTagAri = class _TownsquareTagAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._tagUuid = opts.resourceIdSegmentValues.tagUuid;
  }
  get siteId() {
    return this._siteId;
  }
  get tagUuid() {
    return this._tagUuid;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: townsquareTagAriStaticOpts.qualifier,
      platformQualifier: townsquareTagAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: townsquareTagAriStaticOpts.resourceOwner,
      resourceType: townsquareTagAriStaticOpts.resourceType,
      resourceId: `${opts.tagUuid}`,
      resourceIdSegmentValues: {
        tagUuid: opts.tagUuid
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, townsquareTagAriStaticOpts);
    return new _TownsquareTagAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, townsquareTagAriStaticOpts);
    return new _TownsquareTagAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      tagUuid: this.tagUuid
    };
  }
};

// src/townsquare/workspace/types.ts
var TownsquareWorkspaceAriResourceOwner = "townsquare", TownsquareWorkspaceAriResourceType = "workspace";

// src/townsquare/workspace/manifest.ts
var townsquareWorkspaceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: TownsquareWorkspaceAriResourceOwner,
  resourceType: TownsquareWorkspaceAriResourceType,
  resourceIdSlug: "{activationId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/townsquare/workspace/index.ts
var TownsquareWorkspaceAri = class _TownsquareWorkspaceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: townsquareWorkspaceAriStaticOpts.qualifier,
      platformQualifier: townsquareWorkspaceAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: townsquareWorkspaceAriStaticOpts.resourceOwner,
      resourceType: townsquareWorkspaceAriStaticOpts.resourceType,
      resourceId: `${opts.activationId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, townsquareWorkspaceAriStaticOpts);
    return new _TownsquareWorkspaceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, townsquareWorkspaceAriStaticOpts);
    return new _TownsquareWorkspaceAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId
    };
  }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  TownsquareCommentAri,
  TownsquareGoalAri,
  TownsquareHelpPointerAri,
  TownsquareLearningAri,
  TownsquareProjectAri,
  TownsquareQuestionAri,
  TownsquareRoleAri,
  TownsquareSiteAri,
  TownsquareTagAri,
  TownsquareWorkspaceAri
});
