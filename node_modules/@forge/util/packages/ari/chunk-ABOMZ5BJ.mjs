import {
  GraphPullRequestHistoryAriResourceOwner,
  GraphPullRequestHistoryAriResourceType
} from "./chunk-K4SS2RGK.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/graph/pull-request-history/manifest.ts
var graphPullRequestHistoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: GraphPullRequestHistoryAriResourceOwner,
  resourceType: GraphPullRequestHistoryAriResourceType,
  resourceIdSlug: "activation/{activationId}/{pullRequestId}/{updateSequenceNumber}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    pullRequestId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    updateSequenceNumber: /\d+/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/pull-request-history/index.ts
var GraphPullRequestHistoryAri = class _GraphPullRequestHistoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._pullRequestId = opts.resourceIdSegmentValues.pullRequestId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;
  }
  get activationId() {
    return this._activationId;
  }
  get pullRequestId() {
    return this._pullRequestId;
  }
  get updateSequenceNumber() {
    return this._updateSequenceNumber;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphPullRequestHistoryAriStaticOpts.qualifier,
      platformQualifier: graphPullRequestHistoryAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphPullRequestHistoryAriStaticOpts.resourceOwner,
      resourceType: graphPullRequestHistoryAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.pullRequestId}/${opts.updateSequenceNumber}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        pullRequestId: opts.pullRequestId,
        updateSequenceNumber: opts.updateSequenceNumber
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphPullRequestHistoryAriStaticOpts);
    return new _GraphPullRequestHistoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphPullRequestHistoryAriStaticOpts);
    return new _GraphPullRequestHistoryAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      pullRequestId: this.pullRequestId,
      updateSequenceNumber: this.updateSequenceNumber
    };
  }
};

export {
  GraphPullRequestHistoryAri
};
