import {
  JiraUserBroadcastMessageAriResourceOwner,
  JiraUserBroadcastMessageAriResourceType
} from "./chunk-MHNZKONH.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/jira/user-broadcast-message/manifest.ts
var jiraUserBroadcastMessageAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraUserBroadcastMessageAriResourceOwner,
  resourceType: JiraUserBroadcastMessageAriResourceType,
  resourceIdSlug: "activation/{activationId}/{broadcastMessageId}/{userId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    broadcastMessageId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    userId: /[a-zA-Z0-9_\-\:]{1,128}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/user-broadcast-message/index.ts
var JiraUserBroadcastMessageAri = class _JiraUserBroadcastMessageAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._broadcastMessageId = opts.resourceIdSegmentValues.broadcastMessageId, this._userId = opts.resourceIdSegmentValues.userId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get broadcastMessageId() {
    return this._broadcastMessageId;
  }
  get userId() {
    return this._userId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraUserBroadcastMessageAriStaticOpts.qualifier,
      platformQualifier: jiraUserBroadcastMessageAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraUserBroadcastMessageAriStaticOpts.resourceOwner,
      resourceType: jiraUserBroadcastMessageAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.broadcastMessageId}/${opts.userId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        broadcastMessageId: opts.broadcastMessageId,
        userId: opts.userId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraUserBroadcastMessageAriStaticOpts);
    return new _JiraUserBroadcastMessageAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraUserBroadcastMessageAriStaticOpts);
    return new _JiraUserBroadcastMessageAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      broadcastMessageId: this.broadcastMessageId,
      userId: this.userId
    };
  }
};

export {
  JiraUserBroadcastMessageAri
};
