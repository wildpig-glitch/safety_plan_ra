import {
  MarketingCustomerDomainAriResourceOwner,
  MarketingCustomerDomainAriResourceType
} from "./chunk-VAIM2B7I.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/marketing/customer-domain/manifest.ts
var marketingCustomerDomainAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: MarketingCustomerDomainAriResourceOwner,
  resourceType: MarketingCustomerDomainAriResourceType,
  resourceIdSlug: "{domainBase64}",
  resourceIdSegmentFormats: {
    domainBase64: /[a-zA-Z0-9=]+={0,1}/
    // eslint-disable-line no-useless-escape
  }
};

// src/marketing/customer-domain/index.ts
var MarketingCustomerDomainAri = class _MarketingCustomerDomainAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._domainBase64 = opts.resourceIdSegmentValues.domainBase64;
  }
  get domainBase64() {
    return this._domainBase64;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: marketingCustomerDomainAriStaticOpts.qualifier,
      platformQualifier: marketingCustomerDomainAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: marketingCustomerDomainAriStaticOpts.resourceOwner,
      resourceType: marketingCustomerDomainAriStaticOpts.resourceType,
      resourceId: `${opts.domainBase64}`,
      resourceIdSegmentValues: {
        domainBase64: opts.domainBase64
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, marketingCustomerDomainAriStaticOpts);
    return new _MarketingCustomerDomainAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, marketingCustomerDomainAriStaticOpts);
    return new _MarketingCustomerDomainAri(opts);
  }
  getVariables() {
    return {
      domainBase64: this.domainBase64
    };
  }
};

export {
  MarketingCustomerDomainAri
};
