import {
  DataLakeLakeConnectionAriResourceOwner,
  DataLakeLakeConnectionAriResourceType
} from "./chunk-2Y4LARQO.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/data-lake/lake-connection/manifest.ts
var dataLakeLakeConnectionAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: DataLakeLakeConnectionAriResourceOwner,
  resourceType: DataLakeLakeConnectionAriResourceType,
  resourceIdSlug: "{lakeConnectionId}",
  resourceIdSegmentFormats: {
    lakeConnectionId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/data-lake/lake-connection/index.ts
var DataLakeLakeConnectionAri = class _DataLakeLakeConnectionAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._lakeConnectionId = opts.resourceIdSegmentValues.lakeConnectionId;
  }
  get lakeConnectionId() {
    return this._lakeConnectionId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: dataLakeLakeConnectionAriStaticOpts.qualifier,
      platformQualifier: dataLakeLakeConnectionAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: dataLakeLakeConnectionAriStaticOpts.resourceOwner,
      resourceType: dataLakeLakeConnectionAriStaticOpts.resourceType,
      resourceId: `${opts.lakeConnectionId}`,
      resourceIdSegmentValues: {
        lakeConnectionId: opts.lakeConnectionId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, dataLakeLakeConnectionAriStaticOpts);
    return new _DataLakeLakeConnectionAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, dataLakeLakeConnectionAriStaticOpts);
    return new _DataLakeLakeConnectionAri(opts);
  }
  getVariables() {
    return {
      lakeConnectionId: this.lakeConnectionId
    };
  }
};

export {
  DataLakeLakeConnectionAri
};
