import {
  ConfluenceContentAriResourceOwner,
  ConfluenceContentAriResourceType
} from "./chunk-LVQBHR63.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/confluence/content/manifest.ts
var confluenceContentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: ConfluenceContentAriResourceOwner,
  resourceType: ConfluenceContentAriResourceType,
  resourceIdSlug: "{contentId}",
  resourceIdSegmentFormats: {
    contentId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/confluence/content/index.ts
var ConfluenceContentAri = class _ConfluenceContentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._contentId = opts.resourceIdSegmentValues.contentId;
  }
  get siteId() {
    return this._siteId;
  }
  get contentId() {
    return this._contentId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: confluenceContentAriStaticOpts.qualifier,
      platformQualifier: confluenceContentAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: confluenceContentAriStaticOpts.resourceOwner,
      resourceType: confluenceContentAriStaticOpts.resourceType,
      resourceId: `${opts.contentId}`,
      resourceIdSegmentValues: {
        contentId: opts.contentId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, confluenceContentAriStaticOpts);
    return new _ConfluenceContentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, confluenceContentAriStaticOpts);
    return new _ConfluenceContentAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      contentId: this.contentId
    };
  }
};

export {
  ConfluenceContentAri
};
