import {
  FigmaFileAriResourceOwner,
  FigmaFileAriResourceType
} from "./chunk-4R4BPJCR.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/figma/file/manifest.ts
var figmaFileAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  resourceOwner: FigmaFileAriResourceOwner,
  resourceType: FigmaFileAriResourceType,
  resourceIdSlug: "{fileId}",
  resourceIdSegmentFormats: {
    fileId: /[A-z0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/figma/file/index.ts
var FigmaFileAri = class _FigmaFileAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._fileId = opts.resourceIdSegmentValues.fileId;
  }
  get fileId() {
    return this._fileId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: figmaFileAriStaticOpts.qualifier,
      platformQualifier: figmaFileAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: figmaFileAriStaticOpts.resourceOwner,
      resourceType: figmaFileAriStaticOpts.resourceType,
      resourceId: `${opts.fileId}`,
      resourceIdSegmentValues: {
        fileId: opts.fileId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, figmaFileAriStaticOpts);
    return new _FigmaFileAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, figmaFileAriStaticOpts);
    return new _FigmaFileAri(opts);
  }
  getVariables() {
    return {
      fileId: this.fileId
    };
  }
};

export {
  FigmaFileAri
};
