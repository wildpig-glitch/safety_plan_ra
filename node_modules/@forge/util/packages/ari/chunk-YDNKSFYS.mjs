import {
  BeaconSubscriptionAriResourceOwner,
  BeaconSubscriptionAriResourceType
} from "./chunk-CWWCGBU4.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/beacon/subscription/manifest.ts
var beaconSubscriptionAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: BeaconSubscriptionAriResourceOwner,
  resourceType: BeaconSubscriptionAriResourceType,
  resourceIdSlug: "{workspaceId}/{subscriptionId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    subscriptionId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/beacon/subscription/index.ts
var BeaconSubscriptionAri = class _BeaconSubscriptionAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._subscriptionId = opts.resourceIdSegmentValues.subscriptionId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get subscriptionId() {
    return this._subscriptionId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: beaconSubscriptionAriStaticOpts.qualifier,
      platformQualifier: beaconSubscriptionAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: beaconSubscriptionAriStaticOpts.resourceOwner,
      resourceType: beaconSubscriptionAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.subscriptionId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        subscriptionId: opts.subscriptionId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, beaconSubscriptionAriStaticOpts);
    return new _BeaconSubscriptionAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, beaconSubscriptionAriStaticOpts);
    return new _BeaconSubscriptionAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      subscriptionId: this.subscriptionId
    };
  }
};

export {
  BeaconSubscriptionAri
};
