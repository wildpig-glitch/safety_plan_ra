import {
  CompassUserDefinedParameterAriResourceOwner,
  CompassUserDefinedParameterAriResourceType
} from "./chunk-U7N5T7JC.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/compass/user-defined-parameter/manifest.ts
var compassUserDefinedParameterAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: CompassUserDefinedParameterAriResourceOwner,
  resourceType: CompassUserDefinedParameterAriResourceType,
  resourceIdSlug: "{workspaceId}/{userDefinedParameterId}",
  resourceIdSegmentFormats: {
    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    userDefinedParameterId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/compass/user-defined-parameter/index.ts
var CompassUserDefinedParameterAri = class _CompassUserDefinedParameterAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._userDefinedParameterId = opts.resourceIdSegmentValues.userDefinedParameterId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get userDefinedParameterId() {
    return this._userDefinedParameterId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: compassUserDefinedParameterAriStaticOpts.qualifier,
      platformQualifier: compassUserDefinedParameterAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: compassUserDefinedParameterAriStaticOpts.resourceOwner,
      resourceType: compassUserDefinedParameterAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.userDefinedParameterId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        userDefinedParameterId: opts.userDefinedParameterId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, compassUserDefinedParameterAriStaticOpts);
    return new _CompassUserDefinedParameterAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, compassUserDefinedParameterAriStaticOpts);
    return new _CompassUserDefinedParameterAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      userDefinedParameterId: this.userDefinedParameterId
    };
  }
};

export {
  CompassUserDefinedParameterAri
};
