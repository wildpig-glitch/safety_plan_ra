import {
  CmdbWorkspaceAriResourceOwner,
  CmdbWorkspaceAriResourceType
} from "./chunk-UQ5PWXBJ.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/cmdb/workspace/manifest.ts
var cmdbWorkspaceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: CmdbWorkspaceAriResourceOwner,
  resourceType: CmdbWorkspaceAriResourceType,
  resourceIdSlug: "{workspaceId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/cmdb/workspace/index.ts
var CmdbWorkspaceAri = class _CmdbWorkspaceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: cmdbWorkspaceAriStaticOpts.qualifier,
      platformQualifier: cmdbWorkspaceAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: cmdbWorkspaceAriStaticOpts.resourceOwner,
      resourceType: cmdbWorkspaceAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, cmdbWorkspaceAriStaticOpts);
    return new _CmdbWorkspaceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, cmdbWorkspaceAriStaticOpts);
    return new _CmdbWorkspaceAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId
    };
  }
};

export {
  CmdbWorkspaceAri
};
