import {
  JiraBuildHistoryAriResourceOwner,
  JiraBuildHistoryAriResourceType
} from "./chunk-55Z3USGX.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/jira/build-history/manifest.ts
var jiraBuildHistoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraBuildHistoryAriResourceOwner,
  resourceType: JiraBuildHistoryAriResourceType,
  resourceIdSlug: "activation/{activationId}/{buildId}/{updateSequenceNumber}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    buildId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    updateSequenceNumber: /\d+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/build-history/index.ts
var JiraBuildHistoryAri = class _JiraBuildHistoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._buildId = opts.resourceIdSegmentValues.buildId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get buildId() {
    return this._buildId;
  }
  get updateSequenceNumber() {
    return this._updateSequenceNumber;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraBuildHistoryAriStaticOpts.qualifier,
      platformQualifier: jiraBuildHistoryAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraBuildHistoryAriStaticOpts.resourceOwner,
      resourceType: jiraBuildHistoryAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.buildId}/${opts.updateSequenceNumber}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        buildId: opts.buildId,
        updateSequenceNumber: opts.updateSequenceNumber
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraBuildHistoryAriStaticOpts);
    return new _JiraBuildHistoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraBuildHistoryAriStaticOpts);
    return new _JiraBuildHistoryAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      buildId: this.buildId,
      updateSequenceNumber: this.updateSequenceNumber
    };
  }
};

export {
  JiraBuildHistoryAri
};
