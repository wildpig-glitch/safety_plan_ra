import {
  EcosystemAppEnvironmentVersionAriResourceOwner,
  EcosystemAppEnvironmentVersionAriResourceType
} from "./chunk-CD56DLNS.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/ecosystem/app-environment-version/manifest.ts
var ecosystemAppEnvironmentVersionAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: EcosystemAppEnvironmentVersionAriResourceOwner,
  resourceType: EcosystemAppEnvironmentVersionAriResourceType,
  resourceIdSlug: "{appId}/{environmentId}/{versionId}",
  resourceIdSegmentFormats: {
    appId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    environmentId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    versionId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/ecosystem/app-environment-version/index.ts
var EcosystemAppEnvironmentVersionAri = class _EcosystemAppEnvironmentVersionAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._appId = opts.resourceIdSegmentValues.appId, this._environmentId = opts.resourceIdSegmentValues.environmentId, this._versionId = opts.resourceIdSegmentValues.versionId;
  }
  get appId() {
    return this._appId;
  }
  get environmentId() {
    return this._environmentId;
  }
  get versionId() {
    return this._versionId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: ecosystemAppEnvironmentVersionAriStaticOpts.qualifier,
      platformQualifier: ecosystemAppEnvironmentVersionAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: ecosystemAppEnvironmentVersionAriStaticOpts.resourceOwner,
      resourceType: ecosystemAppEnvironmentVersionAriStaticOpts.resourceType,
      resourceId: `${opts.appId}/${opts.environmentId}/${opts.versionId}`,
      resourceIdSegmentValues: {
        appId: opts.appId,
        environmentId: opts.environmentId,
        versionId: opts.versionId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, ecosystemAppEnvironmentVersionAriStaticOpts);
    return new _EcosystemAppEnvironmentVersionAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, ecosystemAppEnvironmentVersionAriStaticOpts);
    return new _EcosystemAppEnvironmentVersionAri(opts);
  }
  getVariables() {
    return {
      appId: this.appId,
      environmentId: this.environmentId,
      versionId: this.versionId
    };
  }
};

export {
  EcosystemAppEnvironmentVersionAri
};
