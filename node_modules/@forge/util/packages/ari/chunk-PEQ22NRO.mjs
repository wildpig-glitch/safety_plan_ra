import {
  ConfluencePageAriResourceOwner,
  ConfluencePageAriResourceType
} from "./chunk-IMF5GHHQ.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/confluence/page/manifest.ts
var confluencePageAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: ConfluencePageAriResourceOwner,
  resourceType: ConfluencePageAriResourceType,
  resourceIdSlug: "{pageId}",
  resourceIdSegmentFormats: {
    pageId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/confluence/page/index.ts
var ConfluencePageAri = class _ConfluencePageAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._pageId = opts.resourceIdSegmentValues.pageId;
  }
  get siteId() {
    return this._siteId;
  }
  get pageId() {
    return this._pageId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: confluencePageAriStaticOpts.qualifier,
      platformQualifier: confluencePageAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: confluencePageAriStaticOpts.resourceOwner,
      resourceType: confluencePageAriStaticOpts.resourceType,
      resourceId: `${opts.pageId}`,
      resourceIdSegmentValues: {
        pageId: opts.pageId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, confluencePageAriStaticOpts);
    return new _ConfluencePageAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, confluencePageAriStaticOpts);
    return new _ConfluencePageAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      pageId: this.pageId
    };
  }
};

export {
  ConfluencePageAri
};
