import {
  AtlashubIdAriResourceOwner,
  AtlashubIdAriResourceType
} from "./chunk-C4MJWUCX.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/atlashub/id/manifest.ts
var atlashubIdAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: AtlashubIdAriResourceOwner,
  resourceType: AtlashubIdAriResourceType,
  resourceIdSlug: "{id}",
  resourceIdSegmentFormats: {
    id: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/atlashub/id/index.ts
var AtlashubIdAri = class _AtlashubIdAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._id = opts.resourceIdSegmentValues.id;
  }
  get id() {
    return this._id;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: atlashubIdAriStaticOpts.qualifier,
      platformQualifier: atlashubIdAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: atlashubIdAriStaticOpts.resourceOwner,
      resourceType: atlashubIdAriStaticOpts.resourceType,
      resourceId: `${opts.id}`,
      resourceIdSegmentValues: {
        id: opts.id
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, atlashubIdAriStaticOpts);
    return new _AtlashubIdAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, atlashubIdAriStaticOpts);
    return new _AtlashubIdAri(opts);
  }
  getVariables() {
    return {
      id: this.id
    };
  }
};

export {
  AtlashubIdAri
};
