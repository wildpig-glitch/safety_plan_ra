import {
  ConfluenceCommentAriResourceOwner,
  ConfluenceCommentAriResourceType
} from "./chunk-ARFRFJQD.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/confluence/comment/manifest.ts
var confluenceCommentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: ConfluenceCommentAriResourceOwner,
  resourceType: ConfluenceCommentAriResourceType,
  resourceIdSlug: "{commentId}",
  resourceIdSegmentFormats: {
    commentId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/confluence/comment/index.ts
var ConfluenceCommentAri = class _ConfluenceCommentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._commentId = opts.resourceIdSegmentValues.commentId;
  }
  get siteId() {
    return this._siteId;
  }
  get commentId() {
    return this._commentId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: confluenceCommentAriStaticOpts.qualifier,
      platformQualifier: confluenceCommentAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: confluenceCommentAriStaticOpts.resourceOwner,
      resourceType: confluenceCommentAriStaticOpts.resourceType,
      resourceId: `${opts.commentId}`,
      resourceIdSegmentValues: {
        commentId: opts.commentId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, confluenceCommentAriStaticOpts);
    return new _ConfluenceCommentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, confluenceCommentAriStaticOpts);
    return new _ConfluenceCommentAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      commentId: this.commentId
    };
  }
};

export {
  ConfluenceCommentAri
};
