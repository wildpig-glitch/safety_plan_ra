import {
  CommercePaymentMethodAriResourceOwner,
  CommercePaymentMethodAriResourceType
} from "./chunk-N3JGQE6H.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/commerce/payment-method/manifest.ts
var commercePaymentMethodAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: CommercePaymentMethodAriResourceOwner,
  resourceType: CommercePaymentMethodAriResourceType,
  resourceIdSlug: "{paymentMethodId}",
  resourceIdSegmentFormats: {
    paymentMethodId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/commerce/payment-method/index.ts
var CommercePaymentMethodAri = class _CommercePaymentMethodAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._txaId = opts.cloudId || "", this._paymentMethodId = opts.resourceIdSegmentValues.paymentMethodId;
  }
  get txaId() {
    return this._txaId;
  }
  get paymentMethodId() {
    return this._paymentMethodId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: commercePaymentMethodAriStaticOpts.qualifier,
      platformQualifier: commercePaymentMethodAriStaticOpts.platformQualifier,
      cloudId: opts.txaId,
      resourceOwner: commercePaymentMethodAriStaticOpts.resourceOwner,
      resourceType: commercePaymentMethodAriStaticOpts.resourceType,
      resourceId: `${opts.paymentMethodId}`,
      resourceIdSegmentValues: {
        paymentMethodId: opts.paymentMethodId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, commercePaymentMethodAriStaticOpts);
    return new _CommercePaymentMethodAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, commercePaymentMethodAriStaticOpts);
    return new _CommercePaymentMethodAri(opts);
  }
  getVariables() {
    return {
      txaId: this.txaId,
      paymentMethodId: this.paymentMethodId
    };
  }
};

export {
  CommercePaymentMethodAri
};
