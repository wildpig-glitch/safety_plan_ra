import {
  SupportCustomerAriResourceOwner,
  SupportCustomerAriResourceType
} from "./chunk-PHBXUJAW.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/support/customer/manifest.ts
var supportCustomerAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: SupportCustomerAriResourceOwner,
  resourceType: SupportCustomerAriResourceType,
  resourceIdSlug: "{resourceName}",
  resourceIdSegmentFormats: {
    resourceName: /[a-zA-Z0-9\-_.]*/
    // eslint-disable-line no-useless-escape
  }
};

// src/support/customer/index.ts
var SupportCustomerAri = class _SupportCustomerAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._resourceName = opts.resourceIdSegmentValues.resourceName;
  }
  get resourceName() {
    return this._resourceName;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: supportCustomerAriStaticOpts.qualifier,
      platformQualifier: supportCustomerAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: supportCustomerAriStaticOpts.resourceOwner,
      resourceType: supportCustomerAriStaticOpts.resourceType,
      resourceId: `${opts.resourceName}`,
      resourceIdSegmentValues: {
        resourceName: opts.resourceName || ""
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, supportCustomerAriStaticOpts);
    return new _SupportCustomerAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, supportCustomerAriStaticOpts);
    return new _SupportCustomerAri(opts);
  }
  getVariables() {
    return {
      resourceName: this.resourceName
    };
  }
};

export {
  SupportCustomerAri
};
