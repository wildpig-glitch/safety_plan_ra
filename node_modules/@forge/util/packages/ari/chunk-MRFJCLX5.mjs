import {
  PeopleDataWorkerAriResourceOwner,
  PeopleDataWorkerAriResourceType
} from "./chunk-2UITM4M3.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/people-data/worker/manifest.ts
var peopleDataWorkerAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: PeopleDataWorkerAriResourceOwner,
  resourceType: PeopleDataWorkerAriResourceType,
  resourceIdSlug: "{workerId}",
  resourceIdSegmentFormats: {
    workerId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/people-data/worker/index.ts
var PeopleDataWorkerAri = class _PeopleDataWorkerAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workerId = opts.resourceIdSegmentValues.workerId;
  }
  get workerId() {
    return this._workerId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: peopleDataWorkerAriStaticOpts.qualifier,
      platformQualifier: peopleDataWorkerAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: peopleDataWorkerAriStaticOpts.resourceOwner,
      resourceType: peopleDataWorkerAriStaticOpts.resourceType,
      resourceId: `${opts.workerId}`,
      resourceIdSegmentValues: {
        workerId: opts.workerId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, peopleDataWorkerAriStaticOpts);
    return new _PeopleDataWorkerAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, peopleDataWorkerAriStaticOpts);
    return new _PeopleDataWorkerAri(opts);
  }
  getVariables() {
    return {
      workerId: this.workerId
    };
  }
};

export {
  PeopleDataWorkerAri
};
