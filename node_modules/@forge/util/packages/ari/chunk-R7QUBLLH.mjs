import {
  TrelloEnterpriseAriResourceOwner,
  TrelloEnterpriseAriResourceType
} from "./chunk-A3QGWDCS.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/trello/enterprise/manifest.ts
var trelloEnterpriseAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: TrelloEnterpriseAriResourceOwner,
  resourceType: TrelloEnterpriseAriResourceType,
  resourceIdSlug: "{enterpriseId}",
  resourceIdSegmentFormats: {
    enterpriseId: /[a-zA-Z0-9\-_.]*/
    // eslint-disable-line no-useless-escape
  }
};

// src/trello/enterprise/index.ts
var TrelloEnterpriseAri = class _TrelloEnterpriseAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._enterpriseId = opts.resourceIdSegmentValues.enterpriseId;
  }
  get enterpriseId() {
    return this._enterpriseId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: trelloEnterpriseAriStaticOpts.qualifier,
      platformQualifier: trelloEnterpriseAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: trelloEnterpriseAriStaticOpts.resourceOwner,
      resourceType: trelloEnterpriseAriStaticOpts.resourceType,
      resourceId: `${opts.enterpriseId}`,
      resourceIdSegmentValues: {
        enterpriseId: opts.enterpriseId || ""
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, trelloEnterpriseAriStaticOpts);
    return new _TrelloEnterpriseAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, trelloEnterpriseAriStaticOpts);
    return new _TrelloEnterpriseAri(opts);
  }
  getVariables() {
    return {
      enterpriseId: this.enterpriseId
    };
  }
};

export {
  TrelloEnterpriseAri
};
