import {
  ConfluenceWorkspaceAriResourceOwner,
  ConfluenceWorkspaceAriResourceType
} from "./chunk-2BXLBFIW.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/confluence/workspace/manifest.ts
var confluenceWorkspaceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: ConfluenceWorkspaceAriResourceOwner,
  resourceType: ConfluenceWorkspaceAriResourceType,
  resourceIdSlug: "{activationId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/confluence/workspace/index.ts
var ConfluenceWorkspaceAri = class _ConfluenceWorkspaceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: confluenceWorkspaceAriStaticOpts.qualifier,
      platformQualifier: confluenceWorkspaceAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: confluenceWorkspaceAriStaticOpts.resourceOwner,
      resourceType: confluenceWorkspaceAriStaticOpts.resourceType,
      resourceId: `${opts.activationId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, confluenceWorkspaceAriStaticOpts);
    return new _ConfluenceWorkspaceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, confluenceWorkspaceAriStaticOpts);
    return new _ConfluenceWorkspaceAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId
    };
  }
};

export {
  ConfluenceWorkspaceAri
};
