import {
  JiraOperationsWorkspaceAriResourceOwner,
  JiraOperationsWorkspaceAriResourceType
} from "./chunk-QTWVEF4M.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/jira/operations-workspace/manifest.ts
var jiraOperationsWorkspaceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraOperationsWorkspaceAriResourceOwner,
  resourceType: JiraOperationsWorkspaceAriResourceType,
  resourceIdSlug: "activation/{activationId}/{providerAppId}/{operationsWorkspaceId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    providerAppId: /[a-zA-Z0-9-._]+/,
    // eslint-disable-line no-useless-escape
    operationsWorkspaceId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/operations-workspace/index.ts
var JiraOperationsWorkspaceAri = class _JiraOperationsWorkspaceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._providerAppId = opts.resourceIdSegmentValues.providerAppId, this._operationsWorkspaceId = opts.resourceIdSegmentValues.operationsWorkspaceId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get providerAppId() {
    return this._providerAppId;
  }
  get operationsWorkspaceId() {
    return this._operationsWorkspaceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraOperationsWorkspaceAriStaticOpts.qualifier,
      platformQualifier: jiraOperationsWorkspaceAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraOperationsWorkspaceAriStaticOpts.resourceOwner,
      resourceType: jiraOperationsWorkspaceAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.providerAppId}/${opts.operationsWorkspaceId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        providerAppId: opts.providerAppId,
        operationsWorkspaceId: opts.operationsWorkspaceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraOperationsWorkspaceAriStaticOpts);
    return new _JiraOperationsWorkspaceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraOperationsWorkspaceAriStaticOpts);
    return new _JiraOperationsWorkspaceAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      providerAppId: this.providerAppId,
      operationsWorkspaceId: this.operationsWorkspaceId
    };
  }
};

export {
  JiraOperationsWorkspaceAri
};
