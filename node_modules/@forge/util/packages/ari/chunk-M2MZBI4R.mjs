import {
  GraphSecurityWorkspaceAriResourceOwner,
  GraphSecurityWorkspaceAriResourceType
} from "./chunk-4FPKBG6M.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/graph/security-workspace/manifest.ts
var graphSecurityWorkspaceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: GraphSecurityWorkspaceAriResourceOwner,
  resourceType: GraphSecurityWorkspaceAriResourceType,
  resourceIdSlug: "activation/{activationId}/{providerAppId}/{securityWorkspaceId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    providerAppId: /[a-zA-Z0-9-._]+/,
    // eslint-disable-line no-useless-escape
    securityWorkspaceId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/security-workspace/index.ts
var GraphSecurityWorkspaceAri = class _GraphSecurityWorkspaceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._providerAppId = opts.resourceIdSegmentValues.providerAppId, this._securityWorkspaceId = opts.resourceIdSegmentValues.securityWorkspaceId;
  }
  get activationId() {
    return this._activationId;
  }
  get providerAppId() {
    return this._providerAppId;
  }
  get securityWorkspaceId() {
    return this._securityWorkspaceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphSecurityWorkspaceAriStaticOpts.qualifier,
      platformQualifier: graphSecurityWorkspaceAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphSecurityWorkspaceAriStaticOpts.resourceOwner,
      resourceType: graphSecurityWorkspaceAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.providerAppId}/${opts.securityWorkspaceId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        providerAppId: opts.providerAppId,
        securityWorkspaceId: opts.securityWorkspaceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphSecurityWorkspaceAriStaticOpts);
    return new _GraphSecurityWorkspaceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphSecurityWorkspaceAriStaticOpts);
    return new _GraphSecurityWorkspaceAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      providerAppId: this.providerAppId,
      securityWorkspaceId: this.securityWorkspaceId
    };
  }
};

export {
  GraphSecurityWorkspaceAri
};
