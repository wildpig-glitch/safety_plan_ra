import {
  JiraServicedeskRequestTypeAriResourceOwner,
  JiraServicedeskRequestTypeAriResourceType
} from "./chunk-5SWOR5KD.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/jira-servicedesk/request-type/manifest.ts
var jiraServicedeskRequestTypeAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: JiraServicedeskRequestTypeAriResourceOwner,
  resourceType: JiraServicedeskRequestTypeAriResourceType,
  resourceIdSlug: "activation/{activationId}/{requestTypeId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    requestTypeId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira-servicedesk/request-type/index.ts
var JiraServicedeskRequestTypeAri = class _JiraServicedeskRequestTypeAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._requestTypeId = opts.resourceIdSegmentValues.requestTypeId;
  }
  get activationId() {
    return this._activationId;
  }
  get requestTypeId() {
    return this._requestTypeId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraServicedeskRequestTypeAriStaticOpts.qualifier,
      platformQualifier: jiraServicedeskRequestTypeAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: jiraServicedeskRequestTypeAriStaticOpts.resourceOwner,
      resourceType: jiraServicedeskRequestTypeAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.requestTypeId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        requestTypeId: opts.requestTypeId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraServicedeskRequestTypeAriStaticOpts);
    return new _JiraServicedeskRequestTypeAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraServicedeskRequestTypeAriStaticOpts);
    return new _JiraServicedeskRequestTypeAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      requestTypeId: this.requestTypeId
    };
  }
};

export {
  JiraServicedeskRequestTypeAri
};
