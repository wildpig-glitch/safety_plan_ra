import {
  CompassRoleAriResourceOwner,
  CompassRoleAriResourceType
} from "./chunk-FJ7KFVKZ.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/compass/role/manifest.ts
var compassRoleAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: CompassRoleAriResourceOwner,
  resourceType: CompassRoleAriResourceType,
  resourceIdSlug: "product/{roleType}",
  resourceIdSegmentFormats: {
    roleType: /(?:basic|member|admin)/
    // eslint-disable-line no-useless-escape
  }
};

// src/compass/role/index.ts
var CompassRoleAri = class _CompassRoleAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._roleType = opts.resourceIdSegmentValues.roleType;
  }
  get roleType() {
    return this._roleType;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: compassRoleAriStaticOpts.qualifier,
      platformQualifier: compassRoleAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: compassRoleAriStaticOpts.resourceOwner,
      resourceType: compassRoleAriStaticOpts.resourceType,
      resourceId: `product/${opts.roleType}`,
      resourceIdSegmentValues: {
        roleType: opts.roleType
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, compassRoleAriStaticOpts);
    return new _CompassRoleAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, compassRoleAriStaticOpts);
    return new _CompassRoleAri(opts);
  }
  getVariables() {
    return {
      roleType: this.roleType
    };
  }
};

export {
  CompassRoleAri
};
