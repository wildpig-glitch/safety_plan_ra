import {
  ConfluenceAttachmentAriResourceOwner,
  ConfluenceAttachmentAriResourceType
} from "./chunk-QCPR2D6J.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/confluence/attachment/manifest.ts
var confluenceAttachmentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: ConfluenceAttachmentAriResourceOwner,
  resourceType: ConfluenceAttachmentAriResourceType,
  resourceIdSlug: "{attachmentId}",
  resourceIdSegmentFormats: {
    attachmentId: /(att)?[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/confluence/attachment/index.ts
var ConfluenceAttachmentAri = class _ConfluenceAttachmentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._attachmentId = opts.resourceIdSegmentValues.attachmentId;
  }
  get siteId() {
    return this._siteId;
  }
  get attachmentId() {
    return this._attachmentId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: confluenceAttachmentAriStaticOpts.qualifier,
      platformQualifier: confluenceAttachmentAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: confluenceAttachmentAriStaticOpts.resourceOwner,
      resourceType: confluenceAttachmentAriStaticOpts.resourceType,
      resourceId: `${opts.attachmentId}`,
      resourceIdSegmentValues: {
        attachmentId: opts.attachmentId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, confluenceAttachmentAriStaticOpts);
    return new _ConfluenceAttachmentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, confluenceAttachmentAriStaticOpts);
    return new _ConfluenceAttachmentAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      attachmentId: this.attachmentId
    };
  }
};

export {
  ConfluenceAttachmentAri
};
