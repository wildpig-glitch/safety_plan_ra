"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);

// src/opsgenie/index.ts
var opsgenie_exports = {};
__export(opsgenie_exports, {
  OpsgenieAccountLoginAri: () => OpsgenieAccountLoginAri,
  OpsgenieAccountSettingsAri: () => OpsgenieAccountSettingsAri,
  OpsgenieAlertAri: () => OpsgenieAlertAri,
  OpsgenieAlertRecipientLinkAri: () => OpsgenieAlertRecipientLinkAri,
  OpsgenieApiRequestMetricAri: () => OpsgenieApiRequestMetricAri,
  OpsgenieCallRoutingAri: () => OpsgenieCallRoutingAri,
  OpsgenieCustomRoleAri: () => OpsgenieCustomRoleAri,
  OpsgenieDeploymentAri: () => OpsgenieDeploymentAri,
  OpsgenieDeploymentServiceLinkAri: () => OpsgenieDeploymentServiceLinkAri,
  OpsgenieEscalationAri: () => OpsgenieEscalationAri,
  OpsgenieEventAri: () => OpsgenieEventAri,
  OpsgenieIncidentAlertLinkAri: () => OpsgenieIncidentAlertLinkAri,
  OpsgenieIncidentAri: () => OpsgenieIncidentAri,
  OpsgenieIncidentStatusUpdateAri: () => OpsgenieIncidentStatusUpdateAri,
  OpsgenieIncomingCallHistoryAri: () => OpsgenieIncomingCallHistoryAri,
  OpsgenieIntegrationAri: () => OpsgenieIntegrationAri,
  OpsgenieNotificationAri: () => OpsgenieNotificationAri,
  OpsgenieRoleAri: () => OpsgenieRoleAri,
  OpsgenieScheduleAri: () => OpsgenieScheduleAri,
  OpsgenieScheduleRotationAri: () => OpsgenieScheduleRotationAri,
  OpsgenieSiteAri: () => OpsgenieSiteAri,
  OpsgenieTeamAri: () => OpsgenieTeamAri,
  OpsgenieTimelineAri: () => OpsgenieTimelineAri,
  OpsgenieWorkspaceAri: () => OpsgenieWorkspaceAri
});
module.exports = __toCommonJS(opsgenie_exports);

// src/errors.ts
var ValidationError = class extends Error {
};

// src/core/rules/cloud-id.ts
function validateCloudId(cloudId, format = new RegExp("^[a-zA-Z0-9\\-]*$")) {
  if (!cloudId.match(format))
    throw new ValidationError(`Invalid cloud ID, expected ID of format ${format}.`);
}

// src/core/rules/platform-qualifier.ts
function validatePlatformQualifier(qualifier) {
  if (qualifier !== "cloud" && qualifier !== "third-party")
    throw new ValidationError(`Identifier must have a qualifier of 'cloud' or 'third-party'. Received: ${qualifier}`);
}

// src/core/rules/qualifier.ts
function validateAtiQualifier(qualifier) {
  if (qualifier !== "ati")
    throw new ValidationError(`ATI must have a qualifier of 'ati'. Received: ${qualifier}`);
}
function validateAriQualifier(qualifier) {
  if (qualifier !== "ari")
    throw new ValidationError(`ARI must have a qualifier of 'ari'. Received: ${qualifier}`);
}

// src/core/rules/resource-id.ts
function validateResourceId(id, format = new RegExp("[!a-zA-Z0-9\\-_.~@:{}=]+(/[!a-zA-Z0-9\\-_.~@:{}=]+)*" /* ANY_RESOURCE_ID */), key = "resourceId") {
  let formatWithCarets = new RegExp(`^${format.source}$`);
  if (!id.match(formatWithCarets))
    throw new ValidationError(`Invalid ${key} - ${id}, expected ID of format ${formatWithCarets}.`);
}

// src/core/rules/resource-id-segments.ts
function validateResourceIdSegments(resourceIdSegmentValues, resourceIdSegmentFormats) {
  Object.entries(resourceIdSegmentValues).forEach(([resourceIdKey, resourceIdValue]) => {
    validateResourceId(resourceIdValue, resourceIdSegmentFormats == null ? void 0 : resourceIdSegmentFormats[resourceIdKey], resourceIdKey);
  });
}

// src/core/rules/resource-owner.ts
function validateResourceOwner(owner, expectedResourceOwner) {
  if (expectedResourceOwner && owner !== expectedResourceOwner)
    throw new ValidationError(`Invalid resource owner - ${owner}, expected ${expectedResourceOwner}.`);
}

// src/core/rules/resource-type.ts
function validateResourceType(type, expectedResourceType) {
  if (expectedResourceType && type !== expectedResourceType)
    throw new ValidationError(`Invalid resource type - ${type}, expected ${expectedResourceType}.`);
}

// src/core/parser/base.ts
var NUMBER_OF_BASE_SEGMENTS = 5, SEGMENT_SEPARATOR = ":", BaseParser = class {
  static getIdentifierSegments(inputStr, numberOfSegmentsRequired) {
    let allSegments = inputStr.split(SEGMENT_SEPARATOR);
    if (allSegments.length < numberOfSegmentsRequired)
      throw new ValidationError(`Input string must have ${numberOfSegmentsRequired} segments.`);
    if (allSegments.length > numberOfSegmentsRequired) {
      let segments = allSegments.slice(0, NUMBER_OF_BASE_SEGMENTS - 1), segmentsForResourceId = allSegments.slice(NUMBER_OF_BASE_SEGMENTS - 1, allSegments.length);
      return [...segments, segmentsForResourceId.join(SEGMENT_SEPARATOR)];
    }
    return allSegments;
  }
};

// src/core/parser/ari.ts
var NUMBER_OF_ARI_SEGMENTS = 5, AriParser = class extends BaseParser {
  static fromString(maybeAri, ariProperties) {
    let segments = this.getIdentifierSegments(maybeAri, NUMBER_OF_ARI_SEGMENTS), [qualifier, platformQualifier, resourceOwner, cloudId, resourceTypeAndId] = segments, [resourceType, ...resourceIdSegments] = resourceTypeAndId.split("/"), maybeAriDerivedProperties = {
      qualifier,
      platformQualifier,
      cloudId,
      resourceOwner,
      resourceType,
      resourceId: resourceIdSegments.join("/"),
      resourceIdSegmentValues: ariProperties != null && ariProperties.resourceIdSlug ? this.ariSegmentValuesFromSlug(
        ariProperties.resourceIdSlug,
        resourceIdSegments.join("/"),
        Object.keys(ariProperties.resourceIdSegmentFormats)
      ) : {}
    };
    return this.fromOpts(maybeAriDerivedProperties, ariProperties);
  }
  static fromOpts(maybeAriOpts, ariProperties) {
    let {
      qualifier = "ari",
      platformQualifier = "cloud",
      resourceOwner,
      cloudId,
      resourceId,
      resourceIdSegmentValues,
      resourceType
    } = maybeAriOpts;
    return validateAriQualifier(qualifier), validatePlatformQualifier(platformQualifier), validateCloudId(maybeAriOpts.cloudId || "", ariProperties == null ? void 0 : ariProperties.cloudId), validateResourceOwner(resourceOwner, ariProperties == null ? void 0 : ariProperties.resourceOwner), validateResourceType(resourceType, ariProperties == null ? void 0 : ariProperties.resourceType), validateResourceIdSegments(resourceIdSegmentValues, ariProperties == null ? void 0 : ariProperties.resourceIdSegmentFormats), {
      qualifier,
      resourceOwner,
      resourceType,
      platformQualifier,
      cloudId,
      resourceId,
      resourceIdSegmentValues
    };
  }
  static ariSegmentValuesFromSlug(slug, incomingSegments, expectedKeys) {
    let regexpResult = new RegExp("^" + slug.replace(/\{(.*?)\}/g, "(?<$1>.*?)") + "$").exec(incomingSegments);
    if (!regexpResult)
      throw new ValidationError(`Segment '${incomingSegments}' don't match expected slug: ${slug}`);
    return expectedKeys.forEach((expectedKey) => {
      var _a;
      if (!((_a = regexpResult.groups) != null && _a[expectedKey]))
        throw new ValidationError(`No value supplied for '${expectedKey}' based on slug ${slug}`);
    }), regexpResult.groups || {};
  }
};

// src/core/parser/ati.ts
var NUMBER_OF_ATI_SEGMENTS = 4, AtiParser = class extends BaseParser {
  static fromString(inputStr, atiOpts) {
    let segments = this.getIdentifierSegments(inputStr, NUMBER_OF_ATI_SEGMENTS), [qualifier = "ati", platformQualifier = "cloud", resourceOwner, resourceType] = segments;
    return validateAtiQualifier(qualifier), validatePlatformQualifier(platformQualifier), validateResourceOwner(resourceOwner, atiOpts == null ? void 0 : atiOpts.resourceOwner), validateResourceType(resourceType, atiOpts == null ? void 0 : atiOpts.resourceType), { platformQualifier, resourceOwner, resourceType };
  }
  static fromOpts(maybeAtiOpts, atiOpts) {
    let { qualifier, platformQualifier, resourceOwner, resourceType } = maybeAtiOpts;
    return validateAtiQualifier(qualifier), validatePlatformQualifier(platformQualifier), validateResourceOwner(resourceOwner, atiOpts == null ? void 0 : atiOpts.resourceOwner), validateResourceType(resourceType, atiOpts == null ? void 0 : atiOpts.resourceType), {
      platformQualifier,
      resourceOwner,
      resourceType
    };
  }
};

// src/ati.ts
var Ati = class _Ati {
  constructor(platformQualifier, resourceOwner, resourceType) {
    this._platformQualifier = platformQualifier, this._resourceOwner = resourceOwner, this._resourceType = resourceType;
  }
  get platformQualifier() {
    return this._platformQualifier;
  }
  get resourceOwner() {
    return this._resourceOwner;
  }
  get resourceType() {
    return this._resourceType;
  }
  static create(opts) {
    return new _Ati(opts.platformQualifier || "cloud", opts.resourceOwner, opts.resourceType);
  }
  static parse(maybeAti, atiOpts) {
    let opts = AtiParser.fromString(maybeAti, atiOpts);
    return new _Ati(opts.platformQualifier, opts.resourceOwner, opts.resourceType);
  }
  toString() {
    return `ati:${this.platformQualifier}:${this.resourceOwner}:${this.resourceType}`;
  }
  toJSON() {
    return this.toString();
  }
  toOpts() {
    return {
      platformQualifier: this._platformQualifier,
      resourceOwner: this._resourceOwner,
      resourceType: this._resourceType
    };
  }
};

// src/core/ari.ts
var Ari = class {
  constructor(opts) {
    this._ati = Ati.create({
      platformQualifier: opts.platformQualifier || "cloud",
      resourceOwner: opts.resourceOwner,
      resourceType: opts.resourceType
    }), this._cloudId = opts.cloudId !== "" ? opts.cloudId : void 0, this._resourceId = opts.resourceId;
  }
  get platformQualifier() {
    return this._ati.platformQualifier;
  }
  get cloudId() {
    return this._cloudId;
  }
  get resourceOwner() {
    return this._ati.resourceOwner;
  }
  get resourceType() {
    return this._ati.resourceType;
  }
  get resourceId() {
    return this._resourceId;
  }
  get ati() {
    return this._ati;
  }
  equals(other) {
    return this.toString() === other.toString();
  }
  toString() {
    return `ari:${this.platformQualifier}:${this.resourceOwner}:${this.cloudId || ""}:${this.resourceType}/${this.resourceId}`;
  }
  toJSON() {
    return this.toString();
  }
  toOpts() {
    return {
      platformQualifier: this.platformQualifier,
      resourceOwner: this.resourceOwner,
      cloudId: this.cloudId,
      resourceType: this.resourceType,
      resourceId: this.resourceId
    };
  }
};

// src/any-ari.ts
var AnyAri = class _AnyAri extends Ari {
  constructor(opts) {
    super(opts);
  }
  static create(ariOpts, ariStaticOpts) {
    let ariOptsWithDefaults = { ...ariOpts, resourceIdSegmentValues: {} }, validatedOpts = AriParser.fromOpts(ariOptsWithDefaults, ariStaticOpts);
    return new _AnyAri(validatedOpts);
  }
  static parse(maybeAri, ariStaticOpts) {
    let validatedOpts = AriParser.fromString(maybeAri, ariStaticOpts);
    return new _AnyAri(validatedOpts);
  }
  static check(maybeAri) {
    try {
      return _AnyAri.parse(maybeAri.toString()), !0;
    } catch (err) {
      return !1;
    }
  }
  asAnyAri() {
    return this;
  }
};

// src/core/registered-ari.ts
var RegisteredAri = class extends Ari {
  static check(maybeAri) {
    try {
      return this.parse(maybeAri.toString()), !0;
    } catch (err) {
      return !1;
    }
  }
  asAnyAri() {
    return AnyAri.parse(this.toString());
  }
};

// src/opsgenie/account-login/types.ts
var OpsgenieAccountLoginAriResourceOwner = "opsgenie", OpsgenieAccountLoginAriResourceType = "account-login";

// src/opsgenie/account-login/manifest.ts
var opsgenieAccountLoginAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: OpsgenieAccountLoginAriResourceOwner,
  resourceType: OpsgenieAccountLoginAriResourceType,
  resourceIdSlug: "{workspaceId}/{accountLoginId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    accountLoginId: /[a-zA-Z0-9\-\:]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/opsgenie/account-login/index.ts
var OpsgenieAccountLoginAri = class _OpsgenieAccountLoginAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._accountLoginId = opts.resourceIdSegmentValues.accountLoginId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get accountLoginId() {
    return this._accountLoginId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: opsgenieAccountLoginAriStaticOpts.qualifier,
      platformQualifier: opsgenieAccountLoginAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: opsgenieAccountLoginAriStaticOpts.resourceOwner,
      resourceType: opsgenieAccountLoginAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.accountLoginId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        accountLoginId: opts.accountLoginId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieAccountLoginAriStaticOpts);
    return new _OpsgenieAccountLoginAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, opsgenieAccountLoginAriStaticOpts);
    return new _OpsgenieAccountLoginAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      accountLoginId: this.accountLoginId
    };
  }
};

// src/opsgenie/account-settings/types.ts
var OpsgenieAccountSettingsAriResourceOwner = "opsgenie", OpsgenieAccountSettingsAriResourceType = "account-settings";

// src/opsgenie/account-settings/manifest.ts
var opsgenieAccountSettingsAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: OpsgenieAccountSettingsAriResourceOwner,
  resourceType: OpsgenieAccountSettingsAriResourceType,
  resourceIdSlug: "{workspaceId}/{accountSettingsId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    accountSettingsId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/opsgenie/account-settings/index.ts
var OpsgenieAccountSettingsAri = class _OpsgenieAccountSettingsAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._accountSettingsId = opts.resourceIdSegmentValues.accountSettingsId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get accountSettingsId() {
    return this._accountSettingsId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: opsgenieAccountSettingsAriStaticOpts.qualifier,
      platformQualifier: opsgenieAccountSettingsAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: opsgenieAccountSettingsAriStaticOpts.resourceOwner,
      resourceType: opsgenieAccountSettingsAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.accountSettingsId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        accountSettingsId: opts.accountSettingsId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieAccountSettingsAriStaticOpts);
    return new _OpsgenieAccountSettingsAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, opsgenieAccountSettingsAriStaticOpts);
    return new _OpsgenieAccountSettingsAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      accountSettingsId: this.accountSettingsId
    };
  }
};

// src/opsgenie/alert/types.ts
var OpsgenieAlertAriResourceOwner = "opsgenie", OpsgenieAlertAriResourceType = "alert";

// src/opsgenie/alert/manifest.ts
var opsgenieAlertAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: OpsgenieAlertAriResourceOwner,
  resourceType: OpsgenieAlertAriResourceType,
  resourceIdSlug: "{workspaceId}/{alertId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    alertId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/opsgenie/alert/index.ts
var OpsgenieAlertAri = class _OpsgenieAlertAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._alertId = opts.resourceIdSegmentValues.alertId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get alertId() {
    return this._alertId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: opsgenieAlertAriStaticOpts.qualifier,
      platformQualifier: opsgenieAlertAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: opsgenieAlertAriStaticOpts.resourceOwner,
      resourceType: opsgenieAlertAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.alertId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        alertId: opts.alertId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieAlertAriStaticOpts);
    return new _OpsgenieAlertAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, opsgenieAlertAriStaticOpts);
    return new _OpsgenieAlertAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      alertId: this.alertId
    };
  }
};

// src/opsgenie/alert-recipient-link/types.ts
var OpsgenieAlertRecipientLinkAriResourceOwner = "opsgenie", OpsgenieAlertRecipientLinkAriResourceType = "alert-recipient-link";

// src/opsgenie/alert-recipient-link/manifest.ts
var opsgenieAlertRecipientLinkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: OpsgenieAlertRecipientLinkAriResourceOwner,
  resourceType: OpsgenieAlertRecipientLinkAriResourceType,
  resourceIdSlug: "{workspaceId}/{alertId}/{recipientType}/{recipientId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    alertId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}(-[0-9]*)?/,
    // eslint-disable-line no-useless-escape
    recipientType: /(?:user|team)/,
    // eslint-disable-line no-useless-escape
    recipientId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/opsgenie/alert-recipient-link/index.ts
var OpsgenieAlertRecipientLinkAri = class _OpsgenieAlertRecipientLinkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._alertId = opts.resourceIdSegmentValues.alertId, this._recipientType = opts.resourceIdSegmentValues.recipientType, this._recipientId = opts.resourceIdSegmentValues.recipientId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get alertId() {
    return this._alertId;
  }
  get recipientType() {
    return this._recipientType;
  }
  get recipientId() {
    return this._recipientId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: opsgenieAlertRecipientLinkAriStaticOpts.qualifier,
      platformQualifier: opsgenieAlertRecipientLinkAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: opsgenieAlertRecipientLinkAriStaticOpts.resourceOwner,
      resourceType: opsgenieAlertRecipientLinkAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.alertId}/${opts.recipientType}/${opts.recipientId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        alertId: opts.alertId,
        recipientType: opts.recipientType,
        recipientId: opts.recipientId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieAlertRecipientLinkAriStaticOpts);
    return new _OpsgenieAlertRecipientLinkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, opsgenieAlertRecipientLinkAriStaticOpts);
    return new _OpsgenieAlertRecipientLinkAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      alertId: this.alertId,
      recipientType: this.recipientType,
      recipientId: this.recipientId
    };
  }
};

// src/opsgenie/api-request-metric/types.ts
var OpsgenieApiRequestMetricAriResourceOwner = "opsgenie", OpsgenieApiRequestMetricAriResourceType = "api-request-metric";

// src/opsgenie/api-request-metric/manifest.ts
var opsgenieApiRequestMetricAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: OpsgenieApiRequestMetricAriResourceOwner,
  resourceType: OpsgenieApiRequestMetricAriResourceType,
  resourceIdSlug: "{workspaceId}/{apiRequestMetricId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    apiRequestMetricId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/opsgenie/api-request-metric/index.ts
var OpsgenieApiRequestMetricAri = class _OpsgenieApiRequestMetricAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._apiRequestMetricId = opts.resourceIdSegmentValues.apiRequestMetricId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get apiRequestMetricId() {
    return this._apiRequestMetricId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: opsgenieApiRequestMetricAriStaticOpts.qualifier,
      platformQualifier: opsgenieApiRequestMetricAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: opsgenieApiRequestMetricAriStaticOpts.resourceOwner,
      resourceType: opsgenieApiRequestMetricAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.apiRequestMetricId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        apiRequestMetricId: opts.apiRequestMetricId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieApiRequestMetricAriStaticOpts);
    return new _OpsgenieApiRequestMetricAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, opsgenieApiRequestMetricAriStaticOpts);
    return new _OpsgenieApiRequestMetricAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      apiRequestMetricId: this.apiRequestMetricId
    };
  }
};

// src/opsgenie/call-routing/types.ts
var OpsgenieCallRoutingAriResourceOwner = "opsgenie", OpsgenieCallRoutingAriResourceType = "call-routing";

// src/opsgenie/call-routing/manifest.ts
var opsgenieCallRoutingAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: OpsgenieCallRoutingAriResourceOwner,
  resourceType: OpsgenieCallRoutingAriResourceType,
  resourceIdSlug: "{workspaceId}/{callRoutingId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    callRoutingId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/opsgenie/call-routing/index.ts
var OpsgenieCallRoutingAri = class _OpsgenieCallRoutingAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._callRoutingId = opts.resourceIdSegmentValues.callRoutingId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get callRoutingId() {
    return this._callRoutingId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: opsgenieCallRoutingAriStaticOpts.qualifier,
      platformQualifier: opsgenieCallRoutingAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: opsgenieCallRoutingAriStaticOpts.resourceOwner,
      resourceType: opsgenieCallRoutingAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.callRoutingId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        callRoutingId: opts.callRoutingId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieCallRoutingAriStaticOpts);
    return new _OpsgenieCallRoutingAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, opsgenieCallRoutingAriStaticOpts);
    return new _OpsgenieCallRoutingAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      callRoutingId: this.callRoutingId
    };
  }
};

// src/opsgenie/custom-role/types.ts
var OpsgenieCustomRoleAriResourceOwner = "opsgenie", OpsgenieCustomRoleAriResourceType = "custom-role";

// src/opsgenie/custom-role/manifest.ts
var opsgenieCustomRoleAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: OpsgenieCustomRoleAriResourceOwner,
  resourceType: OpsgenieCustomRoleAriResourceType,
  resourceIdSlug: "{workspaceId}/{opsgenieRoleType}/{customRoleId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    opsgenieRoleType: /(?:account|team|responder)/,
    // eslint-disable-line no-useless-escape
    customRoleId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/opsgenie/custom-role/index.ts
var OpsgenieCustomRoleAri = class _OpsgenieCustomRoleAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._opsgenieRoleType = opts.resourceIdSegmentValues.opsgenieRoleType, this._customRoleId = opts.resourceIdSegmentValues.customRoleId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get opsgenieRoleType() {
    return this._opsgenieRoleType;
  }
  get customRoleId() {
    return this._customRoleId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: opsgenieCustomRoleAriStaticOpts.qualifier,
      platformQualifier: opsgenieCustomRoleAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: opsgenieCustomRoleAriStaticOpts.resourceOwner,
      resourceType: opsgenieCustomRoleAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.opsgenieRoleType}/${opts.customRoleId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        opsgenieRoleType: opts.opsgenieRoleType,
        customRoleId: opts.customRoleId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieCustomRoleAriStaticOpts);
    return new _OpsgenieCustomRoleAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, opsgenieCustomRoleAriStaticOpts);
    return new _OpsgenieCustomRoleAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      opsgenieRoleType: this.opsgenieRoleType,
      customRoleId: this.customRoleId
    };
  }
};

// src/opsgenie/deployment/types.ts
var OpsgenieDeploymentAriResourceOwner = "opsgenie", OpsgenieDeploymentAriResourceType = "deployment";

// src/opsgenie/deployment/manifest.ts
var opsgenieDeploymentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: OpsgenieDeploymentAriResourceOwner,
  resourceType: OpsgenieDeploymentAriResourceType,
  resourceIdSlug: "{workspaceId}/{deploymentId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    deploymentId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/opsgenie/deployment/index.ts
var OpsgenieDeploymentAri = class _OpsgenieDeploymentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._deploymentId = opts.resourceIdSegmentValues.deploymentId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get deploymentId() {
    return this._deploymentId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: opsgenieDeploymentAriStaticOpts.qualifier,
      platformQualifier: opsgenieDeploymentAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: opsgenieDeploymentAriStaticOpts.resourceOwner,
      resourceType: opsgenieDeploymentAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.deploymentId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        deploymentId: opts.deploymentId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieDeploymentAriStaticOpts);
    return new _OpsgenieDeploymentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, opsgenieDeploymentAriStaticOpts);
    return new _OpsgenieDeploymentAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      deploymentId: this.deploymentId
    };
  }
};

// src/opsgenie/deployment-service-link/types.ts
var OpsgenieDeploymentServiceLinkAriResourceOwner = "opsgenie", OpsgenieDeploymentServiceLinkAriResourceType = "deployment-service-link";

// src/opsgenie/deployment-service-link/manifest.ts
var opsgenieDeploymentServiceLinkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: OpsgenieDeploymentServiceLinkAriResourceOwner,
  resourceType: OpsgenieDeploymentServiceLinkAriResourceType,
  resourceIdSlug: "{workspaceId}/{deploymentId}/{serviceId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    deploymentId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/,
    // eslint-disable-line no-useless-escape
    serviceId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/opsgenie/deployment-service-link/index.ts
var OpsgenieDeploymentServiceLinkAri = class _OpsgenieDeploymentServiceLinkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._deploymentId = opts.resourceIdSegmentValues.deploymentId, this._serviceId = opts.resourceIdSegmentValues.serviceId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get deploymentId() {
    return this._deploymentId;
  }
  get serviceId() {
    return this._serviceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: opsgenieDeploymentServiceLinkAriStaticOpts.qualifier,
      platformQualifier: opsgenieDeploymentServiceLinkAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: opsgenieDeploymentServiceLinkAriStaticOpts.resourceOwner,
      resourceType: opsgenieDeploymentServiceLinkAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.deploymentId}/${opts.serviceId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        deploymentId: opts.deploymentId,
        serviceId: opts.serviceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieDeploymentServiceLinkAriStaticOpts);
    return new _OpsgenieDeploymentServiceLinkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, opsgenieDeploymentServiceLinkAriStaticOpts);
    return new _OpsgenieDeploymentServiceLinkAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      deploymentId: this.deploymentId,
      serviceId: this.serviceId
    };
  }
};

// src/opsgenie/escalation/types.ts
var OpsgenieEscalationAriResourceOwner = "opsgenie", OpsgenieEscalationAriResourceType = "escalation";

// src/opsgenie/escalation/manifest.ts
var opsgenieEscalationAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: OpsgenieEscalationAriResourceOwner,
  resourceType: OpsgenieEscalationAriResourceType,
  resourceIdSlug: "{workspaceId}/{escalationId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    escalationId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/opsgenie/escalation/index.ts
var OpsgenieEscalationAri = class _OpsgenieEscalationAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._escalationId = opts.resourceIdSegmentValues.escalationId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get escalationId() {
    return this._escalationId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: opsgenieEscalationAriStaticOpts.qualifier,
      platformQualifier: opsgenieEscalationAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: opsgenieEscalationAriStaticOpts.resourceOwner,
      resourceType: opsgenieEscalationAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.escalationId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        escalationId: opts.escalationId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieEscalationAriStaticOpts);
    return new _OpsgenieEscalationAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, opsgenieEscalationAriStaticOpts);
    return new _OpsgenieEscalationAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      escalationId: this.escalationId
    };
  }
};

// src/opsgenie/event/types.ts
var OpsgenieEventAriResourceOwner = "opsgenie", OpsgenieEventAriResourceType = "event";

// src/opsgenie/event/manifest.ts
var opsgenieEventAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: OpsgenieEventAriResourceOwner,
  resourceType: OpsgenieEventAriResourceType,
  resourceIdSlug: "{eventType}/workspace/{workspaceId}/event/{eventId}",
  resourceIdSegmentFormats: {
    eventType: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    eventId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/opsgenie/event/index.ts
var OpsgenieEventAri = class _OpsgenieEventAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._eventType = opts.resourceIdSegmentValues.eventType, this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._eventId = opts.resourceIdSegmentValues.eventId;
  }
  get eventType() {
    return this._eventType;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get eventId() {
    return this._eventId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: opsgenieEventAriStaticOpts.qualifier,
      platformQualifier: opsgenieEventAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: opsgenieEventAriStaticOpts.resourceOwner,
      resourceType: opsgenieEventAriStaticOpts.resourceType,
      resourceId: `${opts.eventType}/workspace/${opts.workspaceId}/event/${opts.eventId}`,
      resourceIdSegmentValues: {
        eventType: opts.eventType,
        workspaceId: opts.workspaceId,
        eventId: opts.eventId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieEventAriStaticOpts);
    return new _OpsgenieEventAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, opsgenieEventAriStaticOpts);
    return new _OpsgenieEventAri(opts);
  }
  getVariables() {
    return {
      eventType: this.eventType,
      workspaceId: this.workspaceId,
      eventId: this.eventId
    };
  }
};

// src/opsgenie/incident/types.ts
var OpsgenieIncidentAriResourceOwner = "opsgenie", OpsgenieIncidentAriResourceType = "incident";

// src/opsgenie/incident/manifest.ts
var opsgenieIncidentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: OpsgenieIncidentAriResourceOwner,
  resourceType: OpsgenieIncidentAriResourceType,
  resourceIdSlug: "{workspaceId}/{incidentId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    incidentId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/opsgenie/incident/index.ts
var OpsgenieIncidentAri = class _OpsgenieIncidentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._incidentId = opts.resourceIdSegmentValues.incidentId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get incidentId() {
    return this._incidentId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: opsgenieIncidentAriStaticOpts.qualifier,
      platformQualifier: opsgenieIncidentAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: opsgenieIncidentAriStaticOpts.resourceOwner,
      resourceType: opsgenieIncidentAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.incidentId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        incidentId: opts.incidentId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieIncidentAriStaticOpts);
    return new _OpsgenieIncidentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, opsgenieIncidentAriStaticOpts);
    return new _OpsgenieIncidentAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      incidentId: this.incidentId
    };
  }
};

// src/opsgenie/incident-alert-link/types.ts
var OpsgenieIncidentAlertLinkAriResourceOwner = "opsgenie", OpsgenieIncidentAlertLinkAriResourceType = "incident-alert-link";

// src/opsgenie/incident-alert-link/manifest.ts
var opsgenieIncidentAlertLinkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: OpsgenieIncidentAlertLinkAriResourceOwner,
  resourceType: OpsgenieIncidentAlertLinkAriResourceType,
  resourceIdSlug: "{workspaceId}/{incidentId}/{alertId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    incidentId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    alertId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}(-[0-9]*)?/
    // eslint-disable-line no-useless-escape
  }
};

// src/opsgenie/incident-alert-link/index.ts
var OpsgenieIncidentAlertLinkAri = class _OpsgenieIncidentAlertLinkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._incidentId = opts.resourceIdSegmentValues.incidentId, this._alertId = opts.resourceIdSegmentValues.alertId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get incidentId() {
    return this._incidentId;
  }
  get alertId() {
    return this._alertId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: opsgenieIncidentAlertLinkAriStaticOpts.qualifier,
      platformQualifier: opsgenieIncidentAlertLinkAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: opsgenieIncidentAlertLinkAriStaticOpts.resourceOwner,
      resourceType: opsgenieIncidentAlertLinkAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.incidentId}/${opts.alertId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        incidentId: opts.incidentId,
        alertId: opts.alertId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieIncidentAlertLinkAriStaticOpts);
    return new _OpsgenieIncidentAlertLinkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, opsgenieIncidentAlertLinkAriStaticOpts);
    return new _OpsgenieIncidentAlertLinkAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      incidentId: this.incidentId,
      alertId: this.alertId
    };
  }
};

// src/opsgenie/incident-status-update/types.ts
var OpsgenieIncidentStatusUpdateAriResourceOwner = "opsgenie", OpsgenieIncidentStatusUpdateAriResourceType = "incident-status-update";

// src/opsgenie/incident-status-update/manifest.ts
var opsgenieIncidentStatusUpdateAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: OpsgenieIncidentStatusUpdateAriResourceOwner,
  resourceType: OpsgenieIncidentStatusUpdateAriResourceType,
  resourceIdSlug: "{workspaceId}/{incidentStatusUpdateId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    incidentStatusUpdateId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/opsgenie/incident-status-update/index.ts
var OpsgenieIncidentStatusUpdateAri = class _OpsgenieIncidentStatusUpdateAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._incidentStatusUpdateId = opts.resourceIdSegmentValues.incidentStatusUpdateId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get incidentStatusUpdateId() {
    return this._incidentStatusUpdateId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: opsgenieIncidentStatusUpdateAriStaticOpts.qualifier,
      platformQualifier: opsgenieIncidentStatusUpdateAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: opsgenieIncidentStatusUpdateAriStaticOpts.resourceOwner,
      resourceType: opsgenieIncidentStatusUpdateAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.incidentStatusUpdateId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        incidentStatusUpdateId: opts.incidentStatusUpdateId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieIncidentStatusUpdateAriStaticOpts);
    return new _OpsgenieIncidentStatusUpdateAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, opsgenieIncidentStatusUpdateAriStaticOpts);
    return new _OpsgenieIncidentStatusUpdateAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      incidentStatusUpdateId: this.incidentStatusUpdateId
    };
  }
};

// src/opsgenie/incoming-call-history/types.ts
var OpsgenieIncomingCallHistoryAriResourceOwner = "opsgenie", OpsgenieIncomingCallHistoryAriResourceType = "incoming-call-history";

// src/opsgenie/incoming-call-history/manifest.ts
var opsgenieIncomingCallHistoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: OpsgenieIncomingCallHistoryAriResourceOwner,
  resourceType: OpsgenieIncomingCallHistoryAriResourceType,
  resourceIdSlug: "{workspaceId}/{incomingCallEventId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    incomingCallEventId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/opsgenie/incoming-call-history/index.ts
var OpsgenieIncomingCallHistoryAri = class _OpsgenieIncomingCallHistoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._incomingCallEventId = opts.resourceIdSegmentValues.incomingCallEventId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get incomingCallEventId() {
    return this._incomingCallEventId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: opsgenieIncomingCallHistoryAriStaticOpts.qualifier,
      platformQualifier: opsgenieIncomingCallHistoryAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: opsgenieIncomingCallHistoryAriStaticOpts.resourceOwner,
      resourceType: opsgenieIncomingCallHistoryAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.incomingCallEventId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        incomingCallEventId: opts.incomingCallEventId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieIncomingCallHistoryAriStaticOpts);
    return new _OpsgenieIncomingCallHistoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, opsgenieIncomingCallHistoryAriStaticOpts);
    return new _OpsgenieIncomingCallHistoryAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      incomingCallEventId: this.incomingCallEventId
    };
  }
};

// src/opsgenie/integration/types.ts
var OpsgenieIntegrationAriResourceOwner = "opsgenie", OpsgenieIntegrationAriResourceType = "integration";

// src/opsgenie/integration/manifest.ts
var opsgenieIntegrationAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: OpsgenieIntegrationAriResourceOwner,
  resourceType: OpsgenieIntegrationAriResourceType,
  resourceIdSlug: "{workspaceId}/{integrationId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    integrationId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/opsgenie/integration/index.ts
var OpsgenieIntegrationAri = class _OpsgenieIntegrationAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._integrationId = opts.resourceIdSegmentValues.integrationId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get integrationId() {
    return this._integrationId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: opsgenieIntegrationAriStaticOpts.qualifier,
      platformQualifier: opsgenieIntegrationAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: opsgenieIntegrationAriStaticOpts.resourceOwner,
      resourceType: opsgenieIntegrationAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.integrationId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        integrationId: opts.integrationId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieIntegrationAriStaticOpts);
    return new _OpsgenieIntegrationAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, opsgenieIntegrationAriStaticOpts);
    return new _OpsgenieIntegrationAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      integrationId: this.integrationId
    };
  }
};

// src/opsgenie/notification/types.ts
var OpsgenieNotificationAriResourceOwner = "opsgenie", OpsgenieNotificationAriResourceType = "notification";

// src/opsgenie/notification/manifest.ts
var opsgenieNotificationAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: OpsgenieNotificationAriResourceOwner,
  resourceType: OpsgenieNotificationAriResourceType,
  resourceIdSlug: "{workspaceId}/{notificationId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    notificationId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/opsgenie/notification/index.ts
var OpsgenieNotificationAri = class _OpsgenieNotificationAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._notificationId = opts.resourceIdSegmentValues.notificationId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get notificationId() {
    return this._notificationId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: opsgenieNotificationAriStaticOpts.qualifier,
      platformQualifier: opsgenieNotificationAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: opsgenieNotificationAriStaticOpts.resourceOwner,
      resourceType: opsgenieNotificationAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.notificationId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        notificationId: opts.notificationId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieNotificationAriStaticOpts);
    return new _OpsgenieNotificationAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, opsgenieNotificationAriStaticOpts);
    return new _OpsgenieNotificationAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      notificationId: this.notificationId
    };
  }
};

// src/opsgenie/role/types.ts
var OpsgenieRoleAriResourceOwner = "opsgenie", OpsgenieRoleAriResourceType = "role";

// src/opsgenie/role/manifest.ts
var opsgenieRoleAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: OpsgenieRoleAriResourceOwner,
  resourceType: OpsgenieRoleAriResourceType,
  resourceIdSlug: "{roleId}",
  resourceIdSegmentFormats: {
    roleId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/opsgenie/role/index.ts
var OpsgenieRoleAri = class _OpsgenieRoleAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._roleId = opts.resourceIdSegmentValues.roleId;
  }
  get roleId() {
    return this._roleId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: opsgenieRoleAriStaticOpts.qualifier,
      platformQualifier: opsgenieRoleAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: opsgenieRoleAriStaticOpts.resourceOwner,
      resourceType: opsgenieRoleAriStaticOpts.resourceType,
      resourceId: `${opts.roleId}`,
      resourceIdSegmentValues: {
        roleId: opts.roleId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieRoleAriStaticOpts);
    return new _OpsgenieRoleAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, opsgenieRoleAriStaticOpts);
    return new _OpsgenieRoleAri(opts);
  }
  getVariables() {
    return {
      roleId: this.roleId
    };
  }
};

// src/opsgenie/schedule/types.ts
var OpsgenieScheduleAriResourceOwner = "opsgenie", OpsgenieScheduleAriResourceType = "schedule";

// src/opsgenie/schedule/manifest.ts
var opsgenieScheduleAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: OpsgenieScheduleAriResourceOwner,
  resourceType: OpsgenieScheduleAriResourceType,
  resourceIdSlug: "{workspaceId}/{scheduleId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    scheduleId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/opsgenie/schedule/index.ts
var OpsgenieScheduleAri = class _OpsgenieScheduleAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._scheduleId = opts.resourceIdSegmentValues.scheduleId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get scheduleId() {
    return this._scheduleId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: opsgenieScheduleAriStaticOpts.qualifier,
      platformQualifier: opsgenieScheduleAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: opsgenieScheduleAriStaticOpts.resourceOwner,
      resourceType: opsgenieScheduleAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.scheduleId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        scheduleId: opts.scheduleId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieScheduleAriStaticOpts);
    return new _OpsgenieScheduleAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, opsgenieScheduleAriStaticOpts);
    return new _OpsgenieScheduleAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      scheduleId: this.scheduleId
    };
  }
};

// src/opsgenie/schedule-rotation/types.ts
var OpsgenieScheduleRotationAriResourceOwner = "opsgenie", OpsgenieScheduleRotationAriResourceType = "schedule-rotation";

// src/opsgenie/schedule-rotation/manifest.ts
var opsgenieScheduleRotationAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: OpsgenieScheduleRotationAriResourceOwner,
  resourceType: OpsgenieScheduleRotationAriResourceType,
  resourceIdSlug: "{workspaceId}/{scheduleRotationId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    scheduleRotationId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/opsgenie/schedule-rotation/index.ts
var OpsgenieScheduleRotationAri = class _OpsgenieScheduleRotationAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._scheduleRotationId = opts.resourceIdSegmentValues.scheduleRotationId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get scheduleRotationId() {
    return this._scheduleRotationId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: opsgenieScheduleRotationAriStaticOpts.qualifier,
      platformQualifier: opsgenieScheduleRotationAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: opsgenieScheduleRotationAriStaticOpts.resourceOwner,
      resourceType: opsgenieScheduleRotationAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.scheduleRotationId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        scheduleRotationId: opts.scheduleRotationId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieScheduleRotationAriStaticOpts);
    return new _OpsgenieScheduleRotationAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, opsgenieScheduleRotationAriStaticOpts);
    return new _OpsgenieScheduleRotationAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      scheduleRotationId: this.scheduleRotationId
    };
  }
};

// src/opsgenie/site/types.ts
var OpsgenieSiteAriResourceOwner = "opsgenie", OpsgenieSiteAriResourceType = "site";

// src/opsgenie/site/manifest.ts
var opsgenieSiteAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: OpsgenieSiteAriResourceOwner,
  resourceType: OpsgenieSiteAriResourceType,
  resourceIdSlug: "{siteId}",
  resourceIdSegmentFormats: {
    siteId: /[a-zA-Z0-9\-]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/opsgenie/site/index.ts
var OpsgenieSiteAri = class _OpsgenieSiteAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.resourceIdSegmentValues.siteId;
  }
  get siteId() {
    return this._siteId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: opsgenieSiteAriStaticOpts.qualifier,
      platformQualifier: opsgenieSiteAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: opsgenieSiteAriStaticOpts.resourceOwner,
      resourceType: opsgenieSiteAriStaticOpts.resourceType,
      resourceId: `${opts.siteId}`,
      resourceIdSegmentValues: {
        siteId: opts.siteId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieSiteAriStaticOpts);
    return new _OpsgenieSiteAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, opsgenieSiteAriStaticOpts);
    return new _OpsgenieSiteAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId
    };
  }
};

// src/opsgenie/team/types.ts
var OpsgenieTeamAriResourceOwner = "opsgenie", OpsgenieTeamAriResourceType = "team";

// src/opsgenie/team/manifest.ts
var opsgenieTeamAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: OpsgenieTeamAriResourceOwner,
  resourceType: OpsgenieTeamAriResourceType,
  resourceIdSlug: "{opsgenieTeamId}",
  resourceIdSegmentFormats: {
    opsgenieTeamId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/opsgenie/team/index.ts
var OpsgenieTeamAri = class _OpsgenieTeamAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._opsgenieTeamId = opts.resourceIdSegmentValues.opsgenieTeamId;
  }
  get siteId() {
    return this._siteId;
  }
  get opsgenieTeamId() {
    return this._opsgenieTeamId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: opsgenieTeamAriStaticOpts.qualifier,
      platformQualifier: opsgenieTeamAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: opsgenieTeamAriStaticOpts.resourceOwner,
      resourceType: opsgenieTeamAriStaticOpts.resourceType,
      resourceId: `${opts.opsgenieTeamId}`,
      resourceIdSegmentValues: {
        opsgenieTeamId: opts.opsgenieTeamId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieTeamAriStaticOpts);
    return new _OpsgenieTeamAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, opsgenieTeamAriStaticOpts);
    return new _OpsgenieTeamAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      opsgenieTeamId: this.opsgenieTeamId
    };
  }
};

// src/opsgenie/timeline/types.ts
var OpsgenieTimelineAriResourceOwner = "opsgenie", OpsgenieTimelineAriResourceType = "timeline";

// src/opsgenie/timeline/manifest.ts
var opsgenieTimelineAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: OpsgenieTimelineAriResourceOwner,
  resourceType: OpsgenieTimelineAriResourceType,
  resourceIdSlug: "{workspaceId}/{timelineEntryId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    timelineEntryId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/opsgenie/timeline/index.ts
var OpsgenieTimelineAri = class _OpsgenieTimelineAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._timelineEntryId = opts.resourceIdSegmentValues.timelineEntryId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get timelineEntryId() {
    return this._timelineEntryId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: opsgenieTimelineAriStaticOpts.qualifier,
      platformQualifier: opsgenieTimelineAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: opsgenieTimelineAriStaticOpts.resourceOwner,
      resourceType: opsgenieTimelineAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.timelineEntryId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        timelineEntryId: opts.timelineEntryId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieTimelineAriStaticOpts);
    return new _OpsgenieTimelineAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, opsgenieTimelineAriStaticOpts);
    return new _OpsgenieTimelineAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      timelineEntryId: this.timelineEntryId
    };
  }
};

// src/opsgenie/workspace/types.ts
var OpsgenieWorkspaceAriResourceOwner = "opsgenie", OpsgenieWorkspaceAriResourceType = "workspace";

// src/opsgenie/workspace/manifest.ts
var opsgenieWorkspaceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: OpsgenieWorkspaceAriResourceOwner,
  resourceType: OpsgenieWorkspaceAriResourceType,
  resourceIdSlug: "{workspaceId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/opsgenie/workspace/index.ts
var OpsgenieWorkspaceAri = class _OpsgenieWorkspaceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: opsgenieWorkspaceAriStaticOpts.qualifier,
      platformQualifier: opsgenieWorkspaceAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: opsgenieWorkspaceAriStaticOpts.resourceOwner,
      resourceType: opsgenieWorkspaceAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieWorkspaceAriStaticOpts);
    return new _OpsgenieWorkspaceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, opsgenieWorkspaceAriStaticOpts);
    return new _OpsgenieWorkspaceAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId
    };
  }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  OpsgenieAccountLoginAri,
  OpsgenieAccountSettingsAri,
  OpsgenieAlertAri,
  OpsgenieAlertRecipientLinkAri,
  OpsgenieApiRequestMetricAri,
  OpsgenieCallRoutingAri,
  OpsgenieCustomRoleAri,
  OpsgenieDeploymentAri,
  OpsgenieDeploymentServiceLinkAri,
  OpsgenieEscalationAri,
  OpsgenieEventAri,
  OpsgenieIncidentAlertLinkAri,
  OpsgenieIncidentAri,
  OpsgenieIncidentStatusUpdateAri,
  OpsgenieIncomingCallHistoryAri,
  OpsgenieIntegrationAri,
  OpsgenieNotificationAri,
  OpsgenieRoleAri,
  OpsgenieScheduleAri,
  OpsgenieScheduleRotationAri,
  OpsgenieSiteAri,
  OpsgenieTeamAri,
  OpsgenieTimelineAri,
  OpsgenieWorkspaceAri
});
