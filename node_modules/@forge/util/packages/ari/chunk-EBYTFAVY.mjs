import {
  GraphJiraProjectAndVcsRepositoryRelationshipAriResourceOwner,
  GraphJiraProjectAndVcsRepositoryRelationshipAriResourceType
} from "./chunk-XYDSJQO4.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/graph/jira-project-and-vcs-repository-relationship/manifest.ts
var graphJiraProjectAndVcsRepositoryRelationshipAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: GraphJiraProjectAndVcsRepositoryRelationshipAriResourceOwner,
  resourceType: GraphJiraProjectAndVcsRepositoryRelationshipAriResourceType,
  resourceIdSlug: "{workspaceId}/{relationshipId}",
  resourceIdSegmentFormats: {
    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    relationshipId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/jira-project-and-vcs-repository-relationship/index.ts
var GraphJiraProjectAndVcsRepositoryRelationshipAri = class _GraphJiraProjectAndVcsRepositoryRelationshipAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._relationshipId = opts.resourceIdSegmentValues.relationshipId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get relationshipId() {
    return this._relationshipId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphJiraProjectAndVcsRepositoryRelationshipAriStaticOpts.qualifier,
      platformQualifier: graphJiraProjectAndVcsRepositoryRelationshipAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphJiraProjectAndVcsRepositoryRelationshipAriStaticOpts.resourceOwner,
      resourceType: graphJiraProjectAndVcsRepositoryRelationshipAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.relationshipId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        relationshipId: opts.relationshipId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphJiraProjectAndVcsRepositoryRelationshipAriStaticOpts);
    return new _GraphJiraProjectAndVcsRepositoryRelationshipAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphJiraProjectAndVcsRepositoryRelationshipAriStaticOpts);
    return new _GraphJiraProjectAndVcsRepositoryRelationshipAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      relationshipId: this.relationshipId
    };
  }
};

export {
  GraphJiraProjectAndVcsRepositoryRelationshipAri
};
