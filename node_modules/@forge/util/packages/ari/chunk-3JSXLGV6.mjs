import {
  PollinatorCheckAriResourceOwner,
  PollinatorCheckAriResourceType
} from "./chunk-M6X7UPKX.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/pollinator/check/manifest.ts
var pollinatorCheckAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: PollinatorCheckAriResourceOwner,
  resourceType: PollinatorCheckAriResourceType,
  resourceIdSlug: "{checkId}",
  resourceIdSegmentFormats: {
    checkId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/pollinator/check/index.ts
var PollinatorCheckAri = class _PollinatorCheckAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._checkId = opts.resourceIdSegmentValues.checkId;
  }
  get checkId() {
    return this._checkId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: pollinatorCheckAriStaticOpts.qualifier,
      platformQualifier: pollinatorCheckAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: pollinatorCheckAriStaticOpts.resourceOwner,
      resourceType: pollinatorCheckAriStaticOpts.resourceType,
      resourceId: `${opts.checkId}`,
      resourceIdSegmentValues: {
        checkId: opts.checkId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, pollinatorCheckAriStaticOpts);
    return new _PollinatorCheckAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, pollinatorCheckAriStaticOpts);
    return new _PollinatorCheckAri(opts);
  }
  getVariables() {
    return {
      checkId: this.checkId
    };
  }
};

export {
  PollinatorCheckAri
};
