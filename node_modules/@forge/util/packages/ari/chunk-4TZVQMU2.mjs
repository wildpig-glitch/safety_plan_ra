import {
  WorkatoJobAriResourceOwner,
  WorkatoJobAriResourceType
} from "./chunk-BPPBHTKA.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/workato/job/manifest.ts
var workatoJobAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  resourceOwner: WorkatoJobAriResourceOwner,
  resourceType: WorkatoJobAriResourceType,
  resourceIdSlug: "{workatoTenantKey}/{jobId}",
  resourceIdSegmentFormats: {
    workatoTenantKey: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/,
    // eslint-disable-line no-useless-escape
    jobId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/workato/job/index.ts
var WorkatoJobAri = class _WorkatoJobAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workatoTenantKey = opts.resourceIdSegmentValues.workatoTenantKey, this._jobId = opts.resourceIdSegmentValues.jobId;
  }
  get workatoTenantKey() {
    return this._workatoTenantKey;
  }
  get jobId() {
    return this._jobId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: workatoJobAriStaticOpts.qualifier,
      platformQualifier: workatoJobAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: workatoJobAriStaticOpts.resourceOwner,
      resourceType: workatoJobAriStaticOpts.resourceType,
      resourceId: `${opts.workatoTenantKey}/${opts.jobId}`,
      resourceIdSegmentValues: {
        workatoTenantKey: opts.workatoTenantKey,
        jobId: opts.jobId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, workatoJobAriStaticOpts);
    return new _WorkatoJobAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, workatoJobAriStaticOpts);
    return new _WorkatoJobAri(opts);
  }
  getVariables() {
    return {
      workatoTenantKey: this.workatoTenantKey,
      jobId: this.jobId
    };
  }
};

export {
  WorkatoJobAri
};
