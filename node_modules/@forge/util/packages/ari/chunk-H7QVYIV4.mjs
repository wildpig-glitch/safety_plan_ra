import {
  ConfluenceWhiteboardAriResourceOwner,
  ConfluenceWhiteboardAriResourceType
} from "./chunk-SRDRWGU4.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/confluence/whiteboard/manifest.ts
var confluenceWhiteboardAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: ConfluenceWhiteboardAriResourceOwner,
  resourceType: ConfluenceWhiteboardAriResourceType,
  resourceIdSlug: "{whiteboardId}",
  resourceIdSegmentFormats: {
    whiteboardId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/confluence/whiteboard/index.ts
var ConfluenceWhiteboardAri = class _ConfluenceWhiteboardAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._whiteboardId = opts.resourceIdSegmentValues.whiteboardId;
  }
  get siteId() {
    return this._siteId;
  }
  get whiteboardId() {
    return this._whiteboardId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: confluenceWhiteboardAriStaticOpts.qualifier,
      platformQualifier: confluenceWhiteboardAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: confluenceWhiteboardAriStaticOpts.resourceOwner,
      resourceType: confluenceWhiteboardAriStaticOpts.resourceType,
      resourceId: `${opts.whiteboardId}`,
      resourceIdSegmentValues: {
        whiteboardId: opts.whiteboardId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, confluenceWhiteboardAriStaticOpts);
    return new _ConfluenceWhiteboardAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, confluenceWhiteboardAriStaticOpts);
    return new _ConfluenceWhiteboardAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      whiteboardId: this.whiteboardId
    };
  }
};

export {
  ConfluenceWhiteboardAri
};
