import {
  GraphBuildAriResourceOwner,
  GraphBuildAriResourceType
} from "./chunk-5YTWJ4WK.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/graph/build/manifest.ts
var graphBuildAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: GraphBuildAriResourceOwner,
  resourceType: GraphBuildAriResourceType,
  resourceIdSlug: "activation/{activationId}/{buildId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    buildId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/build/index.ts
var GraphBuildAri = class _GraphBuildAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._buildId = opts.resourceIdSegmentValues.buildId;
  }
  get activationId() {
    return this._activationId;
  }
  get buildId() {
    return this._buildId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphBuildAriStaticOpts.qualifier,
      platformQualifier: graphBuildAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphBuildAriStaticOpts.resourceOwner,
      resourceType: graphBuildAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.buildId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        buildId: opts.buildId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphBuildAriStaticOpts);
    return new _GraphBuildAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphBuildAriStaticOpts);
    return new _GraphBuildAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      buildId: this.buildId
    };
  }
};

export {
  GraphBuildAri
};
