import {
  IdentityUserbaseAriResourceOwner,
  IdentityUserbaseAriResourceType
} from "./chunk-FKBB466V.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/identity/userbase/manifest.ts
var identityUserbaseAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: IdentityUserbaseAriResourceOwner,
  resourceType: IdentityUserbaseAriResourceType,
  resourceIdSlug: "{userbaseId}",
  resourceIdSegmentFormats: {
    userbaseId: /[a-zA-Z0-9\-]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/identity/userbase/index.ts
var IdentityUserbaseAri = class _IdentityUserbaseAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._userbaseId = opts.resourceIdSegmentValues.userbaseId;
  }
  get userbaseId() {
    return this._userbaseId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: identityUserbaseAriStaticOpts.qualifier,
      platformQualifier: identityUserbaseAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: identityUserbaseAriStaticOpts.resourceOwner,
      resourceType: identityUserbaseAriStaticOpts.resourceType,
      resourceId: `${opts.userbaseId}`,
      resourceIdSegmentValues: {
        userbaseId: opts.userbaseId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, identityUserbaseAriStaticOpts);
    return new _IdentityUserbaseAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, identityUserbaseAriStaticOpts);
    return new _IdentityUserbaseAri(opts);
  }
  getVariables() {
    return {
      userbaseId: this.userbaseId
    };
  }
};

export {
  IdentityUserbaseAri
};
