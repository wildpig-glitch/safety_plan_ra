import {
  JiraSecurityLevelAriResourceOwner,
  JiraSecurityLevelAriResourceType
} from "./chunk-PO2YLXFH.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/jira/security-level/manifest.ts
var jiraSecurityLevelAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraSecurityLevelAriResourceOwner,
  resourceType: JiraSecurityLevelAriResourceType,
  resourceIdSlug: "activation/{activationId}/{securityLevelId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    securityLevelId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/security-level/index.ts
var JiraSecurityLevelAri = class _JiraSecurityLevelAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._securityLevelId = opts.resourceIdSegmentValues.securityLevelId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get securityLevelId() {
    return this._securityLevelId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraSecurityLevelAriStaticOpts.qualifier,
      platformQualifier: jiraSecurityLevelAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraSecurityLevelAriStaticOpts.resourceOwner,
      resourceType: jiraSecurityLevelAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.securityLevelId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        securityLevelId: opts.securityLevelId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraSecurityLevelAriStaticOpts);
    return new _JiraSecurityLevelAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraSecurityLevelAriStaticOpts);
    return new _JiraSecurityLevelAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      securityLevelId: this.securityLevelId
    };
  }
};

export {
  JiraSecurityLevelAri
};
