import {
  OpsgenieIncomingCallHistoryAriResourceOwner,
  OpsgenieIncomingCallHistoryAriResourceType
} from "./chunk-W4G5P22J.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/opsgenie/incoming-call-history/manifest.ts
var opsgenieIncomingCallHistoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: OpsgenieIncomingCallHistoryAriResourceOwner,
  resourceType: OpsgenieIncomingCallHistoryAriResourceType,
  resourceIdSlug: "{workspaceId}/{incomingCallEventId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    incomingCallEventId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/opsgenie/incoming-call-history/index.ts
var OpsgenieIncomingCallHistoryAri = class _OpsgenieIncomingCallHistoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._incomingCallEventId = opts.resourceIdSegmentValues.incomingCallEventId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get incomingCallEventId() {
    return this._incomingCallEventId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: opsgenieIncomingCallHistoryAriStaticOpts.qualifier,
      platformQualifier: opsgenieIncomingCallHistoryAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: opsgenieIncomingCallHistoryAriStaticOpts.resourceOwner,
      resourceType: opsgenieIncomingCallHistoryAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.incomingCallEventId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        incomingCallEventId: opts.incomingCallEventId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieIncomingCallHistoryAriStaticOpts);
    return new _OpsgenieIncomingCallHistoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, opsgenieIncomingCallHistoryAriStaticOpts);
    return new _OpsgenieIncomingCallHistoryAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      incomingCallEventId: this.incomingCallEventId
    };
  }
};

export {
  OpsgenieIncomingCallHistoryAri
};
