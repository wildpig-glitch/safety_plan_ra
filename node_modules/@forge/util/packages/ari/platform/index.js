"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);

// src/platform/index.ts
var platform_exports = {};
__export(platform_exports, {
  PlatformClassificationTagAri: () => PlatformClassificationTagAri,
  PlatformIntegrationAri: () => PlatformIntegrationAri,
  PlatformLifecycleResourceAri: () => PlatformLifecycleResourceAri,
  PlatformLifecycleResourcePackageAri: () => PlatformLifecycleResourcePackageAri,
  PlatformLifecycleResourcePackageTypeAri: () => PlatformLifecycleResourcePackageTypeAri,
  PlatformOrgAri: () => PlatformOrgAri,
  PlatformOrgUserAri: () => PlatformOrgUserAri,
  PlatformSecureTunnelAri: () => PlatformSecureTunnelAri,
  PlatformSiteAri: () => PlatformSiteAri
});
module.exports = __toCommonJS(platform_exports);

// src/errors.ts
var ValidationError = class extends Error {
};

// src/core/rules/cloud-id.ts
function validateCloudId(cloudId, format = new RegExp("^[a-zA-Z0-9\\-]*$")) {
  if (!cloudId.match(format))
    throw new ValidationError(`Invalid cloud ID, expected ID of format ${format}.`);
}

// src/core/rules/platform-qualifier.ts
function validatePlatformQualifier(qualifier) {
  if (qualifier !== "cloud" && qualifier !== "third-party")
    throw new ValidationError(`Identifier must have a qualifier of 'cloud' or 'third-party'. Received: ${qualifier}`);
}

// src/core/rules/qualifier.ts
function validateAtiQualifier(qualifier) {
  if (qualifier !== "ati")
    throw new ValidationError(`ATI must have a qualifier of 'ati'. Received: ${qualifier}`);
}
function validateAriQualifier(qualifier) {
  if (qualifier !== "ari")
    throw new ValidationError(`ARI must have a qualifier of 'ari'. Received: ${qualifier}`);
}

// src/core/rules/resource-id.ts
function validateResourceId(id, format = new RegExp("[!a-zA-Z0-9\\-_.~@:{}=]+(/[!a-zA-Z0-9\\-_.~@:{}=]+)*" /* ANY_RESOURCE_ID */), key = "resourceId") {
  let formatWithCarets = new RegExp(`^${format.source}$`);
  if (!id.match(formatWithCarets))
    throw new ValidationError(`Invalid ${key} - ${id}, expected ID of format ${formatWithCarets}.`);
}

// src/core/rules/resource-id-segments.ts
function validateResourceIdSegments(resourceIdSegmentValues, resourceIdSegmentFormats) {
  Object.entries(resourceIdSegmentValues).forEach(([resourceIdKey, resourceIdValue]) => {
    validateResourceId(resourceIdValue, resourceIdSegmentFormats == null ? void 0 : resourceIdSegmentFormats[resourceIdKey], resourceIdKey);
  });
}

// src/core/rules/resource-owner.ts
function validateResourceOwner(owner, expectedResourceOwner) {
  if (expectedResourceOwner && owner !== expectedResourceOwner)
    throw new ValidationError(`Invalid resource owner - ${owner}, expected ${expectedResourceOwner}.`);
}

// src/core/rules/resource-type.ts
function validateResourceType(type, expectedResourceType) {
  if (expectedResourceType && type !== expectedResourceType)
    throw new ValidationError(`Invalid resource type - ${type}, expected ${expectedResourceType}.`);
}

// src/core/parser/base.ts
var NUMBER_OF_BASE_SEGMENTS = 5, SEGMENT_SEPARATOR = ":", BaseParser = class {
  static getIdentifierSegments(inputStr, numberOfSegmentsRequired) {
    let allSegments = inputStr.split(SEGMENT_SEPARATOR);
    if (allSegments.length < numberOfSegmentsRequired)
      throw new ValidationError(`Input string must have ${numberOfSegmentsRequired} segments.`);
    if (allSegments.length > numberOfSegmentsRequired) {
      let segments = allSegments.slice(0, NUMBER_OF_BASE_SEGMENTS - 1), segmentsForResourceId = allSegments.slice(NUMBER_OF_BASE_SEGMENTS - 1, allSegments.length);
      return [...segments, segmentsForResourceId.join(SEGMENT_SEPARATOR)];
    }
    return allSegments;
  }
};

// src/core/parser/ari.ts
var NUMBER_OF_ARI_SEGMENTS = 5, AriParser = class extends BaseParser {
  static fromString(maybeAri, ariProperties) {
    let segments = this.getIdentifierSegments(maybeAri, NUMBER_OF_ARI_SEGMENTS), [qualifier, platformQualifier, resourceOwner, cloudId, resourceTypeAndId] = segments, [resourceType, ...resourceIdSegments] = resourceTypeAndId.split("/"), maybeAriDerivedProperties = {
      qualifier,
      platformQualifier,
      cloudId,
      resourceOwner,
      resourceType,
      resourceId: resourceIdSegments.join("/"),
      resourceIdSegmentValues: ariProperties != null && ariProperties.resourceIdSlug ? this.ariSegmentValuesFromSlug(
        ariProperties.resourceIdSlug,
        resourceIdSegments.join("/"),
        Object.keys(ariProperties.resourceIdSegmentFormats)
      ) : {}
    };
    return this.fromOpts(maybeAriDerivedProperties, ariProperties);
  }
  static fromOpts(maybeAriOpts, ariProperties) {
    let {
      qualifier = "ari",
      platformQualifier = "cloud",
      resourceOwner,
      cloudId,
      resourceId,
      resourceIdSegmentValues,
      resourceType
    } = maybeAriOpts;
    return validateAriQualifier(qualifier), validatePlatformQualifier(platformQualifier), validateCloudId(maybeAriOpts.cloudId || "", ariProperties == null ? void 0 : ariProperties.cloudId), validateResourceOwner(resourceOwner, ariProperties == null ? void 0 : ariProperties.resourceOwner), validateResourceType(resourceType, ariProperties == null ? void 0 : ariProperties.resourceType), validateResourceIdSegments(resourceIdSegmentValues, ariProperties == null ? void 0 : ariProperties.resourceIdSegmentFormats), {
      qualifier,
      resourceOwner,
      resourceType,
      platformQualifier,
      cloudId,
      resourceId,
      resourceIdSegmentValues
    };
  }
  static ariSegmentValuesFromSlug(slug, incomingSegments, expectedKeys) {
    let regexpResult = new RegExp("^" + slug.replace(/\{(.*?)\}/g, "(?<$1>.*?)") + "$").exec(incomingSegments);
    if (!regexpResult)
      throw new ValidationError(`Segment '${incomingSegments}' don't match expected slug: ${slug}`);
    return expectedKeys.forEach((expectedKey) => {
      var _a;
      if (!((_a = regexpResult.groups) != null && _a[expectedKey]))
        throw new ValidationError(`No value supplied for '${expectedKey}' based on slug ${slug}`);
    }), regexpResult.groups || {};
  }
};

// src/core/parser/ati.ts
var NUMBER_OF_ATI_SEGMENTS = 4, AtiParser = class extends BaseParser {
  static fromString(inputStr, atiOpts) {
    let segments = this.getIdentifierSegments(inputStr, NUMBER_OF_ATI_SEGMENTS), [qualifier = "ati", platformQualifier = "cloud", resourceOwner, resourceType] = segments;
    return validateAtiQualifier(qualifier), validatePlatformQualifier(platformQualifier), validateResourceOwner(resourceOwner, atiOpts == null ? void 0 : atiOpts.resourceOwner), validateResourceType(resourceType, atiOpts == null ? void 0 : atiOpts.resourceType), { platformQualifier, resourceOwner, resourceType };
  }
  static fromOpts(maybeAtiOpts, atiOpts) {
    let { qualifier, platformQualifier, resourceOwner, resourceType } = maybeAtiOpts;
    return validateAtiQualifier(qualifier), validatePlatformQualifier(platformQualifier), validateResourceOwner(resourceOwner, atiOpts == null ? void 0 : atiOpts.resourceOwner), validateResourceType(resourceType, atiOpts == null ? void 0 : atiOpts.resourceType), {
      platformQualifier,
      resourceOwner,
      resourceType
    };
  }
};

// src/ati.ts
var Ati = class _Ati {
  constructor(platformQualifier, resourceOwner, resourceType) {
    this._platformQualifier = platformQualifier, this._resourceOwner = resourceOwner, this._resourceType = resourceType;
  }
  get platformQualifier() {
    return this._platformQualifier;
  }
  get resourceOwner() {
    return this._resourceOwner;
  }
  get resourceType() {
    return this._resourceType;
  }
  static create(opts) {
    return new _Ati(opts.platformQualifier || "cloud", opts.resourceOwner, opts.resourceType);
  }
  static parse(maybeAti, atiOpts) {
    let opts = AtiParser.fromString(maybeAti, atiOpts);
    return new _Ati(opts.platformQualifier, opts.resourceOwner, opts.resourceType);
  }
  toString() {
    return `ati:${this.platformQualifier}:${this.resourceOwner}:${this.resourceType}`;
  }
  toJSON() {
    return this.toString();
  }
  toOpts() {
    return {
      platformQualifier: this._platformQualifier,
      resourceOwner: this._resourceOwner,
      resourceType: this._resourceType
    };
  }
};

// src/core/ari.ts
var Ari = class {
  constructor(opts) {
    this._ati = Ati.create({
      platformQualifier: opts.platformQualifier || "cloud",
      resourceOwner: opts.resourceOwner,
      resourceType: opts.resourceType
    }), this._cloudId = opts.cloudId !== "" ? opts.cloudId : void 0, this._resourceId = opts.resourceId;
  }
  get platformQualifier() {
    return this._ati.platformQualifier;
  }
  get cloudId() {
    return this._cloudId;
  }
  get resourceOwner() {
    return this._ati.resourceOwner;
  }
  get resourceType() {
    return this._ati.resourceType;
  }
  get resourceId() {
    return this._resourceId;
  }
  get ati() {
    return this._ati;
  }
  equals(other) {
    return this.toString() === other.toString();
  }
  toString() {
    return `ari:${this.platformQualifier}:${this.resourceOwner}:${this.cloudId || ""}:${this.resourceType}/${this.resourceId}`;
  }
  toJSON() {
    return this.toString();
  }
  toOpts() {
    return {
      platformQualifier: this.platformQualifier,
      resourceOwner: this.resourceOwner,
      cloudId: this.cloudId,
      resourceType: this.resourceType,
      resourceId: this.resourceId
    };
  }
};

// src/any-ari.ts
var AnyAri = class _AnyAri extends Ari {
  constructor(opts) {
    super(opts);
  }
  static create(ariOpts, ariStaticOpts) {
    let ariOptsWithDefaults = { ...ariOpts, resourceIdSegmentValues: {} }, validatedOpts = AriParser.fromOpts(ariOptsWithDefaults, ariStaticOpts);
    return new _AnyAri(validatedOpts);
  }
  static parse(maybeAri, ariStaticOpts) {
    let validatedOpts = AriParser.fromString(maybeAri, ariStaticOpts);
    return new _AnyAri(validatedOpts);
  }
  static check(maybeAri) {
    try {
      return _AnyAri.parse(maybeAri.toString()), !0;
    } catch (err) {
      return !1;
    }
  }
  asAnyAri() {
    return this;
  }
};

// src/core/registered-ari.ts
var RegisteredAri = class extends Ari {
  static check(maybeAri) {
    try {
      return this.parse(maybeAri.toString()), !0;
    } catch (err) {
      return !1;
    }
  }
  asAnyAri() {
    return AnyAri.parse(this.toString());
  }
};

// src/platform/classification-tag/types.ts
var PlatformClassificationTagAriResourceOwner = "platform", PlatformClassificationTagAriResourceType = "classification-tag";

// src/platform/classification-tag/manifest.ts
var platformClassificationTagAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: PlatformClassificationTagAriResourceOwner,
  resourceType: PlatformClassificationTagAriResourceType,
  resourceIdSlug: "{tagId}",
  resourceIdSegmentFormats: {
    tagId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/platform/classification-tag/index.ts
var PlatformClassificationTagAri = class _PlatformClassificationTagAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._tagId = opts.resourceIdSegmentValues.tagId;
  }
  get tagId() {
    return this._tagId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: platformClassificationTagAriStaticOpts.qualifier,
      platformQualifier: platformClassificationTagAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: platformClassificationTagAriStaticOpts.resourceOwner,
      resourceType: platformClassificationTagAriStaticOpts.resourceType,
      resourceId: `${opts.tagId}`,
      resourceIdSegmentValues: {
        tagId: opts.tagId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, platformClassificationTagAriStaticOpts);
    return new _PlatformClassificationTagAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, platformClassificationTagAriStaticOpts);
    return new _PlatformClassificationTagAri(opts);
  }
  getVariables() {
    return {
      tagId: this.tagId
    };
  }
};

// src/platform/integration/types.ts
var PlatformIntegrationAriResourceOwner = "platform", PlatformIntegrationAriResourceType = "integration";

// src/platform/integration/manifest.ts
var platformIntegrationAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: PlatformIntegrationAriResourceOwner,
  resourceType: PlatformIntegrationAriResourceType,
  resourceIdSlug: "{integrationKey}",
  resourceIdSegmentFormats: {
    integrationKey: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/platform/integration/index.ts
var PlatformIntegrationAri = class _PlatformIntegrationAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._integrationKey = opts.resourceIdSegmentValues.integrationKey;
  }
  get integrationKey() {
    return this._integrationKey;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: platformIntegrationAriStaticOpts.qualifier,
      platformQualifier: platformIntegrationAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: platformIntegrationAriStaticOpts.resourceOwner,
      resourceType: platformIntegrationAriStaticOpts.resourceType,
      resourceId: `${opts.integrationKey}`,
      resourceIdSegmentValues: {
        integrationKey: opts.integrationKey
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, platformIntegrationAriStaticOpts);
    return new _PlatformIntegrationAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, platformIntegrationAriStaticOpts);
    return new _PlatformIntegrationAri(opts);
  }
  getVariables() {
    return {
      integrationKey: this.integrationKey
    };
  }
};

// src/platform/lifecycle-resource/types.ts
var PlatformLifecycleResourceAriResourceOwner = "platform", PlatformLifecycleResourceAriResourceType = "lifecycle-resource";

// src/platform/lifecycle-resource/manifest.ts
var platformLifecycleResourceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: PlatformLifecycleResourceAriResourceOwner,
  resourceType: PlatformLifecycleResourceAriResourceType,
  resourceIdSlug: "{lifecycleResourceId}",
  resourceIdSegmentFormats: {
    lifecycleResourceId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/platform/lifecycle-resource/index.ts
var PlatformLifecycleResourceAri = class _PlatformLifecycleResourceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._lifecycleResourceId = opts.resourceIdSegmentValues.lifecycleResourceId;
  }
  get lifecycleResourceId() {
    return this._lifecycleResourceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: platformLifecycleResourceAriStaticOpts.qualifier,
      platformQualifier: platformLifecycleResourceAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: platformLifecycleResourceAriStaticOpts.resourceOwner,
      resourceType: platformLifecycleResourceAriStaticOpts.resourceType,
      resourceId: `${opts.lifecycleResourceId}`,
      resourceIdSegmentValues: {
        lifecycleResourceId: opts.lifecycleResourceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, platformLifecycleResourceAriStaticOpts);
    return new _PlatformLifecycleResourceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, platformLifecycleResourceAriStaticOpts);
    return new _PlatformLifecycleResourceAri(opts);
  }
  getVariables() {
    return {
      lifecycleResourceId: this.lifecycleResourceId
    };
  }
};

// src/platform/lifecycle-resource-package/types.ts
var PlatformLifecycleResourcePackageAriResourceOwner = "platform", PlatformLifecycleResourcePackageAriResourceType = "lifecycle-resource-package";

// src/platform/lifecycle-resource-package/manifest.ts
var platformLifecycleResourcePackageAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: PlatformLifecycleResourcePackageAriResourceOwner,
  resourceType: PlatformLifecycleResourcePackageAriResourceType,
  resourceIdSlug: "{lifecycleResourcePackageId}",
  resourceIdSegmentFormats: {
    lifecycleResourcePackageId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/platform/lifecycle-resource-package/index.ts
var PlatformLifecycleResourcePackageAri = class _PlatformLifecycleResourcePackageAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._lifecycleResourcePackageId = opts.resourceIdSegmentValues.lifecycleResourcePackageId;
  }
  get lifecycleResourcePackageId() {
    return this._lifecycleResourcePackageId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: platformLifecycleResourcePackageAriStaticOpts.qualifier,
      platformQualifier: platformLifecycleResourcePackageAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: platformLifecycleResourcePackageAriStaticOpts.resourceOwner,
      resourceType: platformLifecycleResourcePackageAriStaticOpts.resourceType,
      resourceId: `${opts.lifecycleResourcePackageId}`,
      resourceIdSegmentValues: {
        lifecycleResourcePackageId: opts.lifecycleResourcePackageId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, platformLifecycleResourcePackageAriStaticOpts);
    return new _PlatformLifecycleResourcePackageAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, platformLifecycleResourcePackageAriStaticOpts);
    return new _PlatformLifecycleResourcePackageAri(opts);
  }
  getVariables() {
    return {
      lifecycleResourcePackageId: this.lifecycleResourcePackageId
    };
  }
};

// src/platform/lifecycle-resource-package-type/types.ts
var PlatformLifecycleResourcePackageTypeAriResourceOwner = "platform", PlatformLifecycleResourcePackageTypeAriResourceType = "lifecycle-resource-package-type";

// src/platform/lifecycle-resource-package-type/manifest.ts
var platformLifecycleResourcePackageTypeAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: PlatformLifecycleResourcePackageTypeAriResourceOwner,
  resourceType: PlatformLifecycleResourcePackageTypeAriResourceType,
  resourceIdSlug: "{resourcePackageTypeId}",
  resourceIdSegmentFormats: {
    resourcePackageTypeId: /[a-zA-Z.\-]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/platform/lifecycle-resource-package-type/index.ts
var PlatformLifecycleResourcePackageTypeAri = class _PlatformLifecycleResourcePackageTypeAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._resourcePackageTypeId = opts.resourceIdSegmentValues.resourcePackageTypeId;
  }
  get resourcePackageTypeId() {
    return this._resourcePackageTypeId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: platformLifecycleResourcePackageTypeAriStaticOpts.qualifier,
      platformQualifier: platformLifecycleResourcePackageTypeAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: platformLifecycleResourcePackageTypeAriStaticOpts.resourceOwner,
      resourceType: platformLifecycleResourcePackageTypeAriStaticOpts.resourceType,
      resourceId: `${opts.resourcePackageTypeId}`,
      resourceIdSegmentValues: {
        resourcePackageTypeId: opts.resourcePackageTypeId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, platformLifecycleResourcePackageTypeAriStaticOpts);
    return new _PlatformLifecycleResourcePackageTypeAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, platformLifecycleResourcePackageTypeAriStaticOpts);
    return new _PlatformLifecycleResourcePackageTypeAri(opts);
  }
  getVariables() {
    return {
      resourcePackageTypeId: this.resourcePackageTypeId
    };
  }
};

// src/platform/org/types.ts
var PlatformOrgAriResourceOwner = "platform", PlatformOrgAriResourceType = "org";

// src/platform/org/manifest.ts
var platformOrgAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: PlatformOrgAriResourceOwner,
  resourceType: PlatformOrgAriResourceType,
  resourceIdSlug: "{orgId}",
  resourceIdSegmentFormats: {
    orgId: /[a-zA-Z0-9\-]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/platform/org/index.ts
var PlatformOrgAri = class _PlatformOrgAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._orgId = opts.resourceIdSegmentValues.orgId;
  }
  get orgId() {
    return this._orgId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: platformOrgAriStaticOpts.qualifier,
      platformQualifier: platformOrgAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: platformOrgAriStaticOpts.resourceOwner,
      resourceType: platformOrgAriStaticOpts.resourceType,
      resourceId: `${opts.orgId}`,
      resourceIdSegmentValues: {
        orgId: opts.orgId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, platformOrgAriStaticOpts);
    return new _PlatformOrgAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, platformOrgAriStaticOpts);
    return new _PlatformOrgAri(opts);
  }
  getVariables() {
    return {
      orgId: this.orgId
    };
  }
};

// src/platform/org-user/types.ts
var PlatformOrgUserAriResourceOwner = "platform", PlatformOrgUserAriResourceType = "org-user";

// src/platform/org-user/manifest.ts
var platformOrgUserAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: PlatformOrgUserAriResourceOwner,
  resourceType: PlatformOrgUserAriResourceType,
  resourceIdSlug: "{orgId}/{userId}",
  resourceIdSegmentFormats: {
    orgId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    userId: /[a-zA-Z0-9_\-\:]{1,128}/
    // eslint-disable-line no-useless-escape
  }
};

// src/platform/org-user/index.ts
var PlatformOrgUserAri = class _PlatformOrgUserAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._orgId = opts.resourceIdSegmentValues.orgId, this._userId = opts.resourceIdSegmentValues.userId;
  }
  get orgId() {
    return this._orgId;
  }
  get userId() {
    return this._userId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: platformOrgUserAriStaticOpts.qualifier,
      platformQualifier: platformOrgUserAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: platformOrgUserAriStaticOpts.resourceOwner,
      resourceType: platformOrgUserAriStaticOpts.resourceType,
      resourceId: `${opts.orgId}/${opts.userId}`,
      resourceIdSegmentValues: {
        orgId: opts.orgId,
        userId: opts.userId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, platformOrgUserAriStaticOpts);
    return new _PlatformOrgUserAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, platformOrgUserAriStaticOpts);
    return new _PlatformOrgUserAri(opts);
  }
  getVariables() {
    return {
      orgId: this.orgId,
      userId: this.userId
    };
  }
};

// src/platform/secure-tunnel/types.ts
var PlatformSecureTunnelAriResourceOwner = "platform", PlatformSecureTunnelAriResourceType = "secure-tunnel";

// src/platform/secure-tunnel/manifest.ts
var platformSecureTunnelAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: PlatformSecureTunnelAriResourceOwner,
  resourceType: PlatformSecureTunnelAriResourceType,
  resourceIdSlug: "{secureTunnelId}",
  resourceIdSegmentFormats: {
    secureTunnelId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/platform/secure-tunnel/index.ts
var PlatformSecureTunnelAri = class _PlatformSecureTunnelAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._secureTunnelId = opts.resourceIdSegmentValues.secureTunnelId;
  }
  get secureTunnelId() {
    return this._secureTunnelId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: platformSecureTunnelAriStaticOpts.qualifier,
      platformQualifier: platformSecureTunnelAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: platformSecureTunnelAriStaticOpts.resourceOwner,
      resourceType: platformSecureTunnelAriStaticOpts.resourceType,
      resourceId: `${opts.secureTunnelId}`,
      resourceIdSegmentValues: {
        secureTunnelId: opts.secureTunnelId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, platformSecureTunnelAriStaticOpts);
    return new _PlatformSecureTunnelAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, platformSecureTunnelAriStaticOpts);
    return new _PlatformSecureTunnelAri(opts);
  }
  getVariables() {
    return {
      secureTunnelId: this.secureTunnelId
    };
  }
};

// src/platform/site/types.ts
var PlatformSiteAriResourceOwner = "platform", PlatformSiteAriResourceType = "site";

// src/platform/site/manifest.ts
var platformSiteAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: PlatformSiteAriResourceOwner,
  resourceType: PlatformSiteAriResourceType,
  resourceIdSlug: "{siteId}",
  resourceIdSegmentFormats: {
    siteId: /[a-zA-Z0-9\-]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/platform/site/index.ts
var PlatformSiteAri = class _PlatformSiteAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.resourceIdSegmentValues.siteId;
  }
  get siteId() {
    return this._siteId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: platformSiteAriStaticOpts.qualifier,
      platformQualifier: platformSiteAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: platformSiteAriStaticOpts.resourceOwner,
      resourceType: platformSiteAriStaticOpts.resourceType,
      resourceId: `${opts.siteId}`,
      resourceIdSegmentValues: {
        siteId: opts.siteId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, platformSiteAriStaticOpts);
    return new _PlatformSiteAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, platformSiteAriStaticOpts);
    return new _PlatformSiteAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId
    };
  }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  PlatformClassificationTagAri,
  PlatformIntegrationAri,
  PlatformLifecycleResourceAri,
  PlatformLifecycleResourcePackageAri,
  PlatformLifecycleResourcePackageTypeAri,
  PlatformOrgAri,
  PlatformOrgUserAri,
  PlatformSecureTunnelAri,
  PlatformSiteAri
});
