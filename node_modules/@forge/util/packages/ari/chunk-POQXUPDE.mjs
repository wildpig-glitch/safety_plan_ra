import {
  IdentityAuthPolicyAriResourceOwner,
  IdentityAuthPolicyAriResourceType
} from "./chunk-27IAW7JZ.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/identity/auth-policy/manifest.ts
var identityAuthPolicyAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: IdentityAuthPolicyAriResourceOwner,
  resourceType: IdentityAuthPolicyAriResourceType,
  resourceIdSlug: "{authPolicyId}",
  resourceIdSegmentFormats: {
    authPolicyId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/identity/auth-policy/index.ts
var IdentityAuthPolicyAri = class _IdentityAuthPolicyAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._authPolicyId = opts.resourceIdSegmentValues.authPolicyId;
  }
  get authPolicyId() {
    return this._authPolicyId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: identityAuthPolicyAriStaticOpts.qualifier,
      platformQualifier: identityAuthPolicyAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: identityAuthPolicyAriStaticOpts.resourceOwner,
      resourceType: identityAuthPolicyAriStaticOpts.resourceType,
      resourceId: `${opts.authPolicyId}`,
      resourceIdSegmentValues: {
        authPolicyId: opts.authPolicyId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, identityAuthPolicyAriStaticOpts);
    return new _IdentityAuthPolicyAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, identityAuthPolicyAriStaticOpts);
    return new _IdentityAuthPolicyAri(opts);
  }
  getVariables() {
    return {
      authPolicyId: this.authPolicyId
    };
  }
};

export {
  IdentityAuthPolicyAri
};
