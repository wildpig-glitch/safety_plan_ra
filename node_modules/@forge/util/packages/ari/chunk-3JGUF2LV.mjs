import {
  PlatformClassificationTagAriResourceOwner,
  PlatformClassificationTagAriResourceType
} from "./chunk-JOF4WRFT.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/platform/classification-tag/manifest.ts
var platformClassificationTagAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: PlatformClassificationTagAriResourceOwner,
  resourceType: PlatformClassificationTagAriResourceType,
  resourceIdSlug: "{tagId}",
  resourceIdSegmentFormats: {
    tagId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/platform/classification-tag/index.ts
var PlatformClassificationTagAri = class _PlatformClassificationTagAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._tagId = opts.resourceIdSegmentValues.tagId;
  }
  get tagId() {
    return this._tagId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: platformClassificationTagAriStaticOpts.qualifier,
      platformQualifier: platformClassificationTagAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: platformClassificationTagAriStaticOpts.resourceOwner,
      resourceType: platformClassificationTagAriStaticOpts.resourceType,
      resourceId: `${opts.tagId}`,
      resourceIdSegmentValues: {
        tagId: opts.tagId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, platformClassificationTagAriStaticOpts);
    return new _PlatformClassificationTagAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, platformClassificationTagAriStaticOpts);
    return new _PlatformClassificationTagAri(opts);
  }
  getVariables() {
    return {
      tagId: this.tagId
    };
  }
};

export {
  PlatformClassificationTagAri
};
