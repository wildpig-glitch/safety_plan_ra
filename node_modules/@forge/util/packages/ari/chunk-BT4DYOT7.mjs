import {
  SearchForwardDocumentSubscriptionAriResourceOwner,
  SearchForwardDocumentSubscriptionAriResourceType
} from "./chunk-LLH27RU3.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/search/forward-document-subscription/manifest.ts
var searchForwardDocumentSubscriptionAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: SearchForwardDocumentSubscriptionAriResourceOwner,
  resourceType: SearchForwardDocumentSubscriptionAriResourceType,
  resourceIdSlug: "activation/{activationId}/{subscriptionType}/{subscriptionId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    subscriptionType: /[a-zA-Z0-9\-_]+/,
    // eslint-disable-line no-useless-escape
    subscriptionId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/search/forward-document-subscription/index.ts
var SearchForwardDocumentSubscriptionAri = class _SearchForwardDocumentSubscriptionAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._subscriptionType = opts.resourceIdSegmentValues.subscriptionType, this._subscriptionId = opts.resourceIdSegmentValues.subscriptionId;
  }
  get activationId() {
    return this._activationId;
  }
  get subscriptionType() {
    return this._subscriptionType;
  }
  get subscriptionId() {
    return this._subscriptionId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: searchForwardDocumentSubscriptionAriStaticOpts.qualifier,
      platformQualifier: searchForwardDocumentSubscriptionAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: searchForwardDocumentSubscriptionAriStaticOpts.resourceOwner,
      resourceType: searchForwardDocumentSubscriptionAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.subscriptionType}/${opts.subscriptionId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        subscriptionType: opts.subscriptionType,
        subscriptionId: opts.subscriptionId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, searchForwardDocumentSubscriptionAriStaticOpts);
    return new _SearchForwardDocumentSubscriptionAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, searchForwardDocumentSubscriptionAriStaticOpts);
    return new _SearchForwardDocumentSubscriptionAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      subscriptionType: this.subscriptionType,
      subscriptionId: this.subscriptionId
    };
  }
};

export {
  SearchForwardDocumentSubscriptionAri
};
