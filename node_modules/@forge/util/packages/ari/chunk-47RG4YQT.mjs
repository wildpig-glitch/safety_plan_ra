import {
  CompassComponentAriResourceOwner,
  CompassComponentAriResourceType
} from "./chunk-XW2UZKUO.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/compass/component/manifest.ts
var compassComponentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: CompassComponentAriResourceOwner,
  resourceType: CompassComponentAriResourceType,
  resourceIdSlug: "{workspaceId}/{componentId}",
  resourceIdSegmentFormats: {
    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    componentId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/compass/component/index.ts
var CompassComponentAri = class _CompassComponentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._componentId = opts.resourceIdSegmentValues.componentId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get componentId() {
    return this._componentId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: compassComponentAriStaticOpts.qualifier,
      platformQualifier: compassComponentAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: compassComponentAriStaticOpts.resourceOwner,
      resourceType: compassComponentAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.componentId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        componentId: opts.componentId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, compassComponentAriStaticOpts);
    return new _CompassComponentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, compassComponentAriStaticOpts);
    return new _CompassComponentAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      componentId: this.componentId
    };
  }
};

export {
  CompassComponentAri
};
