import {
  JiraAlignInstanceAriResourceOwner,
  JiraAlignInstanceAriResourceType
} from "./chunk-KIGWQUKL.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/jira-align/instance/manifest.ts
var jiraAlignInstanceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: JiraAlignInstanceAriResourceOwner,
  resourceType: JiraAlignInstanceAriResourceType,
  resourceIdSlug: "{instanceId}",
  resourceIdSegmentFormats: {
    instanceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira-align/instance/index.ts
var JiraAlignInstanceAri = class _JiraAlignInstanceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._instanceId = opts.resourceIdSegmentValues.instanceId;
  }
  get instanceId() {
    return this._instanceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraAlignInstanceAriStaticOpts.qualifier,
      platformQualifier: jiraAlignInstanceAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: jiraAlignInstanceAriStaticOpts.resourceOwner,
      resourceType: jiraAlignInstanceAriStaticOpts.resourceType,
      resourceId: `${opts.instanceId}`,
      resourceIdSegmentValues: {
        instanceId: opts.instanceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraAlignInstanceAriStaticOpts);
    return new _JiraAlignInstanceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraAlignInstanceAriStaticOpts);
    return new _JiraAlignInstanceAri(opts);
  }
  getVariables() {
    return {
      instanceId: this.instanceId
    };
  }
};

export {
  JiraAlignInstanceAri
};
