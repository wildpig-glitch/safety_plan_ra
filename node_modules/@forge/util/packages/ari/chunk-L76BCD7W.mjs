import {
  OpsgenieIntegrationAriResourceOwner,
  OpsgenieIntegrationAriResourceType
} from "./chunk-KNRSSKUB.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/opsgenie/integration/manifest.ts
var opsgenieIntegrationAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: OpsgenieIntegrationAriResourceOwner,
  resourceType: OpsgenieIntegrationAriResourceType,
  resourceIdSlug: "{workspaceId}/{integrationId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    integrationId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/opsgenie/integration/index.ts
var OpsgenieIntegrationAri = class _OpsgenieIntegrationAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._integrationId = opts.resourceIdSegmentValues.integrationId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get integrationId() {
    return this._integrationId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: opsgenieIntegrationAriStaticOpts.qualifier,
      platformQualifier: opsgenieIntegrationAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: opsgenieIntegrationAriStaticOpts.resourceOwner,
      resourceType: opsgenieIntegrationAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.integrationId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        integrationId: opts.integrationId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieIntegrationAriStaticOpts);
    return new _OpsgenieIntegrationAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, opsgenieIntegrationAriStaticOpts);
    return new _OpsgenieIntegrationAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      integrationId: this.integrationId
    };
  }
};

export {
  OpsgenieIntegrationAri
};
