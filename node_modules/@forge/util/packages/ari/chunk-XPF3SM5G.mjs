import {
  JiraDevopsComponentAriResourceOwner,
  JiraDevopsComponentAriResourceType
} from "./chunk-7UM4GJSV.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/jira/devops-component/manifest.ts
var jiraDevopsComponentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraDevopsComponentAriResourceOwner,
  resourceType: JiraDevopsComponentAriResourceType,
  resourceIdSlug: "activation/{activationId}/{devopsComponentId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    devopsComponentId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/devops-component/index.ts
var JiraDevopsComponentAri = class _JiraDevopsComponentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._devopsComponentId = opts.resourceIdSegmentValues.devopsComponentId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get devopsComponentId() {
    return this._devopsComponentId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraDevopsComponentAriStaticOpts.qualifier,
      platformQualifier: jiraDevopsComponentAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraDevopsComponentAriStaticOpts.resourceOwner,
      resourceType: jiraDevopsComponentAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.devopsComponentId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        devopsComponentId: opts.devopsComponentId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraDevopsComponentAriStaticOpts);
    return new _JiraDevopsComponentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraDevopsComponentAriStaticOpts);
    return new _JiraDevopsComponentAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      devopsComponentId: this.devopsComponentId
    };
  }
};

export {
  JiraDevopsComponentAri
};
