import {
  JiraServicedeskSlaAriResourceOwner,
  JiraServicedeskSlaAriResourceType
} from "./chunk-BMLW67PZ.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/jira-servicedesk/sla/manifest.ts
var jiraServicedeskSlaAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: JiraServicedeskSlaAriResourceOwner,
  resourceType: JiraServicedeskSlaAriResourceType,
  resourceIdSlug: "activation/{activationId}/{slaId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    slaId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira-servicedesk/sla/index.ts
var JiraServicedeskSlaAri = class _JiraServicedeskSlaAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._slaId = opts.resourceIdSegmentValues.slaId;
  }
  get activationId() {
    return this._activationId;
  }
  get slaId() {
    return this._slaId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraServicedeskSlaAriStaticOpts.qualifier,
      platformQualifier: jiraServicedeskSlaAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: jiraServicedeskSlaAriStaticOpts.resourceOwner,
      resourceType: jiraServicedeskSlaAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.slaId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        slaId: opts.slaId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraServicedeskSlaAriStaticOpts);
    return new _JiraServicedeskSlaAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraServicedeskSlaAriStaticOpts);
    return new _JiraServicedeskSlaAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      slaId: this.slaId
    };
  }
};

export {
  JiraServicedeskSlaAri
};
