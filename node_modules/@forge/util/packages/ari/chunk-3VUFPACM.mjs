import {
  ConfluenceBlogpostAriResourceOwner,
  ConfluenceBlogpostAriResourceType
} from "./chunk-J5SGYOAJ.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/confluence/blogpost/manifest.ts
var confluenceBlogpostAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: ConfluenceBlogpostAriResourceOwner,
  resourceType: ConfluenceBlogpostAriResourceType,
  resourceIdSlug: "{blogpostId}",
  resourceIdSegmentFormats: {
    blogpostId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/confluence/blogpost/index.ts
var ConfluenceBlogpostAri = class _ConfluenceBlogpostAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._blogpostId = opts.resourceIdSegmentValues.blogpostId;
  }
  get siteId() {
    return this._siteId;
  }
  get blogpostId() {
    return this._blogpostId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: confluenceBlogpostAriStaticOpts.qualifier,
      platformQualifier: confluenceBlogpostAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: confluenceBlogpostAriStaticOpts.resourceOwner,
      resourceType: confluenceBlogpostAriStaticOpts.resourceType,
      resourceId: `${opts.blogpostId}`,
      resourceIdSegmentValues: {
        blogpostId: opts.blogpostId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, confluenceBlogpostAriStaticOpts);
    return new _ConfluenceBlogpostAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, confluenceBlogpostAriStaticOpts);
    return new _ConfluenceBlogpostAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      blogpostId: this.blogpostId
    };
  }
};

export {
  ConfluenceBlogpostAri
};
