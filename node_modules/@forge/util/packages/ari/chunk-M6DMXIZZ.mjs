import {
  GraphServiceAriResourceOwner,
  GraphServiceAriResourceType
} from "./chunk-KKDL7RK7.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/graph/service/manifest.ts
var graphServiceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: GraphServiceAriResourceOwner,
  resourceType: GraphServiceAriResourceType,
  resourceIdSlug: "{workspaceId}/{serviceId}",
  resourceIdSegmentFormats: {
    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    serviceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/service/index.ts
var GraphServiceAri = class _GraphServiceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._serviceId = opts.resourceIdSegmentValues.serviceId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get serviceId() {
    return this._serviceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphServiceAriStaticOpts.qualifier,
      platformQualifier: graphServiceAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphServiceAriStaticOpts.resourceOwner,
      resourceType: graphServiceAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.serviceId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        serviceId: opts.serviceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphServiceAriStaticOpts);
    return new _GraphServiceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphServiceAriStaticOpts);
    return new _GraphServiceAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      serviceId: this.serviceId
    };
  }
};

export {
  GraphServiceAri
};
