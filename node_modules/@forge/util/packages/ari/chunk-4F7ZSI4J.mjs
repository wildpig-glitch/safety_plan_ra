import {
  CommercePricingPlanAriResourceOwner,
  CommercePricingPlanAriResourceType
} from "./chunk-66TMLCVM.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/commerce/pricing-plan/manifest.ts
var commercePricingPlanAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: CommercePricingPlanAriResourceOwner,
  resourceType: CommercePricingPlanAriResourceType,
  resourceIdSlug: "{pricingPlanId}",
  resourceIdSegmentFormats: {
    pricingPlanId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/commerce/pricing-plan/index.ts
var CommercePricingPlanAri = class _CommercePricingPlanAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._pricingPlanId = opts.resourceIdSegmentValues.pricingPlanId;
  }
  get pricingPlanId() {
    return this._pricingPlanId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: commercePricingPlanAriStaticOpts.qualifier,
      platformQualifier: commercePricingPlanAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: commercePricingPlanAriStaticOpts.resourceOwner,
      resourceType: commercePricingPlanAriStaticOpts.resourceType,
      resourceId: `${opts.pricingPlanId}`,
      resourceIdSegmentValues: {
        pricingPlanId: opts.pricingPlanId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, commercePricingPlanAriStaticOpts);
    return new _CommercePricingPlanAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, commercePricingPlanAriStaticOpts);
    return new _CommercePricingPlanAri(opts);
  }
  getVariables() {
    return {
      pricingPlanId: this.pricingPlanId
    };
  }
};

export {
  CommercePricingPlanAri
};
