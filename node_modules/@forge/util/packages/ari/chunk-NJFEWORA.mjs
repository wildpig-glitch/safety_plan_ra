import {
  VirtualAgentIntentTemplateAriResourceOwner,
  VirtualAgentIntentTemplateAriResourceType
} from "./chunk-66RZPSB4.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/virtual-agent/intent-template/manifest.ts
var virtualAgentIntentTemplateAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: VirtualAgentIntentTemplateAriResourceOwner,
  resourceType: VirtualAgentIntentTemplateAriResourceType,
  resourceIdSlug: "{activationId}/{intentTemplateId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    intentTemplateId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/virtual-agent/intent-template/index.ts
var VirtualAgentIntentTemplateAri = class _VirtualAgentIntentTemplateAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._intentTemplateId = opts.resourceIdSegmentValues.intentTemplateId;
  }
  get activationId() {
    return this._activationId;
  }
  get intentTemplateId() {
    return this._intentTemplateId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: virtualAgentIntentTemplateAriStaticOpts.qualifier,
      platformQualifier: virtualAgentIntentTemplateAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: virtualAgentIntentTemplateAriStaticOpts.resourceOwner,
      resourceType: virtualAgentIntentTemplateAriStaticOpts.resourceType,
      resourceId: `${opts.activationId}/${opts.intentTemplateId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        intentTemplateId: opts.intentTemplateId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, virtualAgentIntentTemplateAriStaticOpts);
    return new _VirtualAgentIntentTemplateAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, virtualAgentIntentTemplateAriStaticOpts);
    return new _VirtualAgentIntentTemplateAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      intentTemplateId: this.intentTemplateId
    };
  }
};

export {
  VirtualAgentIntentTemplateAri
};
