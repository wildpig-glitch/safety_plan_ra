import {
  TrelloBoardAriResourceOwner,
  TrelloBoardAriResourceType
} from "./chunk-HI4UEG2F.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/trello/board/manifest.ts
var trelloBoardAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: TrelloBoardAriResourceOwner,
  resourceType: TrelloBoardAriResourceType,
  resourceIdSlug: "workspace/{workspaceId}/{boardId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-_.]*/,
    // eslint-disable-line no-useless-escape
    boardId: /[a-zA-Z0-9\-_.]*/
    // eslint-disable-line no-useless-escape
  }
};

// src/trello/board/index.ts
var TrelloBoardAri = class _TrelloBoardAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._boardId = opts.resourceIdSegmentValues.boardId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get boardId() {
    return this._boardId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: trelloBoardAriStaticOpts.qualifier,
      platformQualifier: trelloBoardAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: trelloBoardAriStaticOpts.resourceOwner,
      resourceType: trelloBoardAriStaticOpts.resourceType,
      resourceId: `workspace/${opts.workspaceId}/${opts.boardId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId || "",
        boardId: opts.boardId || ""
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, trelloBoardAriStaticOpts);
    return new _TrelloBoardAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, trelloBoardAriStaticOpts);
    return new _TrelloBoardAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      boardId: this.boardId
    };
  }
};

export {
  TrelloBoardAri
};
