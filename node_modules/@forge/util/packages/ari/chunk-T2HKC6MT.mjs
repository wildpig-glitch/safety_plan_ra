import {
  TownsquareQuestionAriResourceOwner,
  TownsquareQuestionAriResourceType
} from "./chunk-IKIQRIWE.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/townsquare/question/manifest.ts
var townsquareQuestionAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: TownsquareQuestionAriResourceOwner,
  resourceType: TownsquareQuestionAriResourceType,
  resourceIdSlug: "{questionUuid}",
  resourceIdSegmentFormats: {
    questionUuid: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/townsquare/question/index.ts
var TownsquareQuestionAri = class _TownsquareQuestionAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._questionUuid = opts.resourceIdSegmentValues.questionUuid;
  }
  get siteId() {
    return this._siteId;
  }
  get questionUuid() {
    return this._questionUuid;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: townsquareQuestionAriStaticOpts.qualifier,
      platformQualifier: townsquareQuestionAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: townsquareQuestionAriStaticOpts.resourceOwner,
      resourceType: townsquareQuestionAriStaticOpts.resourceType,
      resourceId: `${opts.questionUuid}`,
      resourceIdSegmentValues: {
        questionUuid: opts.questionUuid
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, townsquareQuestionAriStaticOpts);
    return new _TownsquareQuestionAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, townsquareQuestionAriStaticOpts);
    return new _TownsquareQuestionAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      questionUuid: this.questionUuid
    };
  }
};

export {
  TownsquareQuestionAri
};
