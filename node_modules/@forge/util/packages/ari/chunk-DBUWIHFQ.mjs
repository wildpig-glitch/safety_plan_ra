import {
  GraphSecurityContainerAriResourceOwner,
  GraphSecurityContainerAriResourceType
} from "./chunk-6HYQV6SW.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/graph/security-container/manifest.ts
var graphSecurityContainerAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: GraphSecurityContainerAriResourceOwner,
  resourceType: GraphSecurityContainerAriResourceType,
  resourceIdSlug: "activation/{activationId}/{providerAppId}/{securityContainerId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    providerAppId: /[a-zA-Z0-9-._]+/,
    // eslint-disable-line no-useless-escape
    securityContainerId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/security-container/index.ts
var GraphSecurityContainerAri = class _GraphSecurityContainerAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._providerAppId = opts.resourceIdSegmentValues.providerAppId, this._securityContainerId = opts.resourceIdSegmentValues.securityContainerId;
  }
  get activationId() {
    return this._activationId;
  }
  get providerAppId() {
    return this._providerAppId;
  }
  get securityContainerId() {
    return this._securityContainerId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphSecurityContainerAriStaticOpts.qualifier,
      platformQualifier: graphSecurityContainerAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphSecurityContainerAriStaticOpts.resourceOwner,
      resourceType: graphSecurityContainerAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.providerAppId}/${opts.securityContainerId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        providerAppId: opts.providerAppId,
        securityContainerId: opts.securityContainerId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphSecurityContainerAriStaticOpts);
    return new _GraphSecurityContainerAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphSecurityContainerAriStaticOpts);
    return new _GraphSecurityContainerAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      providerAppId: this.providerAppId,
      securityContainerId: this.securityContainerId
    };
  }
};

export {
  GraphSecurityContainerAri
};
