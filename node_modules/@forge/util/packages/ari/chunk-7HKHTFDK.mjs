import {
  JiraScreenTabAriResourceOwner,
  JiraScreenTabAriResourceType
} from "./chunk-ES32ZAYS.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/jira/screen-tab/manifest.ts
var jiraScreenTabAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraScreenTabAriResourceOwner,
  resourceType: JiraScreenTabAriResourceType,
  resourceIdSlug: "activation/{activationId}/{screenId}/{tabId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    screenId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/,
    // eslint-disable-line no-useless-escape
    tabId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/screen-tab/index.ts
var JiraScreenTabAri = class _JiraScreenTabAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._screenId = opts.resourceIdSegmentValues.screenId, this._tabId = opts.resourceIdSegmentValues.tabId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get screenId() {
    return this._screenId;
  }
  get tabId() {
    return this._tabId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraScreenTabAriStaticOpts.qualifier,
      platformQualifier: jiraScreenTabAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraScreenTabAriStaticOpts.resourceOwner,
      resourceType: jiraScreenTabAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.screenId}/${opts.tabId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        screenId: opts.screenId,
        tabId: opts.tabId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraScreenTabAriStaticOpts);
    return new _JiraScreenTabAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraScreenTabAriStaticOpts);
    return new _JiraScreenTabAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      screenId: this.screenId,
      tabId: this.tabId
    };
  }
};

export {
  JiraScreenTabAri
};
