import {
  OpsgenieIncidentAlertLinkAriResourceOwner,
  OpsgenieIncidentAlertLinkAriResourceType
} from "./chunk-JCLOAQNZ.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/opsgenie/incident-alert-link/manifest.ts
var opsgenieIncidentAlertLinkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: OpsgenieIncidentAlertLinkAriResourceOwner,
  resourceType: OpsgenieIncidentAlertLinkAriResourceType,
  resourceIdSlug: "{workspaceId}/{incidentId}/{alertId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    incidentId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    alertId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}(-[0-9]*)?/
    // eslint-disable-line no-useless-escape
  }
};

// src/opsgenie/incident-alert-link/index.ts
var OpsgenieIncidentAlertLinkAri = class _OpsgenieIncidentAlertLinkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._incidentId = opts.resourceIdSegmentValues.incidentId, this._alertId = opts.resourceIdSegmentValues.alertId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get incidentId() {
    return this._incidentId;
  }
  get alertId() {
    return this._alertId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: opsgenieIncidentAlertLinkAriStaticOpts.qualifier,
      platformQualifier: opsgenieIncidentAlertLinkAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: opsgenieIncidentAlertLinkAriStaticOpts.resourceOwner,
      resourceType: opsgenieIncidentAlertLinkAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.incidentId}/${opts.alertId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        incidentId: opts.incidentId,
        alertId: opts.alertId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieIncidentAlertLinkAriStaticOpts);
    return new _OpsgenieIncidentAlertLinkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, opsgenieIncidentAlertLinkAriStaticOpts);
    return new _OpsgenieIncidentAlertLinkAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      incidentId: this.incidentId,
      alertId: this.alertId
    };
  }
};

export {
  OpsgenieIncidentAlertLinkAri
};
