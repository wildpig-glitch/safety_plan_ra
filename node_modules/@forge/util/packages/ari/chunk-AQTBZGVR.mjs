import {
  PapiApiAriResourceOwner,
  PapiApiAriResourceType
} from "./chunk-5IDHPJZF.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/papi/api/manifest.ts
var papiApiAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: PapiApiAriResourceOwner,
  resourceType: PapiApiAriResourceType,
  resourceIdSlug: "catalog/{uuid}",
  resourceIdSegmentFormats: {
    uuid: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/papi/api/index.ts
var PapiApiAri = class _PapiApiAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._uuid = opts.resourceIdSegmentValues.uuid;
  }
  get uuid() {
    return this._uuid;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: papiApiAriStaticOpts.qualifier,
      platformQualifier: papiApiAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: papiApiAriStaticOpts.resourceOwner,
      resourceType: papiApiAriStaticOpts.resourceType,
      resourceId: `catalog/${opts.uuid}`,
      resourceIdSegmentValues: {
        uuid: opts.uuid
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, papiApiAriStaticOpts);
    return new _PapiApiAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, papiApiAriStaticOpts);
    return new _PapiApiAri(opts);
  }
  getVariables() {
    return {
      uuid: this.uuid
    };
  }
};

export {
  PapiApiAri
};
