import {
  MicrosoftSharepointDocumentAriResourceOwner,
  MicrosoftSharepointDocumentAriResourceType
} from "./chunk-N2H36TJ6.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/microsoft/sharepoint-document/manifest.ts
var microsoftSharepointDocumentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  resourceOwner: MicrosoftSharepointDocumentAriResourceOwner,
  resourceType: MicrosoftSharepointDocumentAriResourceType,
  resourceIdSlug: "driveId/{driveId}/fileId/{fileId}",
  resourceIdSegmentFormats: {
    driveId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/,
    // eslint-disable-line no-useless-escape
    fileId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/microsoft/sharepoint-document/index.ts
var MicrosoftSharepointDocumentAri = class _MicrosoftSharepointDocumentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._driveId = opts.resourceIdSegmentValues.driveId, this._fileId = opts.resourceIdSegmentValues.fileId;
  }
  get driveId() {
    return this._driveId;
  }
  get fileId() {
    return this._fileId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: microsoftSharepointDocumentAriStaticOpts.qualifier,
      platformQualifier: microsoftSharepointDocumentAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: microsoftSharepointDocumentAriStaticOpts.resourceOwner,
      resourceType: microsoftSharepointDocumentAriStaticOpts.resourceType,
      resourceId: `driveId/${opts.driveId}/fileId/${opts.fileId}`,
      resourceIdSegmentValues: {
        driveId: opts.driveId,
        fileId: opts.fileId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, microsoftSharepointDocumentAriStaticOpts);
    return new _MicrosoftSharepointDocumentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, microsoftSharepointDocumentAriStaticOpts);
    return new _MicrosoftSharepointDocumentAri(opts);
  }
  getVariables() {
    return {
      driveId: this.driveId,
      fileId: this.fileId
    };
  }
};

export {
  MicrosoftSharepointDocumentAri
};
