import {
  PlatformLifecycleResourceAriResourceOwner,
  PlatformLifecycleResourceAriResourceType
} from "./chunk-T36754GS.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/platform/lifecycle-resource/manifest.ts
var platformLifecycleResourceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: PlatformLifecycleResourceAriResourceOwner,
  resourceType: PlatformLifecycleResourceAriResourceType,
  resourceIdSlug: "{lifecycleResourceId}",
  resourceIdSegmentFormats: {
    lifecycleResourceId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/platform/lifecycle-resource/index.ts
var PlatformLifecycleResourceAri = class _PlatformLifecycleResourceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._lifecycleResourceId = opts.resourceIdSegmentValues.lifecycleResourceId;
  }
  get lifecycleResourceId() {
    return this._lifecycleResourceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: platformLifecycleResourceAriStaticOpts.qualifier,
      platformQualifier: platformLifecycleResourceAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: platformLifecycleResourceAriStaticOpts.resourceOwner,
      resourceType: platformLifecycleResourceAriStaticOpts.resourceType,
      resourceId: `${opts.lifecycleResourceId}`,
      resourceIdSegmentValues: {
        lifecycleResourceId: opts.lifecycleResourceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, platformLifecycleResourceAriStaticOpts);
    return new _PlatformLifecycleResourceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, platformLifecycleResourceAriStaticOpts);
    return new _PlatformLifecycleResourceAri(opts);
  }
  getVariables() {
    return {
      lifecycleResourceId: this.lifecycleResourceId
    };
  }
};

export {
  PlatformLifecycleResourceAri
};
