"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);

// src/jira/index.ts
var jira_exports = {};
__export(jira_exports, {
  JiraAnnouncementBannerAri: () => JiraAnnouncementBannerAri,
  JiraAvailableFieldsAri: () => JiraAvailableFieldsAri,
  JiraBranchAri: () => JiraBranchAri,
  JiraBranchHistoryAri: () => JiraBranchHistoryAri,
  JiraBuildAri: () => JiraBuildAri,
  JiraBuildHistoryAri: () => JiraBuildHistoryAri,
  JiraBulkOperationTaskAri: () => JiraBulkOperationTaskAri,
  JiraCommentAri: () => JiraCommentAri,
  JiraCommitAri: () => JiraCommitAri,
  JiraComponentAri: () => JiraComponentAri,
  JiraConnectAppAri: () => JiraConnectAppAri,
  JiraDashboardAri: () => JiraDashboardAri,
  JiraDeploymentAri: () => JiraDeploymentAri,
  JiraDeploymentHistoryAri: () => JiraDeploymentHistoryAri,
  JiraDesignAri: () => JiraDesignAri,
  JiraDesignHistoryAri: () => JiraDesignHistoryAri,
  JiraDevopsComponentAri: () => JiraDevopsComponentAri,
  JiraDocumentAri: () => JiraDocumentAri,
  JiraDocumentHistoryAri: () => JiraDocumentHistoryAri,
  JiraEntitlementAri: () => JiraEntitlementAri,
  JiraEntityPropertyAri: () => JiraEntityPropertyAri,
  JiraFavouriteAri: () => JiraFavouriteAri,
  JiraFeatureFlagAri: () => JiraFeatureFlagAri,
  JiraFeatureFlagHistoryAri: () => JiraFeatureFlagHistoryAri,
  JiraFilterAri: () => JiraFilterAri,
  JiraFilterEmailSubscriptionAri: () => JiraFilterEmailSubscriptionAri,
  JiraIncidentAri: () => JiraIncidentAri,
  JiraIncidentHistoryAri: () => JiraIncidentHistoryAri,
  JiraIssueAri: () => JiraIssueAri,
  JiraIssueAttachmentAri: () => JiraIssueAttachmentAri,
  JiraIssueCommentAri: () => JiraIssueCommentAri,
  JiraIssueFieldMetadataAri: () => JiraIssueFieldMetadataAri,
  JiraIssueFieldOptionAri: () => JiraIssueFieldOptionAri,
  JiraIssueHistoryAri: () => JiraIssueHistoryAri,
  JiraIssueLinkAri: () => JiraIssueLinkAri,
  JiraIssueLinkTypeAri: () => JiraIssueLinkTypeAri,
  JiraIssueRemoteLinkAri: () => JiraIssueRemoteLinkAri,
  JiraIssueSearchViewAri: () => JiraIssueSearchViewAri,
  JiraIssueStatusAri: () => JiraIssueStatusAri,
  JiraIssueTypeAri: () => JiraIssueTypeAri,
  JiraIssueTypeSchemeAri: () => JiraIssueTypeSchemeAri,
  JiraIssueTypeSchemeMappingAri: () => JiraIssueTypeSchemeMappingAri,
  JiraIssueWorklogAri: () => JiraIssueWorklogAri,
  JiraIssuefieldvalueAri: () => JiraIssuefieldvalueAri,
  JiraNavigationConfigAri: () => JiraNavigationConfigAri,
  JiraNavigationItemAri: () => JiraNavigationItemAri,
  JiraNotificationTypeAri: () => JiraNotificationTypeAri,
  JiraNotificationTypeSchemeAri: () => JiraNotificationTypeSchemeAri,
  JiraNotificationUserPreferenceAri: () => JiraNotificationUserPreferenceAri,
  JiraOperationsWorkspaceAri: () => JiraOperationsWorkspaceAri,
  JiraPermissionSchemeAri: () => JiraPermissionSchemeAri,
  JiraPlanAri: () => JiraPlanAri,
  JiraPlanCrossProjectScenarioVersionAri: () => JiraPlanCrossProjectScenarioVersionAri,
  JiraPlanCrossProjectVersionAri: () => JiraPlanCrossProjectVersionAri,
  JiraPlanScenarioAri: () => JiraPlanScenarioAri,
  JiraPlanScenarioIssueAri: () => JiraPlanScenarioIssueAri,
  JiraPlanScenarioIssueFieldAri: () => JiraPlanScenarioIssueFieldAri,
  JiraPlanScenarioVersionAri: () => JiraPlanScenarioVersionAri,
  JiraPostIncidentReviewAri: () => JiraPostIncidentReviewAri,
  JiraPostIncidentReviewHistoryAri: () => JiraPostIncidentReviewHistoryAri,
  JiraPostIncidentReviewLinkAri: () => JiraPostIncidentReviewLinkAri,
  JiraPriorityAri: () => JiraPriorityAri,
  JiraProductAri: () => JiraProductAri,
  JiraProjectAri: () => JiraProjectAri,
  JiraProjectCategoryAri: () => JiraProjectCategoryAri,
  JiraProjectFeatureAri: () => JiraProjectFeatureAri,
  JiraProjectOverviewAri: () => JiraProjectOverviewAri,
  JiraProjectRoleActorAri: () => JiraProjectRoleActorAri,
  JiraProjectShortcutAri: () => JiraProjectShortcutAri,
  JiraProjectTypeAri: () => JiraProjectTypeAri,
  JiraPullRequestAri: () => JiraPullRequestAri,
  JiraPullRequestHistoryAri: () => JiraPullRequestHistoryAri,
  JiraRemoteLinkAri: () => JiraRemoteLinkAri,
  JiraRemoteLinkHistoryAri: () => JiraRemoteLinkHistoryAri,
  JiraRepositoryAri: () => JiraRepositoryAri,
  JiraResolutionAri: () => JiraResolutionAri,
  JiraResourceUsageMetricAri: () => JiraResourceUsageMetricAri,
  JiraResourceUsageRecommendationAri: () => JiraResourceUsageRecommendationAri,
  JiraRoleAri: () => JiraRoleAri,
  JiraScreenTabAri: () => JiraScreenTabAri,
  JiraSecurityContainerAri: () => JiraSecurityContainerAri,
  JiraSecurityLevelAri: () => JiraSecurityLevelAri,
  JiraSecurityWorkspaceAri: () => JiraSecurityWorkspaceAri,
  JiraSiteAri: () => JiraSiteAri,
  JiraSprintAri: () => JiraSprintAri,
  JiraUserBroadcastMessageAri: () => JiraUserBroadcastMessageAri,
  JiraVersionApproverAri: () => JiraVersionApproverAri,
  JiraVersionAri: () => JiraVersionAri,
  JiraVulnerabilityAri: () => JiraVulnerabilityAri,
  JiraVulnerabilityHistoryAri: () => JiraVulnerabilityHistoryAri,
  JiraWorkflowAri: () => JiraWorkflowAri,
  JiraWorkflowSchemeAri: () => JiraWorkflowSchemeAri,
  JiraWorklogAri: () => JiraWorklogAri,
  JiraWorkspaceAri: () => JiraWorkspaceAri
});
module.exports = __toCommonJS(jira_exports);

// src/errors.ts
var ValidationError = class extends Error {
};

// src/core/rules/cloud-id.ts
function validateCloudId(cloudId, format = new RegExp("^[a-zA-Z0-9\\-]*$")) {
  if (!cloudId.match(format))
    throw new ValidationError(`Invalid cloud ID, expected ID of format ${format}.`);
}

// src/core/rules/platform-qualifier.ts
function validatePlatformQualifier(qualifier) {
  if (qualifier !== "cloud" && qualifier !== "third-party")
    throw new ValidationError(`Identifier must have a qualifier of 'cloud' or 'third-party'. Received: ${qualifier}`);
}

// src/core/rules/qualifier.ts
function validateAtiQualifier(qualifier) {
  if (qualifier !== "ati")
    throw new ValidationError(`ATI must have a qualifier of 'ati'. Received: ${qualifier}`);
}
function validateAriQualifier(qualifier) {
  if (qualifier !== "ari")
    throw new ValidationError(`ARI must have a qualifier of 'ari'. Received: ${qualifier}`);
}

// src/core/rules/resource-id.ts
function validateResourceId(id, format = new RegExp("[!a-zA-Z0-9\\-_.~@:{}=]+(/[!a-zA-Z0-9\\-_.~@:{}=]+)*" /* ANY_RESOURCE_ID */), key = "resourceId") {
  let formatWithCarets = new RegExp(`^${format.source}$`);
  if (!id.match(formatWithCarets))
    throw new ValidationError(`Invalid ${key} - ${id}, expected ID of format ${formatWithCarets}.`);
}

// src/core/rules/resource-id-segments.ts
function validateResourceIdSegments(resourceIdSegmentValues, resourceIdSegmentFormats) {
  Object.entries(resourceIdSegmentValues).forEach(([resourceIdKey, resourceIdValue]) => {
    validateResourceId(resourceIdValue, resourceIdSegmentFormats == null ? void 0 : resourceIdSegmentFormats[resourceIdKey], resourceIdKey);
  });
}

// src/core/rules/resource-owner.ts
function validateResourceOwner(owner, expectedResourceOwner) {
  if (expectedResourceOwner && owner !== expectedResourceOwner)
    throw new ValidationError(`Invalid resource owner - ${owner}, expected ${expectedResourceOwner}.`);
}

// src/core/rules/resource-type.ts
function validateResourceType(type, expectedResourceType) {
  if (expectedResourceType && type !== expectedResourceType)
    throw new ValidationError(`Invalid resource type - ${type}, expected ${expectedResourceType}.`);
}

// src/core/parser/base.ts
var NUMBER_OF_BASE_SEGMENTS = 5, SEGMENT_SEPARATOR = ":", BaseParser = class {
  static getIdentifierSegments(inputStr, numberOfSegmentsRequired) {
    let allSegments = inputStr.split(SEGMENT_SEPARATOR);
    if (allSegments.length < numberOfSegmentsRequired)
      throw new ValidationError(`Input string must have ${numberOfSegmentsRequired} segments.`);
    if (allSegments.length > numberOfSegmentsRequired) {
      let segments = allSegments.slice(0, NUMBER_OF_BASE_SEGMENTS - 1), segmentsForResourceId = allSegments.slice(NUMBER_OF_BASE_SEGMENTS - 1, allSegments.length);
      return [...segments, segmentsForResourceId.join(SEGMENT_SEPARATOR)];
    }
    return allSegments;
  }
};

// src/core/parser/ari.ts
var NUMBER_OF_ARI_SEGMENTS = 5, AriParser = class extends BaseParser {
  static fromString(maybeAri, ariProperties) {
    let segments = this.getIdentifierSegments(maybeAri, NUMBER_OF_ARI_SEGMENTS), [qualifier, platformQualifier, resourceOwner, cloudId, resourceTypeAndId] = segments, [resourceType, ...resourceIdSegments] = resourceTypeAndId.split("/"), maybeAriDerivedProperties = {
      qualifier,
      platformQualifier,
      cloudId,
      resourceOwner,
      resourceType,
      resourceId: resourceIdSegments.join("/"),
      resourceIdSegmentValues: ariProperties != null && ariProperties.resourceIdSlug ? this.ariSegmentValuesFromSlug(
        ariProperties.resourceIdSlug,
        resourceIdSegments.join("/"),
        Object.keys(ariProperties.resourceIdSegmentFormats)
      ) : {}
    };
    return this.fromOpts(maybeAriDerivedProperties, ariProperties);
  }
  static fromOpts(maybeAriOpts, ariProperties) {
    let {
      qualifier = "ari",
      platformQualifier = "cloud",
      resourceOwner,
      cloudId,
      resourceId,
      resourceIdSegmentValues,
      resourceType
    } = maybeAriOpts;
    return validateAriQualifier(qualifier), validatePlatformQualifier(platformQualifier), validateCloudId(maybeAriOpts.cloudId || "", ariProperties == null ? void 0 : ariProperties.cloudId), validateResourceOwner(resourceOwner, ariProperties == null ? void 0 : ariProperties.resourceOwner), validateResourceType(resourceType, ariProperties == null ? void 0 : ariProperties.resourceType), validateResourceIdSegments(resourceIdSegmentValues, ariProperties == null ? void 0 : ariProperties.resourceIdSegmentFormats), {
      qualifier,
      resourceOwner,
      resourceType,
      platformQualifier,
      cloudId,
      resourceId,
      resourceIdSegmentValues
    };
  }
  static ariSegmentValuesFromSlug(slug, incomingSegments, expectedKeys) {
    let regexpResult = new RegExp("^" + slug.replace(/\{(.*?)\}/g, "(?<$1>.*?)") + "$").exec(incomingSegments);
    if (!regexpResult)
      throw new ValidationError(`Segment '${incomingSegments}' don't match expected slug: ${slug}`);
    return expectedKeys.forEach((expectedKey) => {
      var _a;
      if (!((_a = regexpResult.groups) != null && _a[expectedKey]))
        throw new ValidationError(`No value supplied for '${expectedKey}' based on slug ${slug}`);
    }), regexpResult.groups || {};
  }
};

// src/core/parser/ati.ts
var NUMBER_OF_ATI_SEGMENTS = 4, AtiParser = class extends BaseParser {
  static fromString(inputStr, atiOpts) {
    let segments = this.getIdentifierSegments(inputStr, NUMBER_OF_ATI_SEGMENTS), [qualifier = "ati", platformQualifier = "cloud", resourceOwner, resourceType] = segments;
    return validateAtiQualifier(qualifier), validatePlatformQualifier(platformQualifier), validateResourceOwner(resourceOwner, atiOpts == null ? void 0 : atiOpts.resourceOwner), validateResourceType(resourceType, atiOpts == null ? void 0 : atiOpts.resourceType), { platformQualifier, resourceOwner, resourceType };
  }
  static fromOpts(maybeAtiOpts, atiOpts) {
    let { qualifier, platformQualifier, resourceOwner, resourceType } = maybeAtiOpts;
    return validateAtiQualifier(qualifier), validatePlatformQualifier(platformQualifier), validateResourceOwner(resourceOwner, atiOpts == null ? void 0 : atiOpts.resourceOwner), validateResourceType(resourceType, atiOpts == null ? void 0 : atiOpts.resourceType), {
      platformQualifier,
      resourceOwner,
      resourceType
    };
  }
};

// src/ati.ts
var Ati = class _Ati {
  constructor(platformQualifier, resourceOwner, resourceType) {
    this._platformQualifier = platformQualifier, this._resourceOwner = resourceOwner, this._resourceType = resourceType;
  }
  get platformQualifier() {
    return this._platformQualifier;
  }
  get resourceOwner() {
    return this._resourceOwner;
  }
  get resourceType() {
    return this._resourceType;
  }
  static create(opts) {
    return new _Ati(opts.platformQualifier || "cloud", opts.resourceOwner, opts.resourceType);
  }
  static parse(maybeAti, atiOpts) {
    let opts = AtiParser.fromString(maybeAti, atiOpts);
    return new _Ati(opts.platformQualifier, opts.resourceOwner, opts.resourceType);
  }
  toString() {
    return `ati:${this.platformQualifier}:${this.resourceOwner}:${this.resourceType}`;
  }
  toJSON() {
    return this.toString();
  }
  toOpts() {
    return {
      platformQualifier: this._platformQualifier,
      resourceOwner: this._resourceOwner,
      resourceType: this._resourceType
    };
  }
};

// src/core/ari.ts
var Ari = class {
  constructor(opts) {
    this._ati = Ati.create({
      platformQualifier: opts.platformQualifier || "cloud",
      resourceOwner: opts.resourceOwner,
      resourceType: opts.resourceType
    }), this._cloudId = opts.cloudId !== "" ? opts.cloudId : void 0, this._resourceId = opts.resourceId;
  }
  get platformQualifier() {
    return this._ati.platformQualifier;
  }
  get cloudId() {
    return this._cloudId;
  }
  get resourceOwner() {
    return this._ati.resourceOwner;
  }
  get resourceType() {
    return this._ati.resourceType;
  }
  get resourceId() {
    return this._resourceId;
  }
  get ati() {
    return this._ati;
  }
  equals(other) {
    return this.toString() === other.toString();
  }
  toString() {
    return `ari:${this.platformQualifier}:${this.resourceOwner}:${this.cloudId || ""}:${this.resourceType}/${this.resourceId}`;
  }
  toJSON() {
    return this.toString();
  }
  toOpts() {
    return {
      platformQualifier: this.platformQualifier,
      resourceOwner: this.resourceOwner,
      cloudId: this.cloudId,
      resourceType: this.resourceType,
      resourceId: this.resourceId
    };
  }
};

// src/any-ari.ts
var AnyAri = class _AnyAri extends Ari {
  constructor(opts) {
    super(opts);
  }
  static create(ariOpts, ariStaticOpts) {
    let ariOptsWithDefaults = { ...ariOpts, resourceIdSegmentValues: {} }, validatedOpts = AriParser.fromOpts(ariOptsWithDefaults, ariStaticOpts);
    return new _AnyAri(validatedOpts);
  }
  static parse(maybeAri, ariStaticOpts) {
    let validatedOpts = AriParser.fromString(maybeAri, ariStaticOpts);
    return new _AnyAri(validatedOpts);
  }
  static check(maybeAri) {
    try {
      return _AnyAri.parse(maybeAri.toString()), !0;
    } catch (err) {
      return !1;
    }
  }
  asAnyAri() {
    return this;
  }
};

// src/core/registered-ari.ts
var RegisteredAri = class extends Ari {
  static check(maybeAri) {
    try {
      return this.parse(maybeAri.toString()), !0;
    } catch (err) {
      return !1;
    }
  }
  asAnyAri() {
    return AnyAri.parse(this.toString());
  }
};

// src/jira/announcement-banner/types.ts
var JiraAnnouncementBannerAriResourceOwner = "jira", JiraAnnouncementBannerAriResourceType = "announcement-banner";

// src/jira/announcement-banner/manifest.ts
var jiraAnnouncementBannerAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraAnnouncementBannerAriResourceOwner,
  resourceType: JiraAnnouncementBannerAriResourceType,
  resourceIdSlug: "activation/{activationId}/{announcementBannerHashId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    announcementBannerHashId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/announcement-banner/index.ts
var JiraAnnouncementBannerAri = class _JiraAnnouncementBannerAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._announcementBannerHashId = opts.resourceIdSegmentValues.announcementBannerHashId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get announcementBannerHashId() {
    return this._announcementBannerHashId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraAnnouncementBannerAriStaticOpts.qualifier,
      platformQualifier: jiraAnnouncementBannerAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraAnnouncementBannerAriStaticOpts.resourceOwner,
      resourceType: jiraAnnouncementBannerAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.announcementBannerHashId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        announcementBannerHashId: opts.announcementBannerHashId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraAnnouncementBannerAriStaticOpts);
    return new _JiraAnnouncementBannerAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraAnnouncementBannerAriStaticOpts);
    return new _JiraAnnouncementBannerAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      announcementBannerHashId: this.announcementBannerHashId
    };
  }
};

// src/jira/available-fields/types.ts
var JiraAvailableFieldsAriResourceOwner = "jira", JiraAvailableFieldsAriResourceType = "available-fields";

// src/jira/available-fields/manifest.ts
var jiraAvailableFieldsAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraAvailableFieldsAriResourceOwner,
  resourceType: JiraAvailableFieldsAriResourceType,
  resourceIdSlug: "activation/{activationId}/{projectId}/{issueTypeId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    projectId: /[0-9]+/,
    // eslint-disable-line no-useless-escape
    issueTypeId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/available-fields/index.ts
var JiraAvailableFieldsAri = class _JiraAvailableFieldsAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._projectId = opts.resourceIdSegmentValues.projectId, this._issueTypeId = opts.resourceIdSegmentValues.issueTypeId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get projectId() {
    return this._projectId;
  }
  get issueTypeId() {
    return this._issueTypeId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraAvailableFieldsAriStaticOpts.qualifier,
      platformQualifier: jiraAvailableFieldsAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraAvailableFieldsAriStaticOpts.resourceOwner,
      resourceType: jiraAvailableFieldsAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.projectId}/${opts.issueTypeId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        projectId: opts.projectId,
        issueTypeId: opts.issueTypeId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraAvailableFieldsAriStaticOpts);
    return new _JiraAvailableFieldsAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraAvailableFieldsAriStaticOpts);
    return new _JiraAvailableFieldsAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      projectId: this.projectId,
      issueTypeId: this.issueTypeId
    };
  }
};

// src/jira/branch/types.ts
var JiraBranchAriResourceOwner = "jira", JiraBranchAriResourceType = "branch";

// src/jira/branch/manifest.ts
var jiraBranchAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraBranchAriResourceOwner,
  resourceType: JiraBranchAriResourceType,
  resourceIdSlug: "activation/{activationId}/{branchId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    branchId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/branch/index.ts
var JiraBranchAri = class _JiraBranchAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._branchId = opts.resourceIdSegmentValues.branchId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get branchId() {
    return this._branchId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraBranchAriStaticOpts.qualifier,
      platformQualifier: jiraBranchAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraBranchAriStaticOpts.resourceOwner,
      resourceType: jiraBranchAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.branchId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        branchId: opts.branchId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraBranchAriStaticOpts);
    return new _JiraBranchAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraBranchAriStaticOpts);
    return new _JiraBranchAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      branchId: this.branchId
    };
  }
};

// src/jira/branch-history/types.ts
var JiraBranchHistoryAriResourceOwner = "jira", JiraBranchHistoryAriResourceType = "branch-history";

// src/jira/branch-history/manifest.ts
var jiraBranchHistoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraBranchHistoryAriResourceOwner,
  resourceType: JiraBranchHistoryAriResourceType,
  resourceIdSlug: "activation/{activationId}/{branchId}/{updateSequenceNumber}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    branchId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    updateSequenceNumber: /\d+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/branch-history/index.ts
var JiraBranchHistoryAri = class _JiraBranchHistoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._branchId = opts.resourceIdSegmentValues.branchId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get branchId() {
    return this._branchId;
  }
  get updateSequenceNumber() {
    return this._updateSequenceNumber;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraBranchHistoryAriStaticOpts.qualifier,
      platformQualifier: jiraBranchHistoryAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraBranchHistoryAriStaticOpts.resourceOwner,
      resourceType: jiraBranchHistoryAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.branchId}/${opts.updateSequenceNumber}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        branchId: opts.branchId,
        updateSequenceNumber: opts.updateSequenceNumber
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraBranchHistoryAriStaticOpts);
    return new _JiraBranchHistoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraBranchHistoryAriStaticOpts);
    return new _JiraBranchHistoryAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      branchId: this.branchId,
      updateSequenceNumber: this.updateSequenceNumber
    };
  }
};

// src/jira/build/types.ts
var JiraBuildAriResourceOwner = "jira", JiraBuildAriResourceType = "build";

// src/jira/build/manifest.ts
var jiraBuildAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraBuildAriResourceOwner,
  resourceType: JiraBuildAriResourceType,
  resourceIdSlug: "activation/{activationId}/{buildId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    buildId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/build/index.ts
var JiraBuildAri = class _JiraBuildAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._buildId = opts.resourceIdSegmentValues.buildId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get buildId() {
    return this._buildId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraBuildAriStaticOpts.qualifier,
      platformQualifier: jiraBuildAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraBuildAriStaticOpts.resourceOwner,
      resourceType: jiraBuildAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.buildId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        buildId: opts.buildId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraBuildAriStaticOpts);
    return new _JiraBuildAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraBuildAriStaticOpts);
    return new _JiraBuildAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      buildId: this.buildId
    };
  }
};

// src/jira/build-history/types.ts
var JiraBuildHistoryAriResourceOwner = "jira", JiraBuildHistoryAriResourceType = "build-history";

// src/jira/build-history/manifest.ts
var jiraBuildHistoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraBuildHistoryAriResourceOwner,
  resourceType: JiraBuildHistoryAriResourceType,
  resourceIdSlug: "activation/{activationId}/{buildId}/{updateSequenceNumber}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    buildId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    updateSequenceNumber: /\d+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/build-history/index.ts
var JiraBuildHistoryAri = class _JiraBuildHistoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._buildId = opts.resourceIdSegmentValues.buildId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get buildId() {
    return this._buildId;
  }
  get updateSequenceNumber() {
    return this._updateSequenceNumber;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraBuildHistoryAriStaticOpts.qualifier,
      platformQualifier: jiraBuildHistoryAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraBuildHistoryAriStaticOpts.resourceOwner,
      resourceType: jiraBuildHistoryAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.buildId}/${opts.updateSequenceNumber}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        buildId: opts.buildId,
        updateSequenceNumber: opts.updateSequenceNumber
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraBuildHistoryAriStaticOpts);
    return new _JiraBuildHistoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraBuildHistoryAriStaticOpts);
    return new _JiraBuildHistoryAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      buildId: this.buildId,
      updateSequenceNumber: this.updateSequenceNumber
    };
  }
};

// src/jira/bulk-operation-task/types.ts
var JiraBulkOperationTaskAriResourceOwner = "jira", JiraBulkOperationTaskAriResourceType = "bulk-operation-task";

// src/jira/bulk-operation-task/manifest.ts
var jiraBulkOperationTaskAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraBulkOperationTaskAriResourceOwner,
  resourceType: JiraBulkOperationTaskAriResourceType,
  resourceIdSlug: "activation/{activationId}/{taskId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    taskId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/bulk-operation-task/index.ts
var JiraBulkOperationTaskAri = class _JiraBulkOperationTaskAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._taskId = opts.resourceIdSegmentValues.taskId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get taskId() {
    return this._taskId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraBulkOperationTaskAriStaticOpts.qualifier,
      platformQualifier: jiraBulkOperationTaskAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraBulkOperationTaskAriStaticOpts.resourceOwner,
      resourceType: jiraBulkOperationTaskAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.taskId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        taskId: opts.taskId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraBulkOperationTaskAriStaticOpts);
    return new _JiraBulkOperationTaskAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraBulkOperationTaskAriStaticOpts);
    return new _JiraBulkOperationTaskAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      taskId: this.taskId
    };
  }
};

// src/jira/comment/types.ts
var JiraCommentAriResourceOwner = "jira", JiraCommentAriResourceType = "comment";

// src/jira/comment/manifest.ts
var jiraCommentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraCommentAriResourceOwner,
  resourceType: JiraCommentAriResourceType,
  resourceIdSlug: "{commentId}",
  resourceIdSegmentFormats: {
    commentId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/comment/index.ts
var JiraCommentAri = class _JiraCommentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._commentId = opts.resourceIdSegmentValues.commentId;
  }
  get siteId() {
    return this._siteId;
  }
  get commentId() {
    return this._commentId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraCommentAriStaticOpts.qualifier,
      platformQualifier: jiraCommentAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraCommentAriStaticOpts.resourceOwner,
      resourceType: jiraCommentAriStaticOpts.resourceType,
      resourceId: `${opts.commentId}`,
      resourceIdSegmentValues: {
        commentId: opts.commentId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraCommentAriStaticOpts);
    return new _JiraCommentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraCommentAriStaticOpts);
    return new _JiraCommentAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      commentId: this.commentId
    };
  }
};

// src/jira/commit/types.ts
var JiraCommitAriResourceOwner = "jira", JiraCommitAriResourceType = "commit";

// src/jira/commit/manifest.ts
var jiraCommitAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraCommitAriResourceOwner,
  resourceType: JiraCommitAriResourceType,
  resourceIdSlug: "activation/{activationId}/{commitId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    commitId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/commit/index.ts
var JiraCommitAri = class _JiraCommitAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._commitId = opts.resourceIdSegmentValues.commitId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get commitId() {
    return this._commitId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraCommitAriStaticOpts.qualifier,
      platformQualifier: jiraCommitAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraCommitAriStaticOpts.resourceOwner,
      resourceType: jiraCommitAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.commitId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        commitId: opts.commitId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraCommitAriStaticOpts);
    return new _JiraCommitAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraCommitAriStaticOpts);
    return new _JiraCommitAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      commitId: this.commitId
    };
  }
};

// src/jira/component/types.ts
var JiraComponentAriResourceOwner = "jira", JiraComponentAriResourceType = "component";

// src/jira/component/manifest.ts
var jiraComponentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraComponentAriResourceOwner,
  resourceType: JiraComponentAriResourceType,
  resourceIdSlug: "activation/{activationId}/{componentId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    componentId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/component/index.ts
var JiraComponentAri = class _JiraComponentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._componentId = opts.resourceIdSegmentValues.componentId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get componentId() {
    return this._componentId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraComponentAriStaticOpts.qualifier,
      platformQualifier: jiraComponentAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraComponentAriStaticOpts.resourceOwner,
      resourceType: jiraComponentAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.componentId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        componentId: opts.componentId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraComponentAriStaticOpts);
    return new _JiraComponentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraComponentAriStaticOpts);
    return new _JiraComponentAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      componentId: this.componentId
    };
  }
};

// src/jira/connect-app/types.ts
var JiraConnectAppAriResourceOwner = "jira", JiraConnectAppAriResourceType = "connect-app";

// src/jira/connect-app/manifest.ts
var jiraConnectAppAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraConnectAppAriResourceOwner,
  resourceType: JiraConnectAppAriResourceType,
  resourceIdSlug: "activation/{activationId}/{appKey}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    appKey: /[a-zA-Z0-9-._]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/connect-app/index.ts
var JiraConnectAppAri = class _JiraConnectAppAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._appKey = opts.resourceIdSegmentValues.appKey;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get appKey() {
    return this._appKey;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraConnectAppAriStaticOpts.qualifier,
      platformQualifier: jiraConnectAppAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraConnectAppAriStaticOpts.resourceOwner,
      resourceType: jiraConnectAppAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.appKey}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        appKey: opts.appKey
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraConnectAppAriStaticOpts);
    return new _JiraConnectAppAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraConnectAppAriStaticOpts);
    return new _JiraConnectAppAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      appKey: this.appKey
    };
  }
};

// src/jira/dashboard/types.ts
var JiraDashboardAriResourceOwner = "jira", JiraDashboardAriResourceType = "dashboard";

// src/jira/dashboard/manifest.ts
var jiraDashboardAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraDashboardAriResourceOwner,
  resourceType: JiraDashboardAriResourceType,
  resourceIdSlug: "activation/{activationId}/{dashboardId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    dashboardId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/dashboard/index.ts
var JiraDashboardAri = class _JiraDashboardAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._dashboardId = opts.resourceIdSegmentValues.dashboardId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get dashboardId() {
    return this._dashboardId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraDashboardAriStaticOpts.qualifier,
      platformQualifier: jiraDashboardAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraDashboardAriStaticOpts.resourceOwner,
      resourceType: jiraDashboardAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.dashboardId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        dashboardId: opts.dashboardId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraDashboardAriStaticOpts);
    return new _JiraDashboardAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraDashboardAriStaticOpts);
    return new _JiraDashboardAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      dashboardId: this.dashboardId
    };
  }
};

// src/jira/deployment/types.ts
var JiraDeploymentAriResourceOwner = "jira", JiraDeploymentAriResourceType = "deployment";

// src/jira/deployment/manifest.ts
var jiraDeploymentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraDeploymentAriResourceOwner,
  resourceType: JiraDeploymentAriResourceType,
  resourceIdSlug: "activation/{activationId}/{deploymentId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    deploymentId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/deployment/index.ts
var JiraDeploymentAri = class _JiraDeploymentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._deploymentId = opts.resourceIdSegmentValues.deploymentId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get deploymentId() {
    return this._deploymentId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraDeploymentAriStaticOpts.qualifier,
      platformQualifier: jiraDeploymentAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraDeploymentAriStaticOpts.resourceOwner,
      resourceType: jiraDeploymentAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.deploymentId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        deploymentId: opts.deploymentId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraDeploymentAriStaticOpts);
    return new _JiraDeploymentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraDeploymentAriStaticOpts);
    return new _JiraDeploymentAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      deploymentId: this.deploymentId
    };
  }
};

// src/jira/deployment-history/types.ts
var JiraDeploymentHistoryAriResourceOwner = "jira", JiraDeploymentHistoryAriResourceType = "deployment-history";

// src/jira/deployment-history/manifest.ts
var jiraDeploymentHistoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraDeploymentHistoryAriResourceOwner,
  resourceType: JiraDeploymentHistoryAriResourceType,
  resourceIdSlug: "activation/{activationId}/{deploymentId}/{updateSequenceNumber}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    deploymentId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    updateSequenceNumber: /\d+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/deployment-history/index.ts
var JiraDeploymentHistoryAri = class _JiraDeploymentHistoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._deploymentId = opts.resourceIdSegmentValues.deploymentId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get deploymentId() {
    return this._deploymentId;
  }
  get updateSequenceNumber() {
    return this._updateSequenceNumber;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraDeploymentHistoryAriStaticOpts.qualifier,
      platformQualifier: jiraDeploymentHistoryAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraDeploymentHistoryAriStaticOpts.resourceOwner,
      resourceType: jiraDeploymentHistoryAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.deploymentId}/${opts.updateSequenceNumber}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        deploymentId: opts.deploymentId,
        updateSequenceNumber: opts.updateSequenceNumber
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraDeploymentHistoryAriStaticOpts);
    return new _JiraDeploymentHistoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraDeploymentHistoryAriStaticOpts);
    return new _JiraDeploymentHistoryAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      deploymentId: this.deploymentId,
      updateSequenceNumber: this.updateSequenceNumber
    };
  }
};

// src/jira/design/types.ts
var JiraDesignAriResourceOwner = "jira", JiraDesignAriResourceType = "design";

// src/jira/design/manifest.ts
var jiraDesignAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraDesignAriResourceOwner,
  resourceType: JiraDesignAriResourceType,
  resourceIdSlug: "activation/{activationId}/{designId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    designId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/design/index.ts
var JiraDesignAri = class _JiraDesignAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._designId = opts.resourceIdSegmentValues.designId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get designId() {
    return this._designId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraDesignAriStaticOpts.qualifier,
      platformQualifier: jiraDesignAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraDesignAriStaticOpts.resourceOwner,
      resourceType: jiraDesignAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.designId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        designId: opts.designId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraDesignAriStaticOpts);
    return new _JiraDesignAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraDesignAriStaticOpts);
    return new _JiraDesignAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      designId: this.designId
    };
  }
};

// src/jira/design-history/types.ts
var JiraDesignHistoryAriResourceOwner = "jira", JiraDesignHistoryAriResourceType = "design-history";

// src/jira/design-history/manifest.ts
var jiraDesignHistoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraDesignHistoryAriResourceOwner,
  resourceType: JiraDesignHistoryAriResourceType,
  resourceIdSlug: "activation/{activationId}/{designId}/{updateSequenceNumber}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    designId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    updateSequenceNumber: /\d+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/design-history/index.ts
var JiraDesignHistoryAri = class _JiraDesignHistoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._designId = opts.resourceIdSegmentValues.designId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get designId() {
    return this._designId;
  }
  get updateSequenceNumber() {
    return this._updateSequenceNumber;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraDesignHistoryAriStaticOpts.qualifier,
      platformQualifier: jiraDesignHistoryAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraDesignHistoryAriStaticOpts.resourceOwner,
      resourceType: jiraDesignHistoryAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.designId}/${opts.updateSequenceNumber}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        designId: opts.designId,
        updateSequenceNumber: opts.updateSequenceNumber
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraDesignHistoryAriStaticOpts);
    return new _JiraDesignHistoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraDesignHistoryAriStaticOpts);
    return new _JiraDesignHistoryAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      designId: this.designId,
      updateSequenceNumber: this.updateSequenceNumber
    };
  }
};

// src/jira/devops-component/types.ts
var JiraDevopsComponentAriResourceOwner = "jira", JiraDevopsComponentAriResourceType = "devops-component";

// src/jira/devops-component/manifest.ts
var jiraDevopsComponentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraDevopsComponentAriResourceOwner,
  resourceType: JiraDevopsComponentAriResourceType,
  resourceIdSlug: "activation/{activationId}/{devopsComponentId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    devopsComponentId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/devops-component/index.ts
var JiraDevopsComponentAri = class _JiraDevopsComponentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._devopsComponentId = opts.resourceIdSegmentValues.devopsComponentId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get devopsComponentId() {
    return this._devopsComponentId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraDevopsComponentAriStaticOpts.qualifier,
      platformQualifier: jiraDevopsComponentAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraDevopsComponentAriStaticOpts.resourceOwner,
      resourceType: jiraDevopsComponentAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.devopsComponentId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        devopsComponentId: opts.devopsComponentId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraDevopsComponentAriStaticOpts);
    return new _JiraDevopsComponentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraDevopsComponentAriStaticOpts);
    return new _JiraDevopsComponentAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      devopsComponentId: this.devopsComponentId
    };
  }
};

// src/jira/document/types.ts
var JiraDocumentAriResourceOwner = "jira", JiraDocumentAriResourceType = "document";

// src/jira/document/manifest.ts
var jiraDocumentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraDocumentAriResourceOwner,
  resourceType: JiraDocumentAriResourceType,
  resourceIdSlug: "activation/{activationId}/{documentId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    documentId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/document/index.ts
var JiraDocumentAri = class _JiraDocumentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._documentId = opts.resourceIdSegmentValues.documentId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get documentId() {
    return this._documentId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraDocumentAriStaticOpts.qualifier,
      platformQualifier: jiraDocumentAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraDocumentAriStaticOpts.resourceOwner,
      resourceType: jiraDocumentAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.documentId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        documentId: opts.documentId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraDocumentAriStaticOpts);
    return new _JiraDocumentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraDocumentAriStaticOpts);
    return new _JiraDocumentAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      documentId: this.documentId
    };
  }
};

// src/jira/document-history/types.ts
var JiraDocumentHistoryAriResourceOwner = "jira", JiraDocumentHistoryAriResourceType = "document-history";

// src/jira/document-history/manifest.ts
var jiraDocumentHistoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraDocumentHistoryAriResourceOwner,
  resourceType: JiraDocumentHistoryAriResourceType,
  resourceIdSlug: "activation/{activationId}/{documentId}/{updateSequenceNumber}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    documentId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    updateSequenceNumber: /\d+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/document-history/index.ts
var JiraDocumentHistoryAri = class _JiraDocumentHistoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._documentId = opts.resourceIdSegmentValues.documentId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get documentId() {
    return this._documentId;
  }
  get updateSequenceNumber() {
    return this._updateSequenceNumber;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraDocumentHistoryAriStaticOpts.qualifier,
      platformQualifier: jiraDocumentHistoryAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraDocumentHistoryAriStaticOpts.resourceOwner,
      resourceType: jiraDocumentHistoryAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.documentId}/${opts.updateSequenceNumber}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        documentId: opts.documentId,
        updateSequenceNumber: opts.updateSequenceNumber
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraDocumentHistoryAriStaticOpts);
    return new _JiraDocumentHistoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraDocumentHistoryAriStaticOpts);
    return new _JiraDocumentHistoryAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      documentId: this.documentId,
      updateSequenceNumber: this.updateSequenceNumber
    };
  }
};

// src/jira/entitlement/types.ts
var JiraEntitlementAriResourceOwner = "jira", JiraEntitlementAriResourceType = "entitlement";

// src/jira/entitlement/manifest.ts
var jiraEntitlementAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraEntitlementAriResourceOwner,
  resourceType: JiraEntitlementAriResourceType,
  resourceIdSlug: "activation/{activationId}/{entitlementId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    entitlementId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/entitlement/index.ts
var JiraEntitlementAri = class _JiraEntitlementAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._entitlementId = opts.resourceIdSegmentValues.entitlementId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get entitlementId() {
    return this._entitlementId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraEntitlementAriStaticOpts.qualifier,
      platformQualifier: jiraEntitlementAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraEntitlementAriStaticOpts.resourceOwner,
      resourceType: jiraEntitlementAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.entitlementId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        entitlementId: opts.entitlementId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraEntitlementAriStaticOpts);
    return new _JiraEntitlementAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraEntitlementAriStaticOpts);
    return new _JiraEntitlementAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      entitlementId: this.entitlementId
    };
  }
};

// src/jira/entity-property/types.ts
var JiraEntityPropertyAriResourceOwner = "jira", JiraEntityPropertyAriResourceType = "entity-property";

// src/jira/entity-property/manifest.ts
var jiraEntityPropertyAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraEntityPropertyAriResourceOwner,
  resourceType: JiraEntityPropertyAriResourceType,
  resourceIdSlug: "activation/{activationId}/{entityType}/{entityId}/{propertyKey}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    entityType: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/,
    // eslint-disable-line no-useless-escape
    entityId: /[0-9]+/,
    // eslint-disable-line no-useless-escape
    propertyKey: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/entity-property/index.ts
var JiraEntityPropertyAri = class _JiraEntityPropertyAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._entityType = opts.resourceIdSegmentValues.entityType, this._entityId = opts.resourceIdSegmentValues.entityId, this._propertyKey = opts.resourceIdSegmentValues.propertyKey;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get entityType() {
    return this._entityType;
  }
  get entityId() {
    return this._entityId;
  }
  get propertyKey() {
    return this._propertyKey;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraEntityPropertyAriStaticOpts.qualifier,
      platformQualifier: jiraEntityPropertyAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraEntityPropertyAriStaticOpts.resourceOwner,
      resourceType: jiraEntityPropertyAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.entityType}/${opts.entityId}/${opts.propertyKey}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        entityType: opts.entityType,
        entityId: opts.entityId,
        propertyKey: opts.propertyKey
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraEntityPropertyAriStaticOpts);
    return new _JiraEntityPropertyAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraEntityPropertyAriStaticOpts);
    return new _JiraEntityPropertyAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      entityType: this.entityType,
      entityId: this.entityId,
      propertyKey: this.propertyKey
    };
  }
};

// src/jira/favourite/types.ts
var JiraFavouriteAriResourceOwner = "jira", JiraFavouriteAriResourceType = "favourite";

// src/jira/favourite/manifest.ts
var jiraFavouriteAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraFavouriteAriResourceOwner,
  resourceType: JiraFavouriteAriResourceType,
  resourceIdSlug: "activation/{activationId}/{favouriteId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    favouriteId: /[a-zA-Z0-9_\|\-\:~]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/favourite/index.ts
var JiraFavouriteAri = class _JiraFavouriteAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._favouriteId = opts.resourceIdSegmentValues.favouriteId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get favouriteId() {
    return this._favouriteId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraFavouriteAriStaticOpts.qualifier,
      platformQualifier: jiraFavouriteAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraFavouriteAriStaticOpts.resourceOwner,
      resourceType: jiraFavouriteAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.favouriteId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        favouriteId: opts.favouriteId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraFavouriteAriStaticOpts);
    return new _JiraFavouriteAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraFavouriteAriStaticOpts);
    return new _JiraFavouriteAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      favouriteId: this.favouriteId
    };
  }
};

// src/jira/feature-flag/types.ts
var JiraFeatureFlagAriResourceOwner = "jira", JiraFeatureFlagAriResourceType = "feature-flag";

// src/jira/feature-flag/manifest.ts
var jiraFeatureFlagAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraFeatureFlagAriResourceOwner,
  resourceType: JiraFeatureFlagAriResourceType,
  resourceIdSlug: "activation/{activationId}/{featureFlagId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    featureFlagId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/feature-flag/index.ts
var JiraFeatureFlagAri = class _JiraFeatureFlagAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._featureFlagId = opts.resourceIdSegmentValues.featureFlagId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get featureFlagId() {
    return this._featureFlagId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraFeatureFlagAriStaticOpts.qualifier,
      platformQualifier: jiraFeatureFlagAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraFeatureFlagAriStaticOpts.resourceOwner,
      resourceType: jiraFeatureFlagAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.featureFlagId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        featureFlagId: opts.featureFlagId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraFeatureFlagAriStaticOpts);
    return new _JiraFeatureFlagAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraFeatureFlagAriStaticOpts);
    return new _JiraFeatureFlagAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      featureFlagId: this.featureFlagId
    };
  }
};

// src/jira/feature-flag-history/types.ts
var JiraFeatureFlagHistoryAriResourceOwner = "jira", JiraFeatureFlagHistoryAriResourceType = "feature-flag-history";

// src/jira/feature-flag-history/manifest.ts
var jiraFeatureFlagHistoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraFeatureFlagHistoryAriResourceOwner,
  resourceType: JiraFeatureFlagHistoryAriResourceType,
  resourceIdSlug: "activation/{activationId}/{featureFlagId}/{updateSequenceNumber}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    featureFlagId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    updateSequenceNumber: /\d+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/feature-flag-history/index.ts
var JiraFeatureFlagHistoryAri = class _JiraFeatureFlagHistoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._featureFlagId = opts.resourceIdSegmentValues.featureFlagId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get featureFlagId() {
    return this._featureFlagId;
  }
  get updateSequenceNumber() {
    return this._updateSequenceNumber;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraFeatureFlagHistoryAriStaticOpts.qualifier,
      platformQualifier: jiraFeatureFlagHistoryAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraFeatureFlagHistoryAriStaticOpts.resourceOwner,
      resourceType: jiraFeatureFlagHistoryAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.featureFlagId}/${opts.updateSequenceNumber}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        featureFlagId: opts.featureFlagId,
        updateSequenceNumber: opts.updateSequenceNumber
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraFeatureFlagHistoryAriStaticOpts);
    return new _JiraFeatureFlagHistoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraFeatureFlagHistoryAriStaticOpts);
    return new _JiraFeatureFlagHistoryAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      featureFlagId: this.featureFlagId,
      updateSequenceNumber: this.updateSequenceNumber
    };
  }
};

// src/jira/filter/types.ts
var JiraFilterAriResourceOwner = "jira", JiraFilterAriResourceType = "filter";

// src/jira/filter/manifest.ts
var jiraFilterAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraFilterAriResourceOwner,
  resourceType: JiraFilterAriResourceType,
  resourceIdSlug: "activation/{activationId}/{filterId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    filterId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/filter/index.ts
var JiraFilterAri = class _JiraFilterAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._filterId = opts.resourceIdSegmentValues.filterId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get filterId() {
    return this._filterId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraFilterAriStaticOpts.qualifier,
      platformQualifier: jiraFilterAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraFilterAriStaticOpts.resourceOwner,
      resourceType: jiraFilterAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.filterId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        filterId: opts.filterId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraFilterAriStaticOpts);
    return new _JiraFilterAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraFilterAriStaticOpts);
    return new _JiraFilterAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      filterId: this.filterId
    };
  }
};

// src/jira/filter-email-subscription/types.ts
var JiraFilterEmailSubscriptionAriResourceOwner = "jira", JiraFilterEmailSubscriptionAriResourceType = "filter-email-subscription";

// src/jira/filter-email-subscription/manifest.ts
var jiraFilterEmailSubscriptionAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraFilterEmailSubscriptionAriResourceOwner,
  resourceType: JiraFilterEmailSubscriptionAriResourceType,
  resourceIdSlug: "activation/{activationId}/{filterEmailSubscriptionId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    filterEmailSubscriptionId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/filter-email-subscription/index.ts
var JiraFilterEmailSubscriptionAri = class _JiraFilterEmailSubscriptionAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._filterEmailSubscriptionId = opts.resourceIdSegmentValues.filterEmailSubscriptionId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get filterEmailSubscriptionId() {
    return this._filterEmailSubscriptionId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraFilterEmailSubscriptionAriStaticOpts.qualifier,
      platformQualifier: jiraFilterEmailSubscriptionAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraFilterEmailSubscriptionAriStaticOpts.resourceOwner,
      resourceType: jiraFilterEmailSubscriptionAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.filterEmailSubscriptionId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        filterEmailSubscriptionId: opts.filterEmailSubscriptionId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraFilterEmailSubscriptionAriStaticOpts);
    return new _JiraFilterEmailSubscriptionAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraFilterEmailSubscriptionAriStaticOpts);
    return new _JiraFilterEmailSubscriptionAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      filterEmailSubscriptionId: this.filterEmailSubscriptionId
    };
  }
};

// src/jira/incident/types.ts
var JiraIncidentAriResourceOwner = "jira", JiraIncidentAriResourceType = "incident";

// src/jira/incident/manifest.ts
var jiraIncidentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraIncidentAriResourceOwner,
  resourceType: JiraIncidentAriResourceType,
  resourceIdSlug: "activation/{activationId}/{incidentId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    incidentId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/incident/index.ts
var JiraIncidentAri = class _JiraIncidentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._incidentId = opts.resourceIdSegmentValues.incidentId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get incidentId() {
    return this._incidentId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraIncidentAriStaticOpts.qualifier,
      platformQualifier: jiraIncidentAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraIncidentAriStaticOpts.resourceOwner,
      resourceType: jiraIncidentAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.incidentId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        incidentId: opts.incidentId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraIncidentAriStaticOpts);
    return new _JiraIncidentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraIncidentAriStaticOpts);
    return new _JiraIncidentAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      incidentId: this.incidentId
    };
  }
};

// src/jira/incident-history/types.ts
var JiraIncidentHistoryAriResourceOwner = "jira", JiraIncidentHistoryAriResourceType = "incident-history";

// src/jira/incident-history/manifest.ts
var jiraIncidentHistoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraIncidentHistoryAriResourceOwner,
  resourceType: JiraIncidentHistoryAriResourceType,
  resourceIdSlug: "activation/{activationId}/{incidentId}/{updateSequenceNumber}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    incidentId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    updateSequenceNumber: /\d+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/incident-history/index.ts
var JiraIncidentHistoryAri = class _JiraIncidentHistoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._incidentId = opts.resourceIdSegmentValues.incidentId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get incidentId() {
    return this._incidentId;
  }
  get updateSequenceNumber() {
    return this._updateSequenceNumber;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraIncidentHistoryAriStaticOpts.qualifier,
      platformQualifier: jiraIncidentHistoryAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraIncidentHistoryAriStaticOpts.resourceOwner,
      resourceType: jiraIncidentHistoryAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.incidentId}/${opts.updateSequenceNumber}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        incidentId: opts.incidentId,
        updateSequenceNumber: opts.updateSequenceNumber
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraIncidentHistoryAriStaticOpts);
    return new _JiraIncidentHistoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraIncidentHistoryAriStaticOpts);
    return new _JiraIncidentHistoryAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      incidentId: this.incidentId,
      updateSequenceNumber: this.updateSequenceNumber
    };
  }
};

// src/jira/issue/types.ts
var JiraIssueAriResourceOwner = "jira", JiraIssueAriResourceType = "issue";

// src/jira/issue/manifest.ts
var jiraIssueAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraIssueAriResourceOwner,
  resourceType: JiraIssueAriResourceType,
  resourceIdSlug: "{issueId}",
  resourceIdSegmentFormats: {
    issueId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/issue/index.ts
var JiraIssueAri = class _JiraIssueAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._issueId = opts.resourceIdSegmentValues.issueId;
  }
  get siteId() {
    return this._siteId;
  }
  get issueId() {
    return this._issueId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraIssueAriStaticOpts.qualifier,
      platformQualifier: jiraIssueAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraIssueAriStaticOpts.resourceOwner,
      resourceType: jiraIssueAriStaticOpts.resourceType,
      resourceId: `${opts.issueId}`,
      resourceIdSegmentValues: {
        issueId: opts.issueId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraIssueAriStaticOpts);
    return new _JiraIssueAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraIssueAriStaticOpts);
    return new _JiraIssueAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      issueId: this.issueId
    };
  }
};

// src/jira/issue-attachment/types.ts
var JiraIssueAttachmentAriResourceOwner = "jira", JiraIssueAttachmentAriResourceType = "issue-attachment";

// src/jira/issue-attachment/manifest.ts
var jiraIssueAttachmentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraIssueAttachmentAriResourceOwner,
  resourceType: JiraIssueAttachmentAriResourceType,
  resourceIdSlug: "{issueId}/{attachmentId}",
  resourceIdSegmentFormats: {
    issueId: /[0-9]+/,
    // eslint-disable-line no-useless-escape
    attachmentId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/issue-attachment/index.ts
var JiraIssueAttachmentAri = class _JiraIssueAttachmentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._issueId = opts.resourceIdSegmentValues.issueId, this._attachmentId = opts.resourceIdSegmentValues.attachmentId;
  }
  get siteId() {
    return this._siteId;
  }
  get issueId() {
    return this._issueId;
  }
  get attachmentId() {
    return this._attachmentId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraIssueAttachmentAriStaticOpts.qualifier,
      platformQualifier: jiraIssueAttachmentAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraIssueAttachmentAriStaticOpts.resourceOwner,
      resourceType: jiraIssueAttachmentAriStaticOpts.resourceType,
      resourceId: `${opts.issueId}/${opts.attachmentId}`,
      resourceIdSegmentValues: {
        issueId: opts.issueId,
        attachmentId: opts.attachmentId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraIssueAttachmentAriStaticOpts);
    return new _JiraIssueAttachmentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraIssueAttachmentAriStaticOpts);
    return new _JiraIssueAttachmentAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      issueId: this.issueId,
      attachmentId: this.attachmentId
    };
  }
};

// src/jira/issue-comment/types.ts
var JiraIssueCommentAriResourceOwner = "jira", JiraIssueCommentAriResourceType = "issue-comment";

// src/jira/issue-comment/manifest.ts
var jiraIssueCommentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraIssueCommentAriResourceOwner,
  resourceType: JiraIssueCommentAriResourceType,
  resourceIdSlug: "{issueId}/{commentId}",
  resourceIdSegmentFormats: {
    issueId: /[0-9]+/,
    // eslint-disable-line no-useless-escape
    commentId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/issue-comment/index.ts
var JiraIssueCommentAri = class _JiraIssueCommentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._issueId = opts.resourceIdSegmentValues.issueId, this._commentId = opts.resourceIdSegmentValues.commentId;
  }
  get siteId() {
    return this._siteId;
  }
  get issueId() {
    return this._issueId;
  }
  get commentId() {
    return this._commentId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraIssueCommentAriStaticOpts.qualifier,
      platformQualifier: jiraIssueCommentAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraIssueCommentAriStaticOpts.resourceOwner,
      resourceType: jiraIssueCommentAriStaticOpts.resourceType,
      resourceId: `${opts.issueId}/${opts.commentId}`,
      resourceIdSegmentValues: {
        issueId: opts.issueId,
        commentId: opts.commentId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraIssueCommentAriStaticOpts);
    return new _JiraIssueCommentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraIssueCommentAriStaticOpts);
    return new _JiraIssueCommentAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      issueId: this.issueId,
      commentId: this.commentId
    };
  }
};

// src/jira/issue-field-metadata/types.ts
var JiraIssueFieldMetadataAriResourceOwner = "jira", JiraIssueFieldMetadataAriResourceType = "issue-field-metadata";

// src/jira/issue-field-metadata/manifest.ts
var jiraIssueFieldMetadataAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraIssueFieldMetadataAriResourceOwner,
  resourceType: JiraIssueFieldMetadataAriResourceType,
  resourceIdSlug: "activation/{activationId}/{fieldId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    fieldId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/issue-field-metadata/index.ts
var JiraIssueFieldMetadataAri = class _JiraIssueFieldMetadataAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._fieldId = opts.resourceIdSegmentValues.fieldId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get fieldId() {
    return this._fieldId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraIssueFieldMetadataAriStaticOpts.qualifier,
      platformQualifier: jiraIssueFieldMetadataAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraIssueFieldMetadataAriStaticOpts.resourceOwner,
      resourceType: jiraIssueFieldMetadataAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.fieldId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        fieldId: opts.fieldId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraIssueFieldMetadataAriStaticOpts);
    return new _JiraIssueFieldMetadataAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraIssueFieldMetadataAriStaticOpts);
    return new _JiraIssueFieldMetadataAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      fieldId: this.fieldId
    };
  }
};

// src/jira/issue-field-option/types.ts
var JiraIssueFieldOptionAriResourceOwner = "jira", JiraIssueFieldOptionAriResourceType = "issue-field-option";

// src/jira/issue-field-option/manifest.ts
var jiraIssueFieldOptionAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraIssueFieldOptionAriResourceOwner,
  resourceType: JiraIssueFieldOptionAriResourceType,
  resourceIdSlug: "activation/{activationId}/{fieldId}/{optionId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    fieldId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/,
    // eslint-disable-line no-useless-escape
    optionId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/issue-field-option/index.ts
var JiraIssueFieldOptionAri = class _JiraIssueFieldOptionAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._fieldId = opts.resourceIdSegmentValues.fieldId, this._optionId = opts.resourceIdSegmentValues.optionId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get fieldId() {
    return this._fieldId;
  }
  get optionId() {
    return this._optionId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraIssueFieldOptionAriStaticOpts.qualifier,
      platformQualifier: jiraIssueFieldOptionAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraIssueFieldOptionAriStaticOpts.resourceOwner,
      resourceType: jiraIssueFieldOptionAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.fieldId}/${opts.optionId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        fieldId: opts.fieldId,
        optionId: opts.optionId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraIssueFieldOptionAriStaticOpts);
    return new _JiraIssueFieldOptionAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraIssueFieldOptionAriStaticOpts);
    return new _JiraIssueFieldOptionAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      fieldId: this.fieldId,
      optionId: this.optionId
    };
  }
};

// src/jira/issue-history/types.ts
var JiraIssueHistoryAriResourceOwner = "jira", JiraIssueHistoryAriResourceType = "issue-history";

// src/jira/issue-history/manifest.ts
var jiraIssueHistoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraIssueHistoryAriResourceOwner,
  resourceType: JiraIssueHistoryAriResourceType,
  resourceIdSlug: "activation/{activationId}/{issueId}/{changeGroupId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    issueId: /[0-9]+/,
    // eslint-disable-line no-useless-escape
    changeGroupId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/issue-history/index.ts
var JiraIssueHistoryAri = class _JiraIssueHistoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._issueId = opts.resourceIdSegmentValues.issueId, this._changeGroupId = opts.resourceIdSegmentValues.changeGroupId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get issueId() {
    return this._issueId;
  }
  get changeGroupId() {
    return this._changeGroupId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraIssueHistoryAriStaticOpts.qualifier,
      platformQualifier: jiraIssueHistoryAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraIssueHistoryAriStaticOpts.resourceOwner,
      resourceType: jiraIssueHistoryAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.issueId}/${opts.changeGroupId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        issueId: opts.issueId,
        changeGroupId: opts.changeGroupId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraIssueHistoryAriStaticOpts);
    return new _JiraIssueHistoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraIssueHistoryAriStaticOpts);
    return new _JiraIssueHistoryAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      issueId: this.issueId,
      changeGroupId: this.changeGroupId
    };
  }
};

// src/jira/issue-link/types.ts
var JiraIssueLinkAriResourceOwner = "jira", JiraIssueLinkAriResourceType = "issue-link";

// src/jira/issue-link/manifest.ts
var jiraIssueLinkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraIssueLinkAriResourceOwner,
  resourceType: JiraIssueLinkAriResourceType,
  resourceIdSlug: "activation/{activationId}/{issueId}/{linkId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    issueId: /[0-9]+/,
    // eslint-disable-line no-useless-escape
    linkId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/issue-link/index.ts
var JiraIssueLinkAri = class _JiraIssueLinkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._issueId = opts.resourceIdSegmentValues.issueId, this._linkId = opts.resourceIdSegmentValues.linkId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get issueId() {
    return this._issueId;
  }
  get linkId() {
    return this._linkId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraIssueLinkAriStaticOpts.qualifier,
      platformQualifier: jiraIssueLinkAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraIssueLinkAriStaticOpts.resourceOwner,
      resourceType: jiraIssueLinkAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.issueId}/${opts.linkId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        issueId: opts.issueId,
        linkId: opts.linkId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraIssueLinkAriStaticOpts);
    return new _JiraIssueLinkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraIssueLinkAriStaticOpts);
    return new _JiraIssueLinkAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      issueId: this.issueId,
      linkId: this.linkId
    };
  }
};

// src/jira/issue-link-type/types.ts
var JiraIssueLinkTypeAriResourceOwner = "jira", JiraIssueLinkTypeAriResourceType = "issue-link-type";

// src/jira/issue-link-type/manifest.ts
var jiraIssueLinkTypeAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraIssueLinkTypeAriResourceOwner,
  resourceType: JiraIssueLinkTypeAriResourceType,
  resourceIdSlug: "activation/{activationId}/{issueLinkTypeId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    issueLinkTypeId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/issue-link-type/index.ts
var JiraIssueLinkTypeAri = class _JiraIssueLinkTypeAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._issueLinkTypeId = opts.resourceIdSegmentValues.issueLinkTypeId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get issueLinkTypeId() {
    return this._issueLinkTypeId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraIssueLinkTypeAriStaticOpts.qualifier,
      platformQualifier: jiraIssueLinkTypeAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraIssueLinkTypeAriStaticOpts.resourceOwner,
      resourceType: jiraIssueLinkTypeAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.issueLinkTypeId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        issueLinkTypeId: opts.issueLinkTypeId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraIssueLinkTypeAriStaticOpts);
    return new _JiraIssueLinkTypeAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraIssueLinkTypeAriStaticOpts);
    return new _JiraIssueLinkTypeAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      issueLinkTypeId: this.issueLinkTypeId
    };
  }
};

// src/jira/issue-remote-link/types.ts
var JiraIssueRemoteLinkAriResourceOwner = "jira", JiraIssueRemoteLinkAriResourceType = "issue-remote-link";

// src/jira/issue-remote-link/manifest.ts
var jiraIssueRemoteLinkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraIssueRemoteLinkAriResourceOwner,
  resourceType: JiraIssueRemoteLinkAriResourceType,
  resourceIdSlug: "activation/{activationId}/{issueId}/{linkId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    issueId: /[0-9]+/,
    // eslint-disable-line no-useless-escape
    linkId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/issue-remote-link/index.ts
var JiraIssueRemoteLinkAri = class _JiraIssueRemoteLinkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._issueId = opts.resourceIdSegmentValues.issueId, this._linkId = opts.resourceIdSegmentValues.linkId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get issueId() {
    return this._issueId;
  }
  get linkId() {
    return this._linkId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraIssueRemoteLinkAriStaticOpts.qualifier,
      platformQualifier: jiraIssueRemoteLinkAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraIssueRemoteLinkAriStaticOpts.resourceOwner,
      resourceType: jiraIssueRemoteLinkAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.issueId}/${opts.linkId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        issueId: opts.issueId,
        linkId: opts.linkId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraIssueRemoteLinkAriStaticOpts);
    return new _JiraIssueRemoteLinkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraIssueRemoteLinkAriStaticOpts);
    return new _JiraIssueRemoteLinkAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      issueId: this.issueId,
      linkId: this.linkId
    };
  }
};

// src/jira/issue-search-view/types.ts
var JiraIssueSearchViewAriResourceOwner = "jira", JiraIssueSearchViewAriResourceType = "issue-search-view";

// src/jira/issue-search-view/manifest.ts
var jiraIssueSearchViewAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraIssueSearchViewAriResourceOwner,
  resourceType: JiraIssueSearchViewAriResourceType,
  resourceIdSlug: "activation/{activationId}/{namespaceId}/{viewId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    namespaceId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/,
    // eslint-disable-line no-useless-escape
    viewId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/issue-search-view/index.ts
var JiraIssueSearchViewAri = class _JiraIssueSearchViewAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._namespaceId = opts.resourceIdSegmentValues.namespaceId, this._viewId = opts.resourceIdSegmentValues.viewId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get namespaceId() {
    return this._namespaceId;
  }
  get viewId() {
    return this._viewId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraIssueSearchViewAriStaticOpts.qualifier,
      platformQualifier: jiraIssueSearchViewAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraIssueSearchViewAriStaticOpts.resourceOwner,
      resourceType: jiraIssueSearchViewAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.namespaceId}/${opts.viewId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        namespaceId: opts.namespaceId,
        viewId: opts.viewId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraIssueSearchViewAriStaticOpts);
    return new _JiraIssueSearchViewAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraIssueSearchViewAriStaticOpts);
    return new _JiraIssueSearchViewAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      namespaceId: this.namespaceId,
      viewId: this.viewId
    };
  }
};

// src/jira/issue-status/types.ts
var JiraIssueStatusAriResourceOwner = "jira", JiraIssueStatusAriResourceType = "issue-status";

// src/jira/issue-status/manifest.ts
var jiraIssueStatusAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraIssueStatusAriResourceOwner,
  resourceType: JiraIssueStatusAriResourceType,
  resourceIdSlug: "activation/{activationId}/{issuestatusId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    issuestatusId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/issue-status/index.ts
var JiraIssueStatusAri = class _JiraIssueStatusAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._issuestatusId = opts.resourceIdSegmentValues.issuestatusId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get issuestatusId() {
    return this._issuestatusId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraIssueStatusAriStaticOpts.qualifier,
      platformQualifier: jiraIssueStatusAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraIssueStatusAriStaticOpts.resourceOwner,
      resourceType: jiraIssueStatusAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.issuestatusId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        issuestatusId: opts.issuestatusId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraIssueStatusAriStaticOpts);
    return new _JiraIssueStatusAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraIssueStatusAriStaticOpts);
    return new _JiraIssueStatusAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      issuestatusId: this.issuestatusId
    };
  }
};

// src/jira/issue-type/types.ts
var JiraIssueTypeAriResourceOwner = "jira", JiraIssueTypeAriResourceType = "issue-type";

// src/jira/issue-type/manifest.ts
var jiraIssueTypeAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraIssueTypeAriResourceOwner,
  resourceType: JiraIssueTypeAriResourceType,
  resourceIdSlug: "{issueTypeId}",
  resourceIdSegmentFormats: {
    issueTypeId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/issue-type/index.ts
var JiraIssueTypeAri = class _JiraIssueTypeAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._issueTypeId = opts.resourceIdSegmentValues.issueTypeId;
  }
  get siteId() {
    return this._siteId;
  }
  get issueTypeId() {
    return this._issueTypeId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraIssueTypeAriStaticOpts.qualifier,
      platformQualifier: jiraIssueTypeAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraIssueTypeAriStaticOpts.resourceOwner,
      resourceType: jiraIssueTypeAriStaticOpts.resourceType,
      resourceId: `${opts.issueTypeId}`,
      resourceIdSegmentValues: {
        issueTypeId: opts.issueTypeId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraIssueTypeAriStaticOpts);
    return new _JiraIssueTypeAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraIssueTypeAriStaticOpts);
    return new _JiraIssueTypeAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      issueTypeId: this.issueTypeId
    };
  }
};

// src/jira/issue-type-scheme/types.ts
var JiraIssueTypeSchemeAriResourceOwner = "jira", JiraIssueTypeSchemeAriResourceType = "issue-type-scheme";

// src/jira/issue-type-scheme/manifest.ts
var jiraIssueTypeSchemeAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraIssueTypeSchemeAriResourceOwner,
  resourceType: JiraIssueTypeSchemeAriResourceType,
  resourceIdSlug: "activation/{activationId}/{issueTypeSchemeId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    issueTypeSchemeId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/issue-type-scheme/index.ts
var JiraIssueTypeSchemeAri = class _JiraIssueTypeSchemeAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._issueTypeSchemeId = opts.resourceIdSegmentValues.issueTypeSchemeId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get issueTypeSchemeId() {
    return this._issueTypeSchemeId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraIssueTypeSchemeAriStaticOpts.qualifier,
      platformQualifier: jiraIssueTypeSchemeAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraIssueTypeSchemeAriStaticOpts.resourceOwner,
      resourceType: jiraIssueTypeSchemeAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.issueTypeSchemeId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        issueTypeSchemeId: opts.issueTypeSchemeId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraIssueTypeSchemeAriStaticOpts);
    return new _JiraIssueTypeSchemeAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraIssueTypeSchemeAriStaticOpts);
    return new _JiraIssueTypeSchemeAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      issueTypeSchemeId: this.issueTypeSchemeId
    };
  }
};

// src/jira/issue-type-scheme-mapping/types.ts
var JiraIssueTypeSchemeMappingAriResourceOwner = "jira", JiraIssueTypeSchemeMappingAriResourceType = "issue-type-scheme-mapping";

// src/jira/issue-type-scheme-mapping/manifest.ts
var jiraIssueTypeSchemeMappingAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraIssueTypeSchemeMappingAriResourceOwner,
  resourceType: JiraIssueTypeSchemeMappingAriResourceType,
  resourceIdSlug: "activation/{activationId}/{issueTypeSchemeId}/{issueTypeId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    issueTypeSchemeId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/,
    // eslint-disable-line no-useless-escape
    issueTypeId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/issue-type-scheme-mapping/index.ts
var JiraIssueTypeSchemeMappingAri = class _JiraIssueTypeSchemeMappingAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._issueTypeSchemeId = opts.resourceIdSegmentValues.issueTypeSchemeId, this._issueTypeId = opts.resourceIdSegmentValues.issueTypeId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get issueTypeSchemeId() {
    return this._issueTypeSchemeId;
  }
  get issueTypeId() {
    return this._issueTypeId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraIssueTypeSchemeMappingAriStaticOpts.qualifier,
      platformQualifier: jiraIssueTypeSchemeMappingAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraIssueTypeSchemeMappingAriStaticOpts.resourceOwner,
      resourceType: jiraIssueTypeSchemeMappingAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.issueTypeSchemeId}/${opts.issueTypeId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        issueTypeSchemeId: opts.issueTypeSchemeId,
        issueTypeId: opts.issueTypeId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraIssueTypeSchemeMappingAriStaticOpts);
    return new _JiraIssueTypeSchemeMappingAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraIssueTypeSchemeMappingAriStaticOpts);
    return new _JiraIssueTypeSchemeMappingAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      issueTypeSchemeId: this.issueTypeSchemeId,
      issueTypeId: this.issueTypeId
    };
  }
};

// src/jira/issue-worklog/types.ts
var JiraIssueWorklogAriResourceOwner = "jira", JiraIssueWorklogAriResourceType = "issue-worklog";

// src/jira/issue-worklog/manifest.ts
var jiraIssueWorklogAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraIssueWorklogAriResourceOwner,
  resourceType: JiraIssueWorklogAriResourceType,
  resourceIdSlug: "{issueId}/{worklogId}",
  resourceIdSegmentFormats: {
    issueId: /[0-9]+/,
    // eslint-disable-line no-useless-escape
    worklogId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/issue-worklog/index.ts
var JiraIssueWorklogAri = class _JiraIssueWorklogAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._issueId = opts.resourceIdSegmentValues.issueId, this._worklogId = opts.resourceIdSegmentValues.worklogId;
  }
  get siteId() {
    return this._siteId;
  }
  get issueId() {
    return this._issueId;
  }
  get worklogId() {
    return this._worklogId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraIssueWorklogAriStaticOpts.qualifier,
      platformQualifier: jiraIssueWorklogAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraIssueWorklogAriStaticOpts.resourceOwner,
      resourceType: jiraIssueWorklogAriStaticOpts.resourceType,
      resourceId: `${opts.issueId}/${opts.worklogId}`,
      resourceIdSegmentValues: {
        issueId: opts.issueId,
        worklogId: opts.worklogId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraIssueWorklogAriStaticOpts);
    return new _JiraIssueWorklogAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraIssueWorklogAriStaticOpts);
    return new _JiraIssueWorklogAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      issueId: this.issueId,
      worklogId: this.worklogId
    };
  }
};

// src/jira/issuefieldvalue/types.ts
var JiraIssuefieldvalueAriResourceOwner = "jira", JiraIssuefieldvalueAriResourceType = "issuefieldvalue";

// src/jira/issuefieldvalue/manifest.ts
var jiraIssuefieldvalueAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraIssuefieldvalueAriResourceOwner,
  resourceType: JiraIssuefieldvalueAriResourceType,
  resourceIdSlug: "{issueId}/{fieldId}",
  resourceIdSegmentFormats: {
    issueId: /[0-9]+/,
    // eslint-disable-line no-useless-escape
    fieldId: /[a-zA-Z0-9_\-]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/issuefieldvalue/index.ts
var JiraIssuefieldvalueAri = class _JiraIssuefieldvalueAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._issueId = opts.resourceIdSegmentValues.issueId, this._fieldId = opts.resourceIdSegmentValues.fieldId;
  }
  get siteId() {
    return this._siteId;
  }
  get issueId() {
    return this._issueId;
  }
  get fieldId() {
    return this._fieldId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraIssuefieldvalueAriStaticOpts.qualifier,
      platformQualifier: jiraIssuefieldvalueAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraIssuefieldvalueAriStaticOpts.resourceOwner,
      resourceType: jiraIssuefieldvalueAriStaticOpts.resourceType,
      resourceId: `${opts.issueId}/${opts.fieldId}`,
      resourceIdSegmentValues: {
        issueId: opts.issueId,
        fieldId: opts.fieldId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraIssuefieldvalueAriStaticOpts);
    return new _JiraIssuefieldvalueAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraIssuefieldvalueAriStaticOpts);
    return new _JiraIssuefieldvalueAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      issueId: this.issueId,
      fieldId: this.fieldId
    };
  }
};

// src/jira/navigation-config/types.ts
var JiraNavigationConfigAriResourceOwner = "jira", JiraNavigationConfigAriResourceType = "navigation-config";

// src/jira/navigation-config/manifest.ts
var jiraNavigationConfigAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraNavigationConfigAriResourceOwner,
  resourceType: JiraNavigationConfigAriResourceType,
  resourceIdSlug: "activation/{activationId}/{userId}/{navKey}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    userId: /[a-zA-Z0-9_\-\:]{1,128}/,
    // eslint-disable-line no-useless-escape
    navKey: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/navigation-config/index.ts
var JiraNavigationConfigAri = class _JiraNavigationConfigAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._userId = opts.resourceIdSegmentValues.userId, this._navKey = opts.resourceIdSegmentValues.navKey;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get userId() {
    return this._userId;
  }
  get navKey() {
    return this._navKey;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraNavigationConfigAriStaticOpts.qualifier,
      platformQualifier: jiraNavigationConfigAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraNavigationConfigAriStaticOpts.resourceOwner,
      resourceType: jiraNavigationConfigAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.userId}/${opts.navKey}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        userId: opts.userId,
        navKey: opts.navKey
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraNavigationConfigAriStaticOpts);
    return new _JiraNavigationConfigAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraNavigationConfigAriStaticOpts);
    return new _JiraNavigationConfigAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      userId: this.userId,
      navKey: this.navKey
    };
  }
};

// src/jira/navigation-item/types.ts
var JiraNavigationItemAriResourceOwner = "jira", JiraNavigationItemAriResourceType = "navigation-item";

// src/jira/navigation-item/manifest.ts
var jiraNavigationItemAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraNavigationItemAriResourceOwner,
  resourceType: JiraNavigationItemAriResourceType,
  resourceIdSlug: "activation/{activationId}/{scopeType}/{scopeId}/{itemId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    scopeType: /(?:project|board|global)/,
    // eslint-disable-line no-useless-escape
    scopeId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/,
    // eslint-disable-line no-useless-escape
    itemId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/navigation-item/index.ts
var JiraNavigationItemAri = class _JiraNavigationItemAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._scopeType = opts.resourceIdSegmentValues.scopeType, this._scopeId = opts.resourceIdSegmentValues.scopeId, this._itemId = opts.resourceIdSegmentValues.itemId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get scopeType() {
    return this._scopeType;
  }
  get scopeId() {
    return this._scopeId;
  }
  get itemId() {
    return this._itemId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraNavigationItemAriStaticOpts.qualifier,
      platformQualifier: jiraNavigationItemAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraNavigationItemAriStaticOpts.resourceOwner,
      resourceType: jiraNavigationItemAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.scopeType}/${opts.scopeId}/${opts.itemId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        scopeType: opts.scopeType,
        scopeId: opts.scopeId,
        itemId: opts.itemId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraNavigationItemAriStaticOpts);
    return new _JiraNavigationItemAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraNavigationItemAriStaticOpts);
    return new _JiraNavigationItemAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      scopeType: this.scopeType,
      scopeId: this.scopeId,
      itemId: this.itemId
    };
  }
};

// src/jira/notification-type/types.ts
var JiraNotificationTypeAriResourceOwner = "jira", JiraNotificationTypeAriResourceType = "notification-type";

// src/jira/notification-type/manifest.ts
var jiraNotificationTypeAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: JiraNotificationTypeAriResourceOwner,
  resourceType: JiraNotificationTypeAriResourceType,
  resourceIdSlug: "activation/{activationId}/{notificationTypeId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    notificationTypeId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/notification-type/index.ts
var JiraNotificationTypeAri = class _JiraNotificationTypeAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._notificationTypeId = opts.resourceIdSegmentValues.notificationTypeId;
  }
  get activationId() {
    return this._activationId;
  }
  get notificationTypeId() {
    return this._notificationTypeId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraNotificationTypeAriStaticOpts.qualifier,
      platformQualifier: jiraNotificationTypeAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: jiraNotificationTypeAriStaticOpts.resourceOwner,
      resourceType: jiraNotificationTypeAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.notificationTypeId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        notificationTypeId: opts.notificationTypeId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraNotificationTypeAriStaticOpts);
    return new _JiraNotificationTypeAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraNotificationTypeAriStaticOpts);
    return new _JiraNotificationTypeAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      notificationTypeId: this.notificationTypeId
    };
  }
};

// src/jira/notification-type-scheme/types.ts
var JiraNotificationTypeSchemeAriResourceOwner = "jira", JiraNotificationTypeSchemeAriResourceType = "notification-type-scheme";

// src/jira/notification-type-scheme/manifest.ts
var jiraNotificationTypeSchemeAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: JiraNotificationTypeSchemeAriResourceOwner,
  resourceType: JiraNotificationTypeSchemeAriResourceType,
  resourceIdSlug: "activation/{activationId}/{notificationTypeSchemeId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    notificationTypeSchemeId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/notification-type-scheme/index.ts
var JiraNotificationTypeSchemeAri = class _JiraNotificationTypeSchemeAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._notificationTypeSchemeId = opts.resourceIdSegmentValues.notificationTypeSchemeId;
  }
  get activationId() {
    return this._activationId;
  }
  get notificationTypeSchemeId() {
    return this._notificationTypeSchemeId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraNotificationTypeSchemeAriStaticOpts.qualifier,
      platformQualifier: jiraNotificationTypeSchemeAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: jiraNotificationTypeSchemeAriStaticOpts.resourceOwner,
      resourceType: jiraNotificationTypeSchemeAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.notificationTypeSchemeId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        notificationTypeSchemeId: opts.notificationTypeSchemeId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraNotificationTypeSchemeAriStaticOpts);
    return new _JiraNotificationTypeSchemeAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraNotificationTypeSchemeAriStaticOpts);
    return new _JiraNotificationTypeSchemeAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      notificationTypeSchemeId: this.notificationTypeSchemeId
    };
  }
};

// src/jira/notification-user-preference/types.ts
var JiraNotificationUserPreferenceAriResourceOwner = "jira", JiraNotificationUserPreferenceAriResourceType = "notification-user-preference";

// src/jira/notification-user-preference/manifest.ts
var jiraNotificationUserPreferenceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: JiraNotificationUserPreferenceAriResourceOwner,
  resourceType: JiraNotificationUserPreferenceAriResourceType,
  resourceIdSlug: "activation/{activationId}/{notificationUserPreferenceId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    notificationUserPreferenceId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/notification-user-preference/index.ts
var JiraNotificationUserPreferenceAri = class _JiraNotificationUserPreferenceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._notificationUserPreferenceId = opts.resourceIdSegmentValues.notificationUserPreferenceId;
  }
  get activationId() {
    return this._activationId;
  }
  get notificationUserPreferenceId() {
    return this._notificationUserPreferenceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraNotificationUserPreferenceAriStaticOpts.qualifier,
      platformQualifier: jiraNotificationUserPreferenceAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: jiraNotificationUserPreferenceAriStaticOpts.resourceOwner,
      resourceType: jiraNotificationUserPreferenceAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.notificationUserPreferenceId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        notificationUserPreferenceId: opts.notificationUserPreferenceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraNotificationUserPreferenceAriStaticOpts);
    return new _JiraNotificationUserPreferenceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraNotificationUserPreferenceAriStaticOpts);
    return new _JiraNotificationUserPreferenceAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      notificationUserPreferenceId: this.notificationUserPreferenceId
    };
  }
};

// src/jira/operations-workspace/types.ts
var JiraOperationsWorkspaceAriResourceOwner = "jira", JiraOperationsWorkspaceAriResourceType = "operations-workspace";

// src/jira/operations-workspace/manifest.ts
var jiraOperationsWorkspaceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraOperationsWorkspaceAriResourceOwner,
  resourceType: JiraOperationsWorkspaceAriResourceType,
  resourceIdSlug: "activation/{activationId}/{providerAppId}/{operationsWorkspaceId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    providerAppId: /[a-zA-Z0-9-._]+/,
    // eslint-disable-line no-useless-escape
    operationsWorkspaceId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/operations-workspace/index.ts
var JiraOperationsWorkspaceAri = class _JiraOperationsWorkspaceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._providerAppId = opts.resourceIdSegmentValues.providerAppId, this._operationsWorkspaceId = opts.resourceIdSegmentValues.operationsWorkspaceId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get providerAppId() {
    return this._providerAppId;
  }
  get operationsWorkspaceId() {
    return this._operationsWorkspaceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraOperationsWorkspaceAriStaticOpts.qualifier,
      platformQualifier: jiraOperationsWorkspaceAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraOperationsWorkspaceAriStaticOpts.resourceOwner,
      resourceType: jiraOperationsWorkspaceAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.providerAppId}/${opts.operationsWorkspaceId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        providerAppId: opts.providerAppId,
        operationsWorkspaceId: opts.operationsWorkspaceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraOperationsWorkspaceAriStaticOpts);
    return new _JiraOperationsWorkspaceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraOperationsWorkspaceAriStaticOpts);
    return new _JiraOperationsWorkspaceAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      providerAppId: this.providerAppId,
      operationsWorkspaceId: this.operationsWorkspaceId
    };
  }
};

// src/jira/permission-scheme/types.ts
var JiraPermissionSchemeAriResourceOwner = "jira", JiraPermissionSchemeAriResourceType = "permission-scheme";

// src/jira/permission-scheme/manifest.ts
var jiraPermissionSchemeAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraPermissionSchemeAriResourceOwner,
  resourceType: JiraPermissionSchemeAriResourceType,
  resourceIdSlug: "activation/{activationId}/{schemeId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    schemeId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/permission-scheme/index.ts
var JiraPermissionSchemeAri = class _JiraPermissionSchemeAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._schemeId = opts.resourceIdSegmentValues.schemeId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get schemeId() {
    return this._schemeId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraPermissionSchemeAriStaticOpts.qualifier,
      platformQualifier: jiraPermissionSchemeAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraPermissionSchemeAriStaticOpts.resourceOwner,
      resourceType: jiraPermissionSchemeAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.schemeId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        schemeId: opts.schemeId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraPermissionSchemeAriStaticOpts);
    return new _JiraPermissionSchemeAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraPermissionSchemeAriStaticOpts);
    return new _JiraPermissionSchemeAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      schemeId: this.schemeId
    };
  }
};

// src/jira/plan/types.ts
var JiraPlanAriResourceOwner = "jira", JiraPlanAriResourceType = "plan";

// src/jira/plan/manifest.ts
var jiraPlanAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraPlanAriResourceOwner,
  resourceType: JiraPlanAriResourceType,
  resourceIdSlug: "activation/{activationId}/{planId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    planId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/plan/index.ts
var JiraPlanAri = class _JiraPlanAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._planId = opts.resourceIdSegmentValues.planId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get planId() {
    return this._planId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraPlanAriStaticOpts.qualifier,
      platformQualifier: jiraPlanAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraPlanAriStaticOpts.resourceOwner,
      resourceType: jiraPlanAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.planId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        planId: opts.planId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraPlanAriStaticOpts);
    return new _JiraPlanAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraPlanAriStaticOpts);
    return new _JiraPlanAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      planId: this.planId
    };
  }
};

// src/jira/plan-cross-project-scenario-version/types.ts
var JiraPlanCrossProjectScenarioVersionAriResourceOwner = "jira", JiraPlanCrossProjectScenarioVersionAriResourceType = "plan-cross-project-scenario-version";

// src/jira/plan-cross-project-scenario-version/manifest.ts
var jiraPlanCrossProjectScenarioVersionAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraPlanCrossProjectScenarioVersionAriResourceOwner,
  resourceType: JiraPlanCrossProjectScenarioVersionAriResourceType,
  resourceIdSlug: "activation/{activationId}/{crossProjectScenarioVersionId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    crossProjectScenarioVersionId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/plan-cross-project-scenario-version/index.ts
var JiraPlanCrossProjectScenarioVersionAri = class _JiraPlanCrossProjectScenarioVersionAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._crossProjectScenarioVersionId = opts.resourceIdSegmentValues.crossProjectScenarioVersionId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get crossProjectScenarioVersionId() {
    return this._crossProjectScenarioVersionId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraPlanCrossProjectScenarioVersionAriStaticOpts.qualifier,
      platformQualifier: jiraPlanCrossProjectScenarioVersionAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraPlanCrossProjectScenarioVersionAriStaticOpts.resourceOwner,
      resourceType: jiraPlanCrossProjectScenarioVersionAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.crossProjectScenarioVersionId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        crossProjectScenarioVersionId: opts.crossProjectScenarioVersionId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraPlanCrossProjectScenarioVersionAriStaticOpts);
    return new _JiraPlanCrossProjectScenarioVersionAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraPlanCrossProjectScenarioVersionAriStaticOpts);
    return new _JiraPlanCrossProjectScenarioVersionAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      crossProjectScenarioVersionId: this.crossProjectScenarioVersionId
    };
  }
};

// src/jira/plan-cross-project-version/types.ts
var JiraPlanCrossProjectVersionAriResourceOwner = "jira", JiraPlanCrossProjectVersionAriResourceType = "plan-cross-project-version";

// src/jira/plan-cross-project-version/manifest.ts
var jiraPlanCrossProjectVersionAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraPlanCrossProjectVersionAriResourceOwner,
  resourceType: JiraPlanCrossProjectVersionAriResourceType,
  resourceIdSlug: "activation/{activationId}/{crossProjectVersionId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    crossProjectVersionId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/plan-cross-project-version/index.ts
var JiraPlanCrossProjectVersionAri = class _JiraPlanCrossProjectVersionAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._crossProjectVersionId = opts.resourceIdSegmentValues.crossProjectVersionId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get crossProjectVersionId() {
    return this._crossProjectVersionId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraPlanCrossProjectVersionAriStaticOpts.qualifier,
      platformQualifier: jiraPlanCrossProjectVersionAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraPlanCrossProjectVersionAriStaticOpts.resourceOwner,
      resourceType: jiraPlanCrossProjectVersionAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.crossProjectVersionId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        crossProjectVersionId: opts.crossProjectVersionId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraPlanCrossProjectVersionAriStaticOpts);
    return new _JiraPlanCrossProjectVersionAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraPlanCrossProjectVersionAriStaticOpts);
    return new _JiraPlanCrossProjectVersionAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      crossProjectVersionId: this.crossProjectVersionId
    };
  }
};

// src/jira/plan-scenario/types.ts
var JiraPlanScenarioAriResourceOwner = "jira", JiraPlanScenarioAriResourceType = "plan-scenario";

// src/jira/plan-scenario/manifest.ts
var jiraPlanScenarioAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraPlanScenarioAriResourceOwner,
  resourceType: JiraPlanScenarioAriResourceType,
  resourceIdSlug: "activation/{activationId}/{planId}/scenario/{scenarioId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    planId: /[0-9]+/,
    // eslint-disable-line no-useless-escape
    scenarioId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/plan-scenario/index.ts
var JiraPlanScenarioAri = class _JiraPlanScenarioAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._planId = opts.resourceIdSegmentValues.planId, this._scenarioId = opts.resourceIdSegmentValues.scenarioId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get planId() {
    return this._planId;
  }
  get scenarioId() {
    return this._scenarioId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraPlanScenarioAriStaticOpts.qualifier,
      platformQualifier: jiraPlanScenarioAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraPlanScenarioAriStaticOpts.resourceOwner,
      resourceType: jiraPlanScenarioAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.planId}/scenario/${opts.scenarioId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        planId: opts.planId,
        scenarioId: opts.scenarioId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraPlanScenarioAriStaticOpts);
    return new _JiraPlanScenarioAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraPlanScenarioAriStaticOpts);
    return new _JiraPlanScenarioAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      planId: this.planId,
      scenarioId: this.scenarioId
    };
  }
};

// src/jira/plan-scenario-issue/types.ts
var JiraPlanScenarioIssueAriResourceOwner = "jira", JiraPlanScenarioIssueAriResourceType = "plan-scenario-issue";

// src/jira/plan-scenario-issue/manifest.ts
var jiraPlanScenarioIssueAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraPlanScenarioIssueAriResourceOwner,
  resourceType: JiraPlanScenarioIssueAriResourceType,
  resourceIdSlug: "activation/{activationId}/{scenarioIssueId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    scenarioIssueId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/plan-scenario-issue/index.ts
var JiraPlanScenarioIssueAri = class _JiraPlanScenarioIssueAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._scenarioIssueId = opts.resourceIdSegmentValues.scenarioIssueId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get scenarioIssueId() {
    return this._scenarioIssueId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraPlanScenarioIssueAriStaticOpts.qualifier,
      platformQualifier: jiraPlanScenarioIssueAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraPlanScenarioIssueAriStaticOpts.resourceOwner,
      resourceType: jiraPlanScenarioIssueAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.scenarioIssueId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        scenarioIssueId: opts.scenarioIssueId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraPlanScenarioIssueAriStaticOpts);
    return new _JiraPlanScenarioIssueAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraPlanScenarioIssueAriStaticOpts);
    return new _JiraPlanScenarioIssueAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      scenarioIssueId: this.scenarioIssueId
    };
  }
};

// src/jira/plan-scenario-issue-field/types.ts
var JiraPlanScenarioIssueFieldAriResourceOwner = "jira", JiraPlanScenarioIssueFieldAriResourceType = "plan-scenario-issue-field";

// src/jira/plan-scenario-issue-field/manifest.ts
var jiraPlanScenarioIssueFieldAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraPlanScenarioIssueFieldAriResourceOwner,
  resourceType: JiraPlanScenarioIssueFieldAriResourceType,
  resourceIdSlug: "activation/{activationId}/{scenarioIssueId}/{fieldId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    scenarioIssueId: /[0-9]+/,
    // eslint-disable-line no-useless-escape
    fieldId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/plan-scenario-issue-field/index.ts
var JiraPlanScenarioIssueFieldAri = class _JiraPlanScenarioIssueFieldAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._scenarioIssueId = opts.resourceIdSegmentValues.scenarioIssueId, this._fieldId = opts.resourceIdSegmentValues.fieldId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get scenarioIssueId() {
    return this._scenarioIssueId;
  }
  get fieldId() {
    return this._fieldId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraPlanScenarioIssueFieldAriStaticOpts.qualifier,
      platformQualifier: jiraPlanScenarioIssueFieldAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraPlanScenarioIssueFieldAriStaticOpts.resourceOwner,
      resourceType: jiraPlanScenarioIssueFieldAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.scenarioIssueId}/${opts.fieldId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        scenarioIssueId: opts.scenarioIssueId,
        fieldId: opts.fieldId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraPlanScenarioIssueFieldAriStaticOpts);
    return new _JiraPlanScenarioIssueFieldAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraPlanScenarioIssueFieldAriStaticOpts);
    return new _JiraPlanScenarioIssueFieldAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      scenarioIssueId: this.scenarioIssueId,
      fieldId: this.fieldId
    };
  }
};

// src/jira/plan-scenario-version/types.ts
var JiraPlanScenarioVersionAriResourceOwner = "jira", JiraPlanScenarioVersionAriResourceType = "plan-scenario-version";

// src/jira/plan-scenario-version/manifest.ts
var jiraPlanScenarioVersionAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraPlanScenarioVersionAriResourceOwner,
  resourceType: JiraPlanScenarioVersionAriResourceType,
  resourceIdSlug: "activation/{activationId}/{scenarioVersionId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    scenarioVersionId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/plan-scenario-version/index.ts
var JiraPlanScenarioVersionAri = class _JiraPlanScenarioVersionAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._scenarioVersionId = opts.resourceIdSegmentValues.scenarioVersionId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get scenarioVersionId() {
    return this._scenarioVersionId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraPlanScenarioVersionAriStaticOpts.qualifier,
      platformQualifier: jiraPlanScenarioVersionAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraPlanScenarioVersionAriStaticOpts.resourceOwner,
      resourceType: jiraPlanScenarioVersionAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.scenarioVersionId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        scenarioVersionId: opts.scenarioVersionId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraPlanScenarioVersionAriStaticOpts);
    return new _JiraPlanScenarioVersionAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraPlanScenarioVersionAriStaticOpts);
    return new _JiraPlanScenarioVersionAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      scenarioVersionId: this.scenarioVersionId
    };
  }
};

// src/jira/post-incident-review/types.ts
var JiraPostIncidentReviewAriResourceOwner = "jira", JiraPostIncidentReviewAriResourceType = "post-incident-review";

// src/jira/post-incident-review/manifest.ts
var jiraPostIncidentReviewAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraPostIncidentReviewAriResourceOwner,
  resourceType: JiraPostIncidentReviewAriResourceType,
  resourceIdSlug: "activation/{activationId}/{postIncidentReviewId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    postIncidentReviewId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/post-incident-review/index.ts
var JiraPostIncidentReviewAri = class _JiraPostIncidentReviewAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._postIncidentReviewId = opts.resourceIdSegmentValues.postIncidentReviewId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get postIncidentReviewId() {
    return this._postIncidentReviewId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraPostIncidentReviewAriStaticOpts.qualifier,
      platformQualifier: jiraPostIncidentReviewAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraPostIncidentReviewAriStaticOpts.resourceOwner,
      resourceType: jiraPostIncidentReviewAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.postIncidentReviewId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        postIncidentReviewId: opts.postIncidentReviewId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraPostIncidentReviewAriStaticOpts);
    return new _JiraPostIncidentReviewAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraPostIncidentReviewAriStaticOpts);
    return new _JiraPostIncidentReviewAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      postIncidentReviewId: this.postIncidentReviewId
    };
  }
};

// src/jira/post-incident-review-history/types.ts
var JiraPostIncidentReviewHistoryAriResourceOwner = "jira", JiraPostIncidentReviewHistoryAriResourceType = "post-incident-review-history";

// src/jira/post-incident-review-history/manifest.ts
var jiraPostIncidentReviewHistoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraPostIncidentReviewHistoryAriResourceOwner,
  resourceType: JiraPostIncidentReviewHistoryAriResourceType,
  resourceIdSlug: "activation/{activationId}/{postIncidentReviewId}/{updateSequenceNumber}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    postIncidentReviewId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    updateSequenceNumber: /\d+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/post-incident-review-history/index.ts
var JiraPostIncidentReviewHistoryAri = class _JiraPostIncidentReviewHistoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._postIncidentReviewId = opts.resourceIdSegmentValues.postIncidentReviewId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get postIncidentReviewId() {
    return this._postIncidentReviewId;
  }
  get updateSequenceNumber() {
    return this._updateSequenceNumber;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraPostIncidentReviewHistoryAriStaticOpts.qualifier,
      platformQualifier: jiraPostIncidentReviewHistoryAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraPostIncidentReviewHistoryAriStaticOpts.resourceOwner,
      resourceType: jiraPostIncidentReviewHistoryAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.postIncidentReviewId}/${opts.updateSequenceNumber}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        postIncidentReviewId: opts.postIncidentReviewId,
        updateSequenceNumber: opts.updateSequenceNumber
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraPostIncidentReviewHistoryAriStaticOpts);
    return new _JiraPostIncidentReviewHistoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraPostIncidentReviewHistoryAriStaticOpts);
    return new _JiraPostIncidentReviewHistoryAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      postIncidentReviewId: this.postIncidentReviewId,
      updateSequenceNumber: this.updateSequenceNumber
    };
  }
};

// src/jira/post-incident-review-link/types.ts
var JiraPostIncidentReviewLinkAriResourceOwner = "jira", JiraPostIncidentReviewLinkAriResourceType = "post-incident-review-link";

// src/jira/post-incident-review-link/manifest.ts
var jiraPostIncidentReviewLinkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraPostIncidentReviewLinkAriResourceOwner,
  resourceType: JiraPostIncidentReviewLinkAriResourceType,
  resourceIdSlug: "activation/{activationId}/{postIncidentReviewLinkId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    postIncidentReviewLinkId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/post-incident-review-link/index.ts
var JiraPostIncidentReviewLinkAri = class _JiraPostIncidentReviewLinkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._postIncidentReviewLinkId = opts.resourceIdSegmentValues.postIncidentReviewLinkId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get postIncidentReviewLinkId() {
    return this._postIncidentReviewLinkId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraPostIncidentReviewLinkAriStaticOpts.qualifier,
      platformQualifier: jiraPostIncidentReviewLinkAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraPostIncidentReviewLinkAriStaticOpts.resourceOwner,
      resourceType: jiraPostIncidentReviewLinkAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.postIncidentReviewLinkId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        postIncidentReviewLinkId: opts.postIncidentReviewLinkId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraPostIncidentReviewLinkAriStaticOpts);
    return new _JiraPostIncidentReviewLinkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraPostIncidentReviewLinkAriStaticOpts);
    return new _JiraPostIncidentReviewLinkAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      postIncidentReviewLinkId: this.postIncidentReviewLinkId
    };
  }
};

// src/jira/priority/types.ts
var JiraPriorityAriResourceOwner = "jira", JiraPriorityAriResourceType = "priority";

// src/jira/priority/manifest.ts
var jiraPriorityAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraPriorityAriResourceOwner,
  resourceType: JiraPriorityAriResourceType,
  resourceIdSlug: "activation/{activationId}/{priorityId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    priorityId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/priority/index.ts
var JiraPriorityAri = class _JiraPriorityAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._priorityId = opts.resourceIdSegmentValues.priorityId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get priorityId() {
    return this._priorityId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraPriorityAriStaticOpts.qualifier,
      platformQualifier: jiraPriorityAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraPriorityAriStaticOpts.resourceOwner,
      resourceType: jiraPriorityAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.priorityId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        priorityId: opts.priorityId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraPriorityAriStaticOpts);
    return new _JiraPriorityAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraPriorityAriStaticOpts);
    return new _JiraPriorityAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      priorityId: this.priorityId
    };
  }
};

// src/jira/product/types.ts
var JiraProductAriResourceOwner = "jira", JiraProductAriResourceType = "product";

// src/jira/product/manifest.ts
var jiraProductAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraProductAriResourceOwner,
  resourceType: JiraProductAriResourceType,
  resourceIdSlug: "activation/{activationId}/{productId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    productId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/product/index.ts
var JiraProductAri = class _JiraProductAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._productId = opts.resourceIdSegmentValues.productId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get productId() {
    return this._productId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraProductAriStaticOpts.qualifier,
      platformQualifier: jiraProductAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraProductAriStaticOpts.resourceOwner,
      resourceType: jiraProductAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.productId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        productId: opts.productId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraProductAriStaticOpts);
    return new _JiraProductAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraProductAriStaticOpts);
    return new _JiraProductAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      productId: this.productId
    };
  }
};

// src/jira/project/types.ts
var JiraProjectAriResourceOwner = "jira", JiraProjectAriResourceType = "project";

// src/jira/project/manifest.ts
var jiraProjectAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraProjectAriResourceOwner,
  resourceType: JiraProjectAriResourceType,
  resourceIdSlug: "{projectId}",
  resourceIdSegmentFormats: {
    projectId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/project/index.ts
var JiraProjectAri = class _JiraProjectAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._projectId = opts.resourceIdSegmentValues.projectId;
  }
  get siteId() {
    return this._siteId;
  }
  get projectId() {
    return this._projectId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraProjectAriStaticOpts.qualifier,
      platformQualifier: jiraProjectAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraProjectAriStaticOpts.resourceOwner,
      resourceType: jiraProjectAriStaticOpts.resourceType,
      resourceId: `${opts.projectId}`,
      resourceIdSegmentValues: {
        projectId: opts.projectId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraProjectAriStaticOpts);
    return new _JiraProjectAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraProjectAriStaticOpts);
    return new _JiraProjectAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      projectId: this.projectId
    };
  }
};

// src/jira/project-category/types.ts
var JiraProjectCategoryAriResourceOwner = "jira", JiraProjectCategoryAriResourceType = "project-category";

// src/jira/project-category/manifest.ts
var jiraProjectCategoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraProjectCategoryAriResourceOwner,
  resourceType: JiraProjectCategoryAriResourceType,
  resourceIdSlug: "{projectCategoryId}",
  resourceIdSegmentFormats: {
    projectCategoryId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/project-category/index.ts
var JiraProjectCategoryAri = class _JiraProjectCategoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._projectCategoryId = opts.resourceIdSegmentValues.projectCategoryId;
  }
  get siteId() {
    return this._siteId;
  }
  get projectCategoryId() {
    return this._projectCategoryId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraProjectCategoryAriStaticOpts.qualifier,
      platformQualifier: jiraProjectCategoryAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraProjectCategoryAriStaticOpts.resourceOwner,
      resourceType: jiraProjectCategoryAriStaticOpts.resourceType,
      resourceId: `${opts.projectCategoryId}`,
      resourceIdSegmentValues: {
        projectCategoryId: opts.projectCategoryId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraProjectCategoryAriStaticOpts);
    return new _JiraProjectCategoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraProjectCategoryAriStaticOpts);
    return new _JiraProjectCategoryAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      projectCategoryId: this.projectCategoryId
    };
  }
};

// src/jira/project-feature/types.ts
var JiraProjectFeatureAriResourceOwner = "jira", JiraProjectFeatureAriResourceType = "project-feature";

// src/jira/project-feature/manifest.ts
var jiraProjectFeatureAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraProjectFeatureAriResourceOwner,
  resourceType: JiraProjectFeatureAriResourceType,
  resourceIdSlug: "activation/{activationId}/{projectId}/featureKey/{featureKey}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    projectId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    featureKey: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/project-feature/index.ts
var JiraProjectFeatureAri = class _JiraProjectFeatureAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._projectId = opts.resourceIdSegmentValues.projectId, this._featureKey = opts.resourceIdSegmentValues.featureKey;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get projectId() {
    return this._projectId;
  }
  get featureKey() {
    return this._featureKey;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraProjectFeatureAriStaticOpts.qualifier,
      platformQualifier: jiraProjectFeatureAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraProjectFeatureAriStaticOpts.resourceOwner,
      resourceType: jiraProjectFeatureAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.projectId}/featureKey/${opts.featureKey}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        projectId: opts.projectId,
        featureKey: opts.featureKey
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraProjectFeatureAriStaticOpts);
    return new _JiraProjectFeatureAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraProjectFeatureAriStaticOpts);
    return new _JiraProjectFeatureAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      projectId: this.projectId,
      featureKey: this.featureKey
    };
  }
};

// src/jira/project-overview/types.ts
var JiraProjectOverviewAriResourceOwner = "jira", JiraProjectOverviewAriResourceType = "project-overview";

// src/jira/project-overview/manifest.ts
var jiraProjectOverviewAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraProjectOverviewAriResourceOwner,
  resourceType: JiraProjectOverviewAriResourceType,
  resourceIdSlug: "activation/{activationId}/{overviewId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    overviewId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/project-overview/index.ts
var JiraProjectOverviewAri = class _JiraProjectOverviewAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._overviewId = opts.resourceIdSegmentValues.overviewId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get overviewId() {
    return this._overviewId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraProjectOverviewAriStaticOpts.qualifier,
      platformQualifier: jiraProjectOverviewAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraProjectOverviewAriStaticOpts.resourceOwner,
      resourceType: jiraProjectOverviewAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.overviewId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        overviewId: opts.overviewId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraProjectOverviewAriStaticOpts);
    return new _JiraProjectOverviewAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraProjectOverviewAriStaticOpts);
    return new _JiraProjectOverviewAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      overviewId: this.overviewId
    };
  }
};

// src/jira/project-role-actor/types.ts
var JiraProjectRoleActorAriResourceOwner = "jira", JiraProjectRoleActorAriResourceType = "project-role-actor";

// src/jira/project-role-actor/manifest.ts
var jiraProjectRoleActorAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraProjectRoleActorAriResourceOwner,
  resourceType: JiraProjectRoleActorAriResourceType,
  resourceIdSlug: "activation/{activationId}/{projectRoleActorId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    projectRoleActorId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/project-role-actor/index.ts
var JiraProjectRoleActorAri = class _JiraProjectRoleActorAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._projectRoleActorId = opts.resourceIdSegmentValues.projectRoleActorId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get projectRoleActorId() {
    return this._projectRoleActorId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraProjectRoleActorAriStaticOpts.qualifier,
      platformQualifier: jiraProjectRoleActorAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraProjectRoleActorAriStaticOpts.resourceOwner,
      resourceType: jiraProjectRoleActorAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.projectRoleActorId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        projectRoleActorId: opts.projectRoleActorId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraProjectRoleActorAriStaticOpts);
    return new _JiraProjectRoleActorAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraProjectRoleActorAriStaticOpts);
    return new _JiraProjectRoleActorAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      projectRoleActorId: this.projectRoleActorId
    };
  }
};

// src/jira/project-shortcut/types.ts
var JiraProjectShortcutAriResourceOwner = "jira", JiraProjectShortcutAriResourceType = "project-shortcut";

// src/jira/project-shortcut/manifest.ts
var jiraProjectShortcutAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraProjectShortcutAriResourceOwner,
  resourceType: JiraProjectShortcutAriResourceType,
  resourceIdSlug: "activation/{activationId}/{shortcutId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    shortcutId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/project-shortcut/index.ts
var JiraProjectShortcutAri = class _JiraProjectShortcutAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._shortcutId = opts.resourceIdSegmentValues.shortcutId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get shortcutId() {
    return this._shortcutId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraProjectShortcutAriStaticOpts.qualifier,
      platformQualifier: jiraProjectShortcutAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraProjectShortcutAriStaticOpts.resourceOwner,
      resourceType: jiraProjectShortcutAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.shortcutId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        shortcutId: opts.shortcutId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraProjectShortcutAriStaticOpts);
    return new _JiraProjectShortcutAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraProjectShortcutAriStaticOpts);
    return new _JiraProjectShortcutAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      shortcutId: this.shortcutId
    };
  }
};

// src/jira/project-type/types.ts
var JiraProjectTypeAriResourceOwner = "jira", JiraProjectTypeAriResourceType = "project-type";

// src/jira/project-type/manifest.ts
var jiraProjectTypeAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraProjectTypeAriResourceOwner,
  resourceType: JiraProjectTypeAriResourceType,
  resourceIdSlug: "{projectTypeId}",
  resourceIdSegmentFormats: {
    projectTypeId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/project-type/index.ts
var JiraProjectTypeAri = class _JiraProjectTypeAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._projectTypeId = opts.resourceIdSegmentValues.projectTypeId;
  }
  get siteId() {
    return this._siteId;
  }
  get projectTypeId() {
    return this._projectTypeId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraProjectTypeAriStaticOpts.qualifier,
      platformQualifier: jiraProjectTypeAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraProjectTypeAriStaticOpts.resourceOwner,
      resourceType: jiraProjectTypeAriStaticOpts.resourceType,
      resourceId: `${opts.projectTypeId}`,
      resourceIdSegmentValues: {
        projectTypeId: opts.projectTypeId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraProjectTypeAriStaticOpts);
    return new _JiraProjectTypeAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraProjectTypeAriStaticOpts);
    return new _JiraProjectTypeAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      projectTypeId: this.projectTypeId
    };
  }
};

// src/jira/pull-request/types.ts
var JiraPullRequestAriResourceOwner = "jira", JiraPullRequestAriResourceType = "pull-request";

// src/jira/pull-request/manifest.ts
var jiraPullRequestAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraPullRequestAriResourceOwner,
  resourceType: JiraPullRequestAriResourceType,
  resourceIdSlug: "activation/{activationId}/{pullRequestId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    pullRequestId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/pull-request/index.ts
var JiraPullRequestAri = class _JiraPullRequestAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._pullRequestId = opts.resourceIdSegmentValues.pullRequestId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get pullRequestId() {
    return this._pullRequestId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraPullRequestAriStaticOpts.qualifier,
      platformQualifier: jiraPullRequestAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraPullRequestAriStaticOpts.resourceOwner,
      resourceType: jiraPullRequestAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.pullRequestId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        pullRequestId: opts.pullRequestId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraPullRequestAriStaticOpts);
    return new _JiraPullRequestAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraPullRequestAriStaticOpts);
    return new _JiraPullRequestAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      pullRequestId: this.pullRequestId
    };
  }
};

// src/jira/pull-request-history/types.ts
var JiraPullRequestHistoryAriResourceOwner = "jira", JiraPullRequestHistoryAriResourceType = "pull-request-history";

// src/jira/pull-request-history/manifest.ts
var jiraPullRequestHistoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraPullRequestHistoryAriResourceOwner,
  resourceType: JiraPullRequestHistoryAriResourceType,
  resourceIdSlug: "activation/{activationId}/{pullRequestId}/{updateSequenceNumber}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    pullRequestId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    updateSequenceNumber: /\d+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/pull-request-history/index.ts
var JiraPullRequestHistoryAri = class _JiraPullRequestHistoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._pullRequestId = opts.resourceIdSegmentValues.pullRequestId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get pullRequestId() {
    return this._pullRequestId;
  }
  get updateSequenceNumber() {
    return this._updateSequenceNumber;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraPullRequestHistoryAriStaticOpts.qualifier,
      platformQualifier: jiraPullRequestHistoryAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraPullRequestHistoryAriStaticOpts.resourceOwner,
      resourceType: jiraPullRequestHistoryAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.pullRequestId}/${opts.updateSequenceNumber}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        pullRequestId: opts.pullRequestId,
        updateSequenceNumber: opts.updateSequenceNumber
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraPullRequestHistoryAriStaticOpts);
    return new _JiraPullRequestHistoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraPullRequestHistoryAriStaticOpts);
    return new _JiraPullRequestHistoryAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      pullRequestId: this.pullRequestId,
      updateSequenceNumber: this.updateSequenceNumber
    };
  }
};

// src/jira/remote-link/types.ts
var JiraRemoteLinkAriResourceOwner = "jira", JiraRemoteLinkAriResourceType = "remote-link";

// src/jira/remote-link/manifest.ts
var jiraRemoteLinkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraRemoteLinkAriResourceOwner,
  resourceType: JiraRemoteLinkAriResourceType,
  resourceIdSlug: "activation/{activationId}/{remoteLinkId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    remoteLinkId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/remote-link/index.ts
var JiraRemoteLinkAri = class _JiraRemoteLinkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._remoteLinkId = opts.resourceIdSegmentValues.remoteLinkId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get remoteLinkId() {
    return this._remoteLinkId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraRemoteLinkAriStaticOpts.qualifier,
      platformQualifier: jiraRemoteLinkAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraRemoteLinkAriStaticOpts.resourceOwner,
      resourceType: jiraRemoteLinkAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.remoteLinkId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        remoteLinkId: opts.remoteLinkId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraRemoteLinkAriStaticOpts);
    return new _JiraRemoteLinkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraRemoteLinkAriStaticOpts);
    return new _JiraRemoteLinkAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      remoteLinkId: this.remoteLinkId
    };
  }
};

// src/jira/remote-link-history/types.ts
var JiraRemoteLinkHistoryAriResourceOwner = "jira", JiraRemoteLinkHistoryAriResourceType = "remote-link-history";

// src/jira/remote-link-history/manifest.ts
var jiraRemoteLinkHistoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraRemoteLinkHistoryAriResourceOwner,
  resourceType: JiraRemoteLinkHistoryAriResourceType,
  resourceIdSlug: "activation/{activationId}/{remoteLinkId}/{updateSequenceNumber}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    remoteLinkId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    updateSequenceNumber: /\d+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/remote-link-history/index.ts
var JiraRemoteLinkHistoryAri = class _JiraRemoteLinkHistoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._remoteLinkId = opts.resourceIdSegmentValues.remoteLinkId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get remoteLinkId() {
    return this._remoteLinkId;
  }
  get updateSequenceNumber() {
    return this._updateSequenceNumber;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraRemoteLinkHistoryAriStaticOpts.qualifier,
      platformQualifier: jiraRemoteLinkHistoryAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraRemoteLinkHistoryAriStaticOpts.resourceOwner,
      resourceType: jiraRemoteLinkHistoryAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.remoteLinkId}/${opts.updateSequenceNumber}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        remoteLinkId: opts.remoteLinkId,
        updateSequenceNumber: opts.updateSequenceNumber
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraRemoteLinkHistoryAriStaticOpts);
    return new _JiraRemoteLinkHistoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraRemoteLinkHistoryAriStaticOpts);
    return new _JiraRemoteLinkHistoryAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      remoteLinkId: this.remoteLinkId,
      updateSequenceNumber: this.updateSequenceNumber
    };
  }
};

// src/jira/repository/types.ts
var JiraRepositoryAriResourceOwner = "jira", JiraRepositoryAriResourceType = "repository";

// src/jira/repository/manifest.ts
var jiraRepositoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraRepositoryAriResourceOwner,
  resourceType: JiraRepositoryAriResourceType,
  resourceIdSlug: "activation/{activationId}/{repositoryId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    repositoryId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/repository/index.ts
var JiraRepositoryAri = class _JiraRepositoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._repositoryId = opts.resourceIdSegmentValues.repositoryId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get repositoryId() {
    return this._repositoryId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraRepositoryAriStaticOpts.qualifier,
      platformQualifier: jiraRepositoryAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraRepositoryAriStaticOpts.resourceOwner,
      resourceType: jiraRepositoryAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.repositoryId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        repositoryId: opts.repositoryId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraRepositoryAriStaticOpts);
    return new _JiraRepositoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraRepositoryAriStaticOpts);
    return new _JiraRepositoryAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      repositoryId: this.repositoryId
    };
  }
};

// src/jira/resolution/types.ts
var JiraResolutionAriResourceOwner = "jira", JiraResolutionAriResourceType = "resolution";

// src/jira/resolution/manifest.ts
var jiraResolutionAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraResolutionAriResourceOwner,
  resourceType: JiraResolutionAriResourceType,
  resourceIdSlug: "activation/{activationId}/{resolutionId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    resolutionId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/resolution/index.ts
var JiraResolutionAri = class _JiraResolutionAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._resolutionId = opts.resourceIdSegmentValues.resolutionId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get resolutionId() {
    return this._resolutionId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraResolutionAriStaticOpts.qualifier,
      platformQualifier: jiraResolutionAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraResolutionAriStaticOpts.resourceOwner,
      resourceType: jiraResolutionAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.resolutionId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        resolutionId: opts.resolutionId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraResolutionAriStaticOpts);
    return new _JiraResolutionAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraResolutionAriStaticOpts);
    return new _JiraResolutionAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      resolutionId: this.resolutionId
    };
  }
};

// src/jira/resource-usage-metric/types.ts
var JiraResourceUsageMetricAriResourceOwner = "jira", JiraResourceUsageMetricAriResourceType = "resource-usage-metric";

// src/jira/resource-usage-metric/manifest.ts
var jiraResourceUsageMetricAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraResourceUsageMetricAriResourceOwner,
  resourceType: JiraResourceUsageMetricAriResourceType,
  resourceIdSlug: "activation/{activationId}/{metricKey}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    metricKey: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/resource-usage-metric/index.ts
var JiraResourceUsageMetricAri = class _JiraResourceUsageMetricAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._metricKey = opts.resourceIdSegmentValues.metricKey;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get metricKey() {
    return this._metricKey;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraResourceUsageMetricAriStaticOpts.qualifier,
      platformQualifier: jiraResourceUsageMetricAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraResourceUsageMetricAriStaticOpts.resourceOwner,
      resourceType: jiraResourceUsageMetricAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.metricKey}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        metricKey: opts.metricKey
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraResourceUsageMetricAriStaticOpts);
    return new _JiraResourceUsageMetricAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraResourceUsageMetricAriStaticOpts);
    return new _JiraResourceUsageMetricAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      metricKey: this.metricKey
    };
  }
};

// src/jira/resource-usage-recommendation/types.ts
var JiraResourceUsageRecommendationAriResourceOwner = "jira", JiraResourceUsageRecommendationAriResourceType = "resource-usage-recommendation";

// src/jira/resource-usage-recommendation/manifest.ts
var jiraResourceUsageRecommendationAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraResourceUsageRecommendationAriResourceOwner,
  resourceType: JiraResourceUsageRecommendationAriResourceType,
  resourceIdSlug: "activation/{activationId}/{recommendationId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    recommendationId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/resource-usage-recommendation/index.ts
var JiraResourceUsageRecommendationAri = class _JiraResourceUsageRecommendationAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._recommendationId = opts.resourceIdSegmentValues.recommendationId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get recommendationId() {
    return this._recommendationId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraResourceUsageRecommendationAriStaticOpts.qualifier,
      platformQualifier: jiraResourceUsageRecommendationAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraResourceUsageRecommendationAriStaticOpts.resourceOwner,
      resourceType: jiraResourceUsageRecommendationAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.recommendationId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        recommendationId: opts.recommendationId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraResourceUsageRecommendationAriStaticOpts);
    return new _JiraResourceUsageRecommendationAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraResourceUsageRecommendationAriStaticOpts);
    return new _JiraResourceUsageRecommendationAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      recommendationId: this.recommendationId
    };
  }
};

// src/jira/role/types.ts
var JiraRoleAriResourceOwner = "jira", JiraRoleAriResourceType = "role";

// src/jira/role/manifest.ts
var jiraRoleAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]*$"),
  resourceOwner: JiraRoleAriResourceOwner,
  resourceType: JiraRoleAriResourceType,
  resourceIdSlug: "{jiraRoleType}/{jiraRoleTypeId}",
  resourceIdSegmentFormats: {
    jiraRoleType: /(?:scope|product|projectrole-by-project|project-lead|principal-grant|project-role|application-access|jsm-customer-context-helpseeker-project-permission|jsm-customer-context-anonymous-project-permission|role-type-for-perms-pollinator-test)/,
    // eslint-disable-line no-useless-escape
    jiraRoleTypeId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/role/index.ts
var JiraRoleAri = class _JiraRoleAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._optionalSiteId = opts.cloudId || "", this._jiraRoleType = opts.resourceIdSegmentValues.jiraRoleType, this._jiraRoleTypeId = opts.resourceIdSegmentValues.jiraRoleTypeId;
  }
  get optionalSiteId() {
    return this._optionalSiteId;
  }
  get jiraRoleType() {
    return this._jiraRoleType;
  }
  get jiraRoleTypeId() {
    return this._jiraRoleTypeId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraRoleAriStaticOpts.qualifier,
      platformQualifier: jiraRoleAriStaticOpts.platformQualifier,
      cloudId: opts.optionalSiteId,
      resourceOwner: jiraRoleAriStaticOpts.resourceOwner,
      resourceType: jiraRoleAriStaticOpts.resourceType,
      resourceId: `${opts.jiraRoleType}/${opts.jiraRoleTypeId}`,
      resourceIdSegmentValues: {
        jiraRoleType: opts.jiraRoleType,
        jiraRoleTypeId: opts.jiraRoleTypeId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraRoleAriStaticOpts);
    return new _JiraRoleAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraRoleAriStaticOpts);
    return new _JiraRoleAri(opts);
  }
  getVariables() {
    return {
      optionalSiteId: this.optionalSiteId,
      jiraRoleType: this.jiraRoleType,
      jiraRoleTypeId: this.jiraRoleTypeId
    };
  }
};

// src/jira/screen-tab/types.ts
var JiraScreenTabAriResourceOwner = "jira", JiraScreenTabAriResourceType = "screen-tab";

// src/jira/screen-tab/manifest.ts
var jiraScreenTabAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraScreenTabAriResourceOwner,
  resourceType: JiraScreenTabAriResourceType,
  resourceIdSlug: "activation/{activationId}/{screenId}/{tabId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    screenId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/,
    // eslint-disable-line no-useless-escape
    tabId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/screen-tab/index.ts
var JiraScreenTabAri = class _JiraScreenTabAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._screenId = opts.resourceIdSegmentValues.screenId, this._tabId = opts.resourceIdSegmentValues.tabId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get screenId() {
    return this._screenId;
  }
  get tabId() {
    return this._tabId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraScreenTabAriStaticOpts.qualifier,
      platformQualifier: jiraScreenTabAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraScreenTabAriStaticOpts.resourceOwner,
      resourceType: jiraScreenTabAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.screenId}/${opts.tabId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        screenId: opts.screenId,
        tabId: opts.tabId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraScreenTabAriStaticOpts);
    return new _JiraScreenTabAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraScreenTabAriStaticOpts);
    return new _JiraScreenTabAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      screenId: this.screenId,
      tabId: this.tabId
    };
  }
};

// src/jira/security-container/types.ts
var JiraSecurityContainerAriResourceOwner = "jira", JiraSecurityContainerAriResourceType = "security-container";

// src/jira/security-container/manifest.ts
var jiraSecurityContainerAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraSecurityContainerAriResourceOwner,
  resourceType: JiraSecurityContainerAriResourceType,
  resourceIdSlug: "activation/{activationId}/{providerAppId}/{securityContainerId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    providerAppId: /[a-zA-Z0-9-._]+/,
    // eslint-disable-line no-useless-escape
    securityContainerId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/security-container/index.ts
var JiraSecurityContainerAri = class _JiraSecurityContainerAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._providerAppId = opts.resourceIdSegmentValues.providerAppId, this._securityContainerId = opts.resourceIdSegmentValues.securityContainerId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get providerAppId() {
    return this._providerAppId;
  }
  get securityContainerId() {
    return this._securityContainerId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraSecurityContainerAriStaticOpts.qualifier,
      platformQualifier: jiraSecurityContainerAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraSecurityContainerAriStaticOpts.resourceOwner,
      resourceType: jiraSecurityContainerAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.providerAppId}/${opts.securityContainerId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        providerAppId: opts.providerAppId,
        securityContainerId: opts.securityContainerId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraSecurityContainerAriStaticOpts);
    return new _JiraSecurityContainerAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraSecurityContainerAriStaticOpts);
    return new _JiraSecurityContainerAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      providerAppId: this.providerAppId,
      securityContainerId: this.securityContainerId
    };
  }
};

// src/jira/security-level/types.ts
var JiraSecurityLevelAriResourceOwner = "jira", JiraSecurityLevelAriResourceType = "security-level";

// src/jira/security-level/manifest.ts
var jiraSecurityLevelAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraSecurityLevelAriResourceOwner,
  resourceType: JiraSecurityLevelAriResourceType,
  resourceIdSlug: "activation/{activationId}/{securityLevelId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    securityLevelId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/security-level/index.ts
var JiraSecurityLevelAri = class _JiraSecurityLevelAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._securityLevelId = opts.resourceIdSegmentValues.securityLevelId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get securityLevelId() {
    return this._securityLevelId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraSecurityLevelAriStaticOpts.qualifier,
      platformQualifier: jiraSecurityLevelAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraSecurityLevelAriStaticOpts.resourceOwner,
      resourceType: jiraSecurityLevelAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.securityLevelId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        securityLevelId: opts.securityLevelId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraSecurityLevelAriStaticOpts);
    return new _JiraSecurityLevelAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraSecurityLevelAriStaticOpts);
    return new _JiraSecurityLevelAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      securityLevelId: this.securityLevelId
    };
  }
};

// src/jira/security-workspace/types.ts
var JiraSecurityWorkspaceAriResourceOwner = "jira", JiraSecurityWorkspaceAriResourceType = "security-workspace";

// src/jira/security-workspace/manifest.ts
var jiraSecurityWorkspaceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraSecurityWorkspaceAriResourceOwner,
  resourceType: JiraSecurityWorkspaceAriResourceType,
  resourceIdSlug: "activation/{activationId}/{providerAppId}/{securityWorkspaceId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    providerAppId: /[a-zA-Z0-9-._]+/,
    // eslint-disable-line no-useless-escape
    securityWorkspaceId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/security-workspace/index.ts
var JiraSecurityWorkspaceAri = class _JiraSecurityWorkspaceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._providerAppId = opts.resourceIdSegmentValues.providerAppId, this._securityWorkspaceId = opts.resourceIdSegmentValues.securityWorkspaceId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get providerAppId() {
    return this._providerAppId;
  }
  get securityWorkspaceId() {
    return this._securityWorkspaceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraSecurityWorkspaceAriStaticOpts.qualifier,
      platformQualifier: jiraSecurityWorkspaceAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraSecurityWorkspaceAriStaticOpts.resourceOwner,
      resourceType: jiraSecurityWorkspaceAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.providerAppId}/${opts.securityWorkspaceId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        providerAppId: opts.providerAppId,
        securityWorkspaceId: opts.securityWorkspaceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraSecurityWorkspaceAriStaticOpts);
    return new _JiraSecurityWorkspaceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraSecurityWorkspaceAriStaticOpts);
    return new _JiraSecurityWorkspaceAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      providerAppId: this.providerAppId,
      securityWorkspaceId: this.securityWorkspaceId
    };
  }
};

// src/jira/site/types.ts
var JiraSiteAriResourceOwner = "jira", JiraSiteAriResourceType = "site";

// src/jira/site/manifest.ts
var jiraSiteAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: JiraSiteAriResourceOwner,
  resourceType: JiraSiteAriResourceType,
  resourceIdSlug: "{siteId}",
  resourceIdSegmentFormats: {
    siteId: /[a-zA-Z0-9\-]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/site/index.ts
var JiraSiteAri = class _JiraSiteAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.resourceIdSegmentValues.siteId;
  }
  get siteId() {
    return this._siteId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraSiteAriStaticOpts.qualifier,
      platformQualifier: jiraSiteAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: jiraSiteAriStaticOpts.resourceOwner,
      resourceType: jiraSiteAriStaticOpts.resourceType,
      resourceId: `${opts.siteId}`,
      resourceIdSegmentValues: {
        siteId: opts.siteId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraSiteAriStaticOpts);
    return new _JiraSiteAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraSiteAriStaticOpts);
    return new _JiraSiteAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId
    };
  }
};

// src/jira/sprint/types.ts
var JiraSprintAriResourceOwner = "jira", JiraSprintAriResourceType = "sprint";

// src/jira/sprint/manifest.ts
var jiraSprintAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraSprintAriResourceOwner,
  resourceType: JiraSprintAriResourceType,
  resourceIdSlug: "activation/{activationId}/{sprintId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    sprintId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/sprint/index.ts
var JiraSprintAri = class _JiraSprintAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._sprintId = opts.resourceIdSegmentValues.sprintId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get sprintId() {
    return this._sprintId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraSprintAriStaticOpts.qualifier,
      platformQualifier: jiraSprintAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraSprintAriStaticOpts.resourceOwner,
      resourceType: jiraSprintAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.sprintId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        sprintId: opts.sprintId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraSprintAriStaticOpts);
    return new _JiraSprintAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraSprintAriStaticOpts);
    return new _JiraSprintAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      sprintId: this.sprintId
    };
  }
};

// src/jira/user-broadcast-message/types.ts
var JiraUserBroadcastMessageAriResourceOwner = "jira", JiraUserBroadcastMessageAriResourceType = "user-broadcast-message";

// src/jira/user-broadcast-message/manifest.ts
var jiraUserBroadcastMessageAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraUserBroadcastMessageAriResourceOwner,
  resourceType: JiraUserBroadcastMessageAriResourceType,
  resourceIdSlug: "activation/{activationId}/{broadcastMessageId}/{userId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    broadcastMessageId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    userId: /[a-zA-Z0-9_\-\:]{1,128}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/user-broadcast-message/index.ts
var JiraUserBroadcastMessageAri = class _JiraUserBroadcastMessageAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._broadcastMessageId = opts.resourceIdSegmentValues.broadcastMessageId, this._userId = opts.resourceIdSegmentValues.userId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get broadcastMessageId() {
    return this._broadcastMessageId;
  }
  get userId() {
    return this._userId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraUserBroadcastMessageAriStaticOpts.qualifier,
      platformQualifier: jiraUserBroadcastMessageAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraUserBroadcastMessageAriStaticOpts.resourceOwner,
      resourceType: jiraUserBroadcastMessageAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.broadcastMessageId}/${opts.userId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        broadcastMessageId: opts.broadcastMessageId,
        userId: opts.userId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraUserBroadcastMessageAriStaticOpts);
    return new _JiraUserBroadcastMessageAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraUserBroadcastMessageAriStaticOpts);
    return new _JiraUserBroadcastMessageAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      broadcastMessageId: this.broadcastMessageId,
      userId: this.userId
    };
  }
};

// src/jira/version/types.ts
var JiraVersionAriResourceOwner = "jira", JiraVersionAriResourceType = "version";

// src/jira/version/manifest.ts
var jiraVersionAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraVersionAriResourceOwner,
  resourceType: JiraVersionAriResourceType,
  resourceIdSlug: "activation/{activationId}/{versionId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    versionId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/version/index.ts
var JiraVersionAri = class _JiraVersionAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._versionId = opts.resourceIdSegmentValues.versionId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get versionId() {
    return this._versionId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraVersionAriStaticOpts.qualifier,
      platformQualifier: jiraVersionAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraVersionAriStaticOpts.resourceOwner,
      resourceType: jiraVersionAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.versionId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        versionId: opts.versionId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraVersionAriStaticOpts);
    return new _JiraVersionAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraVersionAriStaticOpts);
    return new _JiraVersionAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      versionId: this.versionId
    };
  }
};

// src/jira/version-approver/types.ts
var JiraVersionApproverAriResourceOwner = "jira", JiraVersionApproverAriResourceType = "version-approver";

// src/jira/version-approver/manifest.ts
var jiraVersionApproverAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraVersionApproverAriResourceOwner,
  resourceType: JiraVersionApproverAriResourceType,
  resourceIdSlug: "activation/{activationId}/{versionId}/{approverId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    versionId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/,
    // eslint-disable-line no-useless-escape
    approverId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/version-approver/index.ts
var JiraVersionApproverAri = class _JiraVersionApproverAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._versionId = opts.resourceIdSegmentValues.versionId, this._approverId = opts.resourceIdSegmentValues.approverId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get versionId() {
    return this._versionId;
  }
  get approverId() {
    return this._approverId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraVersionApproverAriStaticOpts.qualifier,
      platformQualifier: jiraVersionApproverAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraVersionApproverAriStaticOpts.resourceOwner,
      resourceType: jiraVersionApproverAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.versionId}/${opts.approverId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        versionId: opts.versionId,
        approverId: opts.approverId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraVersionApproverAriStaticOpts);
    return new _JiraVersionApproverAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraVersionApproverAriStaticOpts);
    return new _JiraVersionApproverAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      versionId: this.versionId,
      approverId: this.approverId
    };
  }
};

// src/jira/vulnerability/types.ts
var JiraVulnerabilityAriResourceOwner = "jira", JiraVulnerabilityAriResourceType = "vulnerability";

// src/jira/vulnerability/manifest.ts
var jiraVulnerabilityAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraVulnerabilityAriResourceOwner,
  resourceType: JiraVulnerabilityAriResourceType,
  resourceIdSlug: "activation/{activationId}/{vulnerabilityId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    vulnerabilityId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/vulnerability/index.ts
var JiraVulnerabilityAri = class _JiraVulnerabilityAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._vulnerabilityId = opts.resourceIdSegmentValues.vulnerabilityId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get vulnerabilityId() {
    return this._vulnerabilityId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraVulnerabilityAriStaticOpts.qualifier,
      platformQualifier: jiraVulnerabilityAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraVulnerabilityAriStaticOpts.resourceOwner,
      resourceType: jiraVulnerabilityAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.vulnerabilityId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        vulnerabilityId: opts.vulnerabilityId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraVulnerabilityAriStaticOpts);
    return new _JiraVulnerabilityAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraVulnerabilityAriStaticOpts);
    return new _JiraVulnerabilityAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      vulnerabilityId: this.vulnerabilityId
    };
  }
};

// src/jira/vulnerability-history/types.ts
var JiraVulnerabilityHistoryAriResourceOwner = "jira", JiraVulnerabilityHistoryAriResourceType = "vulnerability-history";

// src/jira/vulnerability-history/manifest.ts
var jiraVulnerabilityHistoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraVulnerabilityHistoryAriResourceOwner,
  resourceType: JiraVulnerabilityHistoryAriResourceType,
  resourceIdSlug: "activation/{activationId}/{vulnerabilityId}/{updateSequenceNumber}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    vulnerabilityId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    updateSequenceNumber: /\d+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/vulnerability-history/index.ts
var JiraVulnerabilityHistoryAri = class _JiraVulnerabilityHistoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._vulnerabilityId = opts.resourceIdSegmentValues.vulnerabilityId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get vulnerabilityId() {
    return this._vulnerabilityId;
  }
  get updateSequenceNumber() {
    return this._updateSequenceNumber;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraVulnerabilityHistoryAriStaticOpts.qualifier,
      platformQualifier: jiraVulnerabilityHistoryAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraVulnerabilityHistoryAriStaticOpts.resourceOwner,
      resourceType: jiraVulnerabilityHistoryAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.vulnerabilityId}/${opts.updateSequenceNumber}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        vulnerabilityId: opts.vulnerabilityId,
        updateSequenceNumber: opts.updateSequenceNumber
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraVulnerabilityHistoryAriStaticOpts);
    return new _JiraVulnerabilityHistoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraVulnerabilityHistoryAriStaticOpts);
    return new _JiraVulnerabilityHistoryAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      vulnerabilityId: this.vulnerabilityId,
      updateSequenceNumber: this.updateSequenceNumber
    };
  }
};

// src/jira/workflow/types.ts
var JiraWorkflowAriResourceOwner = "jira", JiraWorkflowAriResourceType = "workflow";

// src/jira/workflow/manifest.ts
var jiraWorkflowAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraWorkflowAriResourceOwner,
  resourceType: JiraWorkflowAriResourceType,
  resourceIdSlug: "activation/{activationId}/{workflowId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    workflowId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/workflow/index.ts
var JiraWorkflowAri = class _JiraWorkflowAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._workflowId = opts.resourceIdSegmentValues.workflowId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get workflowId() {
    return this._workflowId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraWorkflowAriStaticOpts.qualifier,
      platformQualifier: jiraWorkflowAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraWorkflowAriStaticOpts.resourceOwner,
      resourceType: jiraWorkflowAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.workflowId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        workflowId: opts.workflowId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraWorkflowAriStaticOpts);
    return new _JiraWorkflowAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraWorkflowAriStaticOpts);
    return new _JiraWorkflowAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      workflowId: this.workflowId
    };
  }
};

// src/jira/workflow-scheme/types.ts
var JiraWorkflowSchemeAriResourceOwner = "jira", JiraWorkflowSchemeAriResourceType = "workflow-scheme";

// src/jira/workflow-scheme/manifest.ts
var jiraWorkflowSchemeAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraWorkflowSchemeAriResourceOwner,
  resourceType: JiraWorkflowSchemeAriResourceType,
  resourceIdSlug: "activation/{activationId}/{workflowSchemeId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    workflowSchemeId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/workflow-scheme/index.ts
var JiraWorkflowSchemeAri = class _JiraWorkflowSchemeAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._workflowSchemeId = opts.resourceIdSegmentValues.workflowSchemeId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get workflowSchemeId() {
    return this._workflowSchemeId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraWorkflowSchemeAriStaticOpts.qualifier,
      platformQualifier: jiraWorkflowSchemeAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraWorkflowSchemeAriStaticOpts.resourceOwner,
      resourceType: jiraWorkflowSchemeAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.workflowSchemeId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        workflowSchemeId: opts.workflowSchemeId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraWorkflowSchemeAriStaticOpts);
    return new _JiraWorkflowSchemeAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraWorkflowSchemeAriStaticOpts);
    return new _JiraWorkflowSchemeAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      workflowSchemeId: this.workflowSchemeId
    };
  }
};

// src/jira/worklog/types.ts
var JiraWorklogAriResourceOwner = "jira", JiraWorklogAriResourceType = "worklog";

// src/jira/worklog/manifest.ts
var jiraWorklogAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraWorklogAriResourceOwner,
  resourceType: JiraWorklogAriResourceType,
  resourceIdSlug: "{worklogId}",
  resourceIdSegmentFormats: {
    worklogId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/worklog/index.ts
var JiraWorklogAri = class _JiraWorklogAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._worklogId = opts.resourceIdSegmentValues.worklogId;
  }
  get siteId() {
    return this._siteId;
  }
  get worklogId() {
    return this._worklogId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraWorklogAriStaticOpts.qualifier,
      platformQualifier: jiraWorklogAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraWorklogAriStaticOpts.resourceOwner,
      resourceType: jiraWorklogAriStaticOpts.resourceType,
      resourceId: `${opts.worklogId}`,
      resourceIdSegmentValues: {
        worklogId: opts.worklogId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraWorklogAriStaticOpts);
    return new _JiraWorklogAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraWorklogAriStaticOpts);
    return new _JiraWorklogAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      worklogId: this.worklogId
    };
  }
};

// src/jira/workspace/types.ts
var JiraWorkspaceAriResourceOwner = "jira", JiraWorkspaceAriResourceType = "workspace";

// src/jira/workspace/manifest.ts
var jiraWorkspaceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9-]+$"),
  resourceOwner: JiraWorkspaceAriResourceOwner,
  resourceType: JiraWorkspaceAriResourceType,
  resourceIdSlug: "{activationId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/workspace/index.ts
var JiraWorkspaceAri = class _JiraWorkspaceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraWorkspaceAriStaticOpts.qualifier,
      platformQualifier: jiraWorkspaceAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraWorkspaceAriStaticOpts.resourceOwner,
      resourceType: jiraWorkspaceAriStaticOpts.resourceType,
      resourceId: `${opts.activationId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraWorkspaceAriStaticOpts);
    return new _JiraWorkspaceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraWorkspaceAriStaticOpts);
    return new _JiraWorkspaceAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId
    };
  }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  JiraAnnouncementBannerAri,
  JiraAvailableFieldsAri,
  JiraBranchAri,
  JiraBranchHistoryAri,
  JiraBuildAri,
  JiraBuildHistoryAri,
  JiraBulkOperationTaskAri,
  JiraCommentAri,
  JiraCommitAri,
  JiraComponentAri,
  JiraConnectAppAri,
  JiraDashboardAri,
  JiraDeploymentAri,
  JiraDeploymentHistoryAri,
  JiraDesignAri,
  JiraDesignHistoryAri,
  JiraDevopsComponentAri,
  JiraDocumentAri,
  JiraDocumentHistoryAri,
  JiraEntitlementAri,
  JiraEntityPropertyAri,
  JiraFavouriteAri,
  JiraFeatureFlagAri,
  JiraFeatureFlagHistoryAri,
  JiraFilterAri,
  JiraFilterEmailSubscriptionAri,
  JiraIncidentAri,
  JiraIncidentHistoryAri,
  JiraIssueAri,
  JiraIssueAttachmentAri,
  JiraIssueCommentAri,
  JiraIssueFieldMetadataAri,
  JiraIssueFieldOptionAri,
  JiraIssueHistoryAri,
  JiraIssueLinkAri,
  JiraIssueLinkTypeAri,
  JiraIssueRemoteLinkAri,
  JiraIssueSearchViewAri,
  JiraIssueStatusAri,
  JiraIssueTypeAri,
  JiraIssueTypeSchemeAri,
  JiraIssueTypeSchemeMappingAri,
  JiraIssueWorklogAri,
  JiraIssuefieldvalueAri,
  JiraNavigationConfigAri,
  JiraNavigationItemAri,
  JiraNotificationTypeAri,
  JiraNotificationTypeSchemeAri,
  JiraNotificationUserPreferenceAri,
  JiraOperationsWorkspaceAri,
  JiraPermissionSchemeAri,
  JiraPlanAri,
  JiraPlanCrossProjectScenarioVersionAri,
  JiraPlanCrossProjectVersionAri,
  JiraPlanScenarioAri,
  JiraPlanScenarioIssueAri,
  JiraPlanScenarioIssueFieldAri,
  JiraPlanScenarioVersionAri,
  JiraPostIncidentReviewAri,
  JiraPostIncidentReviewHistoryAri,
  JiraPostIncidentReviewLinkAri,
  JiraPriorityAri,
  JiraProductAri,
  JiraProjectAri,
  JiraProjectCategoryAri,
  JiraProjectFeatureAri,
  JiraProjectOverviewAri,
  JiraProjectRoleActorAri,
  JiraProjectShortcutAri,
  JiraProjectTypeAri,
  JiraPullRequestAri,
  JiraPullRequestHistoryAri,
  JiraRemoteLinkAri,
  JiraRemoteLinkHistoryAri,
  JiraRepositoryAri,
  JiraResolutionAri,
  JiraResourceUsageMetricAri,
  JiraResourceUsageRecommendationAri,
  JiraRoleAri,
  JiraScreenTabAri,
  JiraSecurityContainerAri,
  JiraSecurityLevelAri,
  JiraSecurityWorkspaceAri,
  JiraSiteAri,
  JiraSprintAri,
  JiraUserBroadcastMessageAri,
  JiraVersionApproverAri,
  JiraVersionAri,
  JiraVulnerabilityAri,
  JiraVulnerabilityHistoryAri,
  JiraWorkflowAri,
  JiraWorkflowSchemeAri,
  JiraWorklogAri,
  JiraWorkspaceAri
});
