import {
  PlatformOrgUserAriResourceOwner,
  PlatformOrgUserAriResourceType
} from "./chunk-REH6WMJF.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/platform/org-user/manifest.ts
var platformOrgUserAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: PlatformOrgUserAriResourceOwner,
  resourceType: PlatformOrgUserAriResourceType,
  resourceIdSlug: "{orgId}/{userId}",
  resourceIdSegmentFormats: {
    orgId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    userId: /[a-zA-Z0-9_\-\:]{1,128}/
    // eslint-disable-line no-useless-escape
  }
};

// src/platform/org-user/index.ts
var PlatformOrgUserAri = class _PlatformOrgUserAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._orgId = opts.resourceIdSegmentValues.orgId, this._userId = opts.resourceIdSegmentValues.userId;
  }
  get orgId() {
    return this._orgId;
  }
  get userId() {
    return this._userId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: platformOrgUserAriStaticOpts.qualifier,
      platformQualifier: platformOrgUserAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: platformOrgUserAriStaticOpts.resourceOwner,
      resourceType: platformOrgUserAriStaticOpts.resourceType,
      resourceId: `${opts.orgId}/${opts.userId}`,
      resourceIdSegmentValues: {
        orgId: opts.orgId,
        userId: opts.userId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, platformOrgUserAriStaticOpts);
    return new _PlatformOrgUserAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, platformOrgUserAriStaticOpts);
    return new _PlatformOrgUserAri(opts);
  }
  getVariables() {
    return {
      orgId: this.orgId,
      userId: this.userId
    };
  }
};

export {
  PlatformOrgUserAri
};
