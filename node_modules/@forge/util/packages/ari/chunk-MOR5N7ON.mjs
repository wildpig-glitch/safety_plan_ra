import {
  OpsgenieEventAriResourceOwner,
  OpsgenieEventAriResourceType
} from "./chunk-PW5GVXRG.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/opsgenie/event/manifest.ts
var opsgenieEventAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: OpsgenieEventAriResourceOwner,
  resourceType: OpsgenieEventAriResourceType,
  resourceIdSlug: "{eventType}/workspace/{workspaceId}/event/{eventId}",
  resourceIdSegmentFormats: {
    eventType: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    eventId: /[!a-zA-Z0-9\-_.~@:{}=]+(\/[!a-zA-Z0-9\-_.~@:{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/opsgenie/event/index.ts
var OpsgenieEventAri = class _OpsgenieEventAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._eventType = opts.resourceIdSegmentValues.eventType, this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._eventId = opts.resourceIdSegmentValues.eventId;
  }
  get eventType() {
    return this._eventType;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get eventId() {
    return this._eventId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: opsgenieEventAriStaticOpts.qualifier,
      platformQualifier: opsgenieEventAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: opsgenieEventAriStaticOpts.resourceOwner,
      resourceType: opsgenieEventAriStaticOpts.resourceType,
      resourceId: `${opts.eventType}/workspace/${opts.workspaceId}/event/${opts.eventId}`,
      resourceIdSegmentValues: {
        eventType: opts.eventType,
        workspaceId: opts.workspaceId,
        eventId: opts.eventId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieEventAriStaticOpts);
    return new _OpsgenieEventAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, opsgenieEventAriStaticOpts);
    return new _OpsgenieEventAri(opts);
  }
  getVariables() {
    return {
      eventType: this.eventType,
      workspaceId: this.workspaceId,
      eventId: this.eventId
    };
  }
};

export {
  OpsgenieEventAri
};
