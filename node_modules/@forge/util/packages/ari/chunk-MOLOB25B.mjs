import {
  HelpPortalAriResourceOwner,
  HelpPortalAriResourceType
} from "./chunk-DEFOWKTU.mjs";
import {
  RegisteredAri
} from "./chunk-CLQNXEWF.mjs";
import {
  AriParser
} from "./chunk-HNZGDVUS.mjs";

// src/help/portal/manifest.ts
var helpPortalAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: HelpPortalAriResourceOwner,
  resourceType: HelpPortalAriResourceType,
  resourceIdSlug: "{activationId}/{helpObjectId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    helpObjectId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/help/portal/index.ts
var HelpPortalAri = class _HelpPortalAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._helpObjectId = opts.resourceIdSegmentValues.helpObjectId;
  }
  get activationId() {
    return this._activationId;
  }
  get helpObjectId() {
    return this._helpObjectId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: helpPortalAriStaticOpts.qualifier,
      platformQualifier: helpPortalAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: helpPortalAriStaticOpts.resourceOwner,
      resourceType: helpPortalAriStaticOpts.resourceType,
      resourceId: `${opts.activationId}/${opts.helpObjectId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        helpObjectId: opts.helpObjectId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, helpPortalAriStaticOpts);
    return new _HelpPortalAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, helpPortalAriStaticOpts);
    return new _HelpPortalAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      helpObjectId: this.helpObjectId
    };
  }
};

export {
  HelpPortalAri
};
