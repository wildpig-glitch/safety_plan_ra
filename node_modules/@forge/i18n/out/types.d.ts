import { type ForgeSupportedLocaleCode } from './constants';
export { ForgeSupportedLocaleCode };
declare type TranslationsResources = [
    {
        key: ForgeSupportedLocaleCode;
        path: string;
    },
    ...{
        key: ForgeSupportedLocaleCode;
        path: string;
    }[]
];
declare type TranslationsFallback = {
    [key in ForgeSupportedLocaleCode]?: ForgeSupportedLocaleCode[];
} & {
    default: ForgeSupportedLocaleCode;
};
export interface Translations {
    resources: TranslationsResources;
    fallback: TranslationsFallback;
}
declare type I18nInfoTranslations = Record<string, {
    [key in ForgeSupportedLocaleCode]?: string;
}>;
interface I18nInfoConfig {
    locales: ForgeSupportedLocaleCode[];
    fallback: Translations['fallback'];
}
export interface I18nInfo {
    translations: I18nInfoTranslations;
    config: I18nInfoConfig;
}
export declare type I18nValue = {
    i18n: string;
};
//# sourceMappingURL=types.d.ts.map